window = {
	name = "combat_window"
	size = { 100% 100% }
	alwaystransparent = yes
	gfxtype = windowgfx
	movable = no
	layer = middle
	allow_outside = yes

	button = {
		visible = "[InDebugMode]"
		onclick = "[ExecuteConsoleCommand('tick_day')]"
		shortcut = confirm
	}

	# alpha = "[Select_float( GetVariableSystem.Exists('hide_battle_view'), '(float)0.05', '(float)1.0' )]"

	state = {
		name = _show
		position = { 0 0 }
		duration = 0.05
		bezier = { 0.5 0 1 0.5 }
		alpha = 1
		on_start = "[PdxGuiTriggerAllAnimations('show_battle_side')]"

		on_start = "[GetScriptedGui('bbv_clear_max_maa').Execute( GuiScope.SetRoot( CombatWindow.GetCombat.MakeScope ).End )]"

		on_finish = "[GetScriptedGui('grab_knights').Execute( GuiScope.SetRoot( CombatWindow.GetCombat.MakeScope ).End )]"

		on_finish = "[PdxGuiTriggerAllAnimations('bbv_grab_maa_values')]"
		on_finish = "[GetVariableSystem.Clear('hide_battle_view')]"
		# on_finish = "[GetVariableSystem.Clear('big_battle')]"
		# on_finish = "[PdxGuiWidget.FindChild('battle_big').Show]"
		# on_finish = "[PdxGuiWidget.FindChild('maa_vbox').Show]"
		# on_finish = "[CloseGameView(AddTextIf(Not(GetVariableSystem.Exists('big_battle')), 'holding_view'))]"
		# on_finish = "[CloseGameView(AddTextIf(Not(GetVariableSystem.Exists('big_battle')), 'character'))]"
		start_sound = {
			soundeffect = "event:/SFX/UI/Generic/Windows/sfx_ui_generic_window_standard_show"

		}
	}

	state = {
		name = _hide
		position = { 0 5 }
		duration = 0.1
		bezier = { 0.5 0 1 0.5 }
		alpha = 0
		on_finish = "[GetVariableSystem.Set('minimize_battle_tip', 'yes')]"
		on_start = "[PdxGuiTriggerAllAnimations('hide_battle_side')]"
		on_finish = "[GetVariableSystem.Clear('hide_battle_view')]"
		# on_start = "[PdxGuiWidget.FindChild('battle_big').Hide]"
		# on_start = "[PdxGuiWidget.FindChild('maa_vbox').Hide]"

		start_sound = {
			soundeffect = "event:/SFX/UI/Generic/Windows/sfx_ui_generic_window_standard_hide"

		}
	}



	widget = {
		size = { 100% 100% }
		alwaystransparent = yes

		state = {
			name = hide_me
			trigger_when = "[GetVariableSystem.Exists('hide_battle_view')]"
			alpha = 0
			duration = 0.1
		}

		state = {
			name = show_me
			trigger_when = "[Not(GetVariableSystem.Exists('hide_battle_view'))]"
			alpha = 1
			duration = 0.05
		}

		widget = {

			state = {
				name = "phase_change"
				alpha = 1
			}

			state = {
				name = "daily_tick"
				on_finish = "[GetScriptedGui('grab_knights').Execute( GuiScope.SetRoot( CombatWindow.GetCombat.MakeScope ).End )]"
				on_finish = "[GetScriptedGui('bbv_clear_max_maa').Execute( GuiScope.SetRoot( CombatWindow.GetCombat.MakeScope ).End )]"
				alpha = 1
				next = "grab_maa"

				on_finish = "[GetScriptedGui('bbv_count_battle_days').Execute( GuiScope.SetRoot( CombatWindow.GetCombat.MakeScope ).End )]"
			}

			state = {
				on_finish = "[PdxGuiTriggerAllAnimations('bbv_grab_maa_values')]"
				name = "grab_maa"
				delay = 0.001
			}

			state = {
				name = "new_battle_event"
				alpha = 1
			}
		}


		# split view
		# should be visible by default
		widget = {
			size = { 100% 100% }
			visible = "[Not(GetVariableSystem.Exists('big_battle'))]"
			datacontext = "[CombatWindow.GetCombat.GetProvince.GetTerrain]"
			alwaystransparent = yes

			state = {
				name = _show
				on_start = "[PdxGuiTriggerAllAnimations('show_battle_side')]"
			}

			# TODO doesn't work for some reason
			state = {
				name = _hide
				on_finish = "[PdxGuiTriggerAllAnimations('hide_battle_side')]"
			}

			widget = {
				layoutpolicy_horizontal = expanding
				size = { 100% 100% }
				alwaystransparent = yes
				# margin_top = 45
				blockoverride "size" {
					size = { 560 95 }
				}
				blockoverride "compact_size" {
					size = { 560 50 }
				}
				blockoverride "status" {
					visible = no
				}
				blockoverride "scrollbox_background" {
				}
				blockoverride "scrollbox_background_fade" {
				}
				blockoverride "knight_wrap" {
					datamodel_wrap = 8
				}

				battle_edge_bg = {
					blockoverride "bg_alpha" {
						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
							spriteType = Corneredstretched
							spriteborder = { 0 0 }
							blend_mode = alphamultiply
							alpha = 1
							mirror = horizontal
						}
					}
				}

				battle_edge_bg = {
					parentanchor = right
					blockoverride "mirror" {

					}
					blockoverride "bg_alpha" {
						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
							spriteType = Corneredstretched
							spriteborder = { 0 0 }
							blend_mode = alphamultiply
							alpha = 1
						}
					}
				}

				# left side
				scrollbox = {
					# visible = "[And(Not(IsGameViewOpen('character')), Not(IsGameViewOpen('holding_view')))]"
					visible = "[And(Not(IsLeftWindowOpen), Not(IsBottomLeftWindowOpen))]"
					size = { 600 100% }

					state = {
						name = hide_battle_side
						trigger_when = "[GetVariableSystem.Exists('hide_battle_view')]"
						position_x = -50
						duration = 0.1
					}
					state = {
						name = show_battle_side
						trigger_when = "[Not(GetVariableSystem.Exists('hide_battle_view'))]"
						position_x = 0
						duration = 0.05
					}

					# blockoverride "bg_margins" {
					# 	using = battle_trans_window
					# }
					# using = Window_Background
					#
					# using = background_battle_tall
					blockoverride "scrollbox_margins" {
						margin_right = 10
					}

					blockoverride "scrollbox_content" {

						vbox_combat_side_left = {
							# margin_bottom = 125
						}
					}
				}

				widget = {
					size = { 600 100% }
					parentanchor = right
					scissor = yes
					#
					# blockoverride "bg_margins" {
					# 	using = battle_trans_window
					# }
					# using = Window_Background
					blockoverride "battle_bg_margins" {
						margin_right = 20
						margin_top = 50
					}

					widget = {
						size = "[PdxGetWidgetScreenSize( PdxGuiWidget.AccessParent.AccessParent.Self)]"
						# using = background_battle_tall
						widgetanchor = right
						position = { 600 0 }
					}
					# widget = {
					# 	size = { 10 100% }
					# 	position = { -20 0 }
					# 	using = Window_Background
					# 	modify_texture = {
					# 		texture = "gfx/interface/component_masks/mask_rough_edges.dds"
					# 		spriteType = Corneredtiled
					# 		spriteborder = { 20 20 }
					# 		blend_mode = alphamultiply
					# 		texture_density = 1
					# 	}
					# }

					# icon = {
					# 	size = { 40 100% }
					# 	position = { -30 0 }
					# 	texture = "gfx/interface/component_tiles/tile_window_background.dds"
					# 	spriteType = Corneredtiled
					# 	spriteborder = { 18 0 }
					# 	texture_density = 2
					#
					# 	modify_texture = {
					# 		texture = "gfx/interface/component_overlay/overlay_effect.dds"
					# 		blend_mode = overlay
					# 	}
					#
					# 	modify_texture = {
					# 		texture = "gfx/interface/component_masks/mask_rough_edges.dds"
					# 		spriteType = Corneredtiled
					# 		spriteborder = { 20 20 }
					# 		blend_mode = alphamultiply
					# 		texture_density = 1
					# 	}
					# }
				}

				scrollbox = {
					visible = "[Not(IsRightWindowOpen)]"
					parentanchor = right
					alwaystransparent = no
					state = {
						name = hide_battle_side
						trigger_when = "[GetVariableSystem.Exists('hide_battle_view')]"
						position_x = 50
						duration = 0.1
					}
					state = {
						name = show_battle_side
						trigger_when = "[Not(GetVariableSystem.Exists('hide_battle_view'))]"
						position_x = 0
						duration = 0.05
					}
					size = { 600 100% }
					blockoverride "scrollbox_margins" {}

					blockoverride "scrollbox_content" {

						vbox_combat_side_right = {
							margin_bottom = 90
						}
					}
				}

				vbox = {
					margin_top = 80
					vbox = {
						layoutpolicy_horizontal = expanding
						spacing = 10
						# visible = no

						# progressbar
						hbox = {
							layoutpolicy_horizontal = expanding

							visible = "[Not(CombatWindow.IsCombatInPursuitPhase)]"
							margin = { 18 0 }

							widget = {
								name = "combat_progress"
								size = { 1320 50 }
								# layoutpolicy_horizontal = expanding
								tooltip = "CV_TT_RELATIVE_SOLDIERS"
								using = tooltip_above

								allow_outside = yes

								using = Animation_ShowHide_Standard

								background = {
									texture = "gfx/interface/progressbars/war_progress_noprogress.dds"
									margin = { 0 -3 }
								}

								background = {
									margin = { 45 60 }
									margin_top = 120
									texture = "gfx/interface/component_masks/mask_fade_circle.dds"
									color = { 0.1 0.1 0.1 0.5 }
								}

								# bar
								widget = {
									size = { 100% 100% }
									scissor = yes

									hbox = {
										margin_top = 5

										icon = {
											layoutpolicy_horizontal = expanding
											layoutpolicy_vertical = expanding
											layoutstretchfactor_horizontal = "[GetProgressBarValueMaxScaled( CombatWindow.GetCombat.GetPowerSlider, '(float)100', '(int32)410' )]"
											size = { 0 0 }

											texture = "gfx/interface/progressbars/progress_grandeur.dds"
											spriteType = Corneredtiled
											spriteborder = { 4 0 }

											modify_texture = {
												name = "bright"
												texture = "gfx/interface/colors/blue.dds"
												blend_mode = colordodge
												alpha = 0.7
											}
											modify_texture = {
												name = "mask"
												texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
												spriteType = Corneredstretched
												spriteborder = { 0 0 }
												blend_mode = alphamultiply
												alpha = 0.35
											}

											modify_texture = {
												name = "flash"
												texture = "gfx/interface/colors/orange.dds"
												blend_mode = colordodge
												alpha = 0
											}

											state = {
												name = "daily_tick_left_most_casualties"
												next = "b"
												duration = 0.05
												using = Animation_Curve_Default

												modify_texture = {
													name = "flash"
													alpha = 0.5
												}
											}

											state = {
												name = "b"
												duration = 0.2
												using = Animation_Curve_Default

												modify_texture = {
													name = "flash"
													alpha = 0
												}
											}

											icon = {
												parentanchor = right|vcenter
												position = { 5 0 }

												size = { 25 100% }
												texture = "gfx/interface/progressbars/progressbar_center_glow.dds"
												color = { 0.9 0.9 0.9 1 }

												state = {
													name = a
													next = b
													trigger_on_create = yes
													duration = 0.2
													alpha = 1
												}

												state = {
													name = b
													next = a
													duration = 0.4
													alpha = 0.85
												}
											}
										}

										icon = {
											layoutpolicy_horizontal = expanding
											layoutpolicy_vertical = expanding
											layoutstretchfactor_horizontal = "[GetProgressBarValueMaxOtherScaled( CombatWindow.GetCombat.GetPowerSlider, '(float)100', '(int32)410' )]"
											size = { 0 0 }

											texture = "gfx/interface/progressbars/progress_grandeur_decrease.dds"
											spriteborder = { 4 0 }
											spriteType = Corneredtiled

											modify_texture = {
												name = "bright"
												texture = "gfx/interface/colors/red.dds"
												blend_mode = colordodge
												alpha = 0.25
											}
											modify_texture = {
												name = "mask"
												texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
												spriteType = Corneredstretched
												spriteborder = { 0 0 }
												blend_mode = alphamultiply
												# mirror = horizontal
												alpha = 0.3
											}

											modify_texture = {
												name = "flash"
												texture = "gfx/interface/colors/orange.dds"
												blend_mode = colordodge
												alpha = 0
											}


											state = {
												name = "daily_tick_right_most_casualties"
												next = "b"
												duration = 0.05
												using = Animation_Curve_Default

												modify_texture = {
													name = "flash"
													alpha = 0.3
												}
											}

											state = {
												name = "b"
												duration = 0.2
												using = Animation_Curve_Default

												modify_texture = {
													name = "flash"
													alpha = 0
												}
											}

											icon = {
												parentanchor = left|vcenter
												position = { -6 0 }
												mirror = horizontal

												size = { 25 100% }
												texture = "gfx/interface/progressbars/progressbar_center_glow.dds"
												color = { 0.9 0.9 0.9 1 }

												state = {
													name = a
													next = b
													trigger_on_create = yes
													duration = 0.2
													alpha = 1
												}

												state = {
													name = b
													next = a
													duration = 0.4
													alpha = 0.85
												}
											}
										}
									}
								}

								# frame
								widget = {
									name = "power_bar_frame"
									parentanchor = top
									size = { 100% 100% }
									alwaystransparent = yes

									background = {
										texture = "gfx/interface/progressbars/siege_frame.dds"
										spriteType = Corneredstretched
										spriteborder = { 30 40 }
										margin = { 5 0 }
										margin_bottom = 10
										texture_density = 2
									}
								}

								# result
								text_label_center = {
									name = "combat_result"
									visible = "[CombatWindow.IsCombatInPursuitPhase]"
									parentanchor = center
									text = "[CombatWindow.GetWonLostLabel]"
									font = TitleFont
									fontsize = 35
									align = nobaseline
									margin_bottom = 0
								}

								# counters
								hbox = {
									layoutpolicy_horizontal = expanding
									spacing = 20
									margin_top = 10

									expand = { }

									widget = {
										visible = no
										size = { 360 0 }
										layoutpolicy_vertical = expanding

										flowcontainer_reinforcements = {
											datacontext = "[CombatWindow.GetLeftSideMainParticipant]"
											# parentanchor = right
											blockoverride "order" {
												righttoleft = yes
											}
										}
									}

									widget = {
										name = "troop_counters"
										size = { 350 55 }
										# layoutpolicy_horizontal = expanding

										widget = {
											size = { 100% 100% }
											visible = "[CombatWindow.IsCombatInPursuitPhase]"

											state = {
												name = _show
												using = Animation_FadeIn_Standard
												duration = 0.8
											}

											state = {
												name = _hide
												using = Animation_FadeOut_Standard
											}

											animation_soldier_loss = {
												visible = "[CombatWindow.IsCombatInPursuitPhase]"
												position = { 55 20 }

												blockoverride "animation_trigger_name"
												{
													name = "daily_tick_left_most_casualties"
												}
											}

											animation_soldier_loss = {
												visible = "[CombatWindow.IsCombatInPursuitPhase]"
												parentanchor = right
												position = { -22 20 }

												blockoverride "animation_trigger_name"
												{
													name = "daily_tick_right_most_casualties"
												}
											}
										}

										flowcontainer = {
											name = "left_soldiers"
											datacontext = "[CombatWindow.GetLeftCombatSide]"
											datacontext = "[CombatSide.GetComposition]"
											tooltip = "[ArmyComposition.GetArmyCompositionTooltip]"
											ignoreinvisible = yes

											# background = {
											# 	margin = { 45 20 }
											# 	texture = "gfx/interface/component_masks/mask_fade_circle.dds"
											# 	color = { 0.2 0.2 0.2 0.8 }
											# }

											flowcontainer = {
												visible = "[And( CombatWindow.IsCombatInPursuitPhase, Not(CombatSide.IsStillFighting ))]"
												spacing = 3

												using = Animation_ShowHide_Standard

												icon = {
													name = "fled_icon_left"
													parentanchor = vcenter
													size = { 25 25 }
													texture = "gfx/interface/icons/icon_retreat.dds"
												}

												text_single = {
													text = "[ArmyComposition.GetSoldierCountString]"
													default_format = "#N;glow_color:{0.1,0.1,0.1,1}"
													fontsize = 25
													align = nobaseline
												}
											}

											container = {
												visible = "[Or( Not(CombatWindow.IsCombatInPursuitPhase), CombatSide.IsStillFighting )]"

												using = Animation_ShowHide_Standard

												flowcontainer = {
													spacing = 3

													icon = {
														name = "icon_soldier"
														parentanchor = vcenter
														texture = "gfx/interface/icons/icon_soldier.dds"
														size = { 25 25 }
													}

													text_single = {
														text = "[CombatSide.GetCurrentFightingMen|0]"
														fontsize = 25
														align = nobaseline
														default_format = "#high;glow_color:{0.1,0.1,0.1,1}"

														text_single = {
															text = "[CombatSide.GetCurrentFightingMen|0]"
															fontsize = 25
															align = nobaseline
															default_format = "#N;glow_color:{0.1,0.1,0.1,1}"

															state = {
																name = "daily_tick_left_most_casualties"
																next = "b"
																duration = 0.1
																using = Animation_Curve_Default
																alpha = 1
																trigger_on_create = yes
															}

															state = {
																name = "b"
																duration = 0.3
																using = Animation_Curve_Default
																alpha = 0
															}
														}

													}

													army_quality_icon = {
														parentanchor = vcenter
													}
												}

												flowcontainer = {
													widgetanchor = right
													position = { -15 7 }
													visible = "[CombatSide.IsStillFighting]"
													tooltip = "COW_TT_SOFT_CASUALTIES_LEFT"
													spacing = 3
													ignoreinvisible = yes

													using = Animation_ShowHide_Standard

													icon = {
														name = "fled_icon_left"
														parentanchor = vcenter
														size = { 20 20 }
														texture = "gfx/interface/icons/icon_retreat.dds"
													}

													text_single = {
														text = "[CombatWindow.GetLeftCombatSide.GetSoftCasualties|0]"
														default_format = "#high;glow_color:{0.1,0.1,0.1,1}"
														align = nobaseline
													}
												}
											}
										}

										# advantage
										widget = {
											size = { 500 25 }
											scissor = yes
											visible = no# "[Not(CombatWindow.IsCombatInPursuitPhase)]"
											parentanchor = hcenter
											position = { 0 12 }

											background = {
												using = Text_Label_Background
												margin_top = 2
												alpha = 0.6
												modify_texture = {
													texture = "gfx/interface/component_masks/mask_fade_horizontal_middle.dds"
													blend_mode = alphamultiply
													# alpha = 0.7
												}
											}

											text_single = {
												parentanchor = hcenter
												position = { 0 -30 }
												text = "[CombatWindow.GetAdvantageDescription]"
											}
										}

										text_label_center = {
											visible = no
											parentanchor = top|hcenter
											position = { 0 1 }
											text = "[CombatWindow.GetName]"
											max_width = 285
											fontsize = 20
											font = TitleFont
											default_format = "#high"
											alpha = 0.5
										}

										flowcontainer = {
											name = "right_soldiers"
											parentanchor = right
											datacontext = "[CombatWindow.GetRightCombatSide]"
											datacontext = "[CombatSide.GetComposition]"
											tooltip = "[ArmyComposition.GetArmyCompositionTooltip]"
											ignoreinvisible = yes

											# background = {
											# 	margin = { 45 20 }
											# 	texture = "gfx/interface/component_masks/mask_fade_circle.dds"
											# 	color = { 0.2 0.2 0.2 0.8 }
											# }

											flowcontainer = {
												visible = "[And( CombatWindow.IsCombatInPursuitPhase, Not(CombatSide.IsStillFighting ))]"
												spacing = 3

												using = Animation_ShowHide_Standard

												icon = {
													name = "fled_icon_left"
													parentanchor = vcenter
													size = { 25 25 }
													texture = "gfx/interface/icons/icon_retreat.dds"
												}

												text_single = {
													text = "[ArmyComposition.GetSoldierCountString]"
													default_format = "#N;glow_color:{0.1,0.1,0.1,1}"
													fontsize = 25
													align = nobaseline
												}

											}

											container = {
												visible = "[Or( Not(CombatWindow.IsCombatInPursuitPhase), CombatSide.IsStillFighting )]"

												using = Animation_ShowHide_Standard

												flowcontainer = {
													spacing = 3

													icon = {
														name = "icon_soldier"
														parentanchor = vcenter
														texture = "gfx/interface/icons/icon_soldier.dds"
														size = { 25 25 }
													}

													text_single = {
														text = "[CombatSide.GetCurrentFightingMen|0]"
														fontsize = 25
														align = nobaseline
														default_format = "#high;glow_color:{0.1,0.1,0.1,1}"

														text_single = {
															text = "[CombatSide.GetCurrentFightingMen|0]"
															fontsize = 25
															align = nobaseline
															default_format = "#N;glow_color:{0.1,0.1,0.1,1}"

															state = {
																name = "daily_tick_right_most_casualties"
																next = "b"
																duration = 0.1
																using = Animation_Curve_Default
																alpha = 1
																trigger_on_create = yes
															}

															state = {
																name = "b"
																duration = 0.3
																using = Animation_Curve_Default
																alpha = 0
															}
														}
													}

													army_quality_icon = {
														parentanchor = vcenter
													}
												}

												flowcontainer = {
													visible = "[CombatSide.IsStillFighting]"
													tooltip = "COW_TT_SOFT_CASUALTIES_RIGHT"
													position = { 55 7 }
													parentanchor = right

													using = Animation_ShowHide_Standard

													icon = {
														name = "fled_icon_left"
														parentanchor = vcenter
														size = { 20 20 }
														texture = "gfx/interface/icons/icon_retreat.dds"
													}

													text_single = {
														text = "[CombatWindow.GetRightCombatSide.GetSoftCasualties|0]"
														default_format = "#medium;glow_color:{0.1,0.1,0.1,1}"
														align = nobaseline
													}
												}
											}
										}

										# text_single = {
										# 	parentanchor = hcenter
										# 	position = { 0 150 }
										# 	raw_text = "[CombatWindow.GetCombat.MakeScope.ScriptValue('bbv_total_combat_size')|0]"
										# }
										#
										# text_single = {
										# 	parentanchor = hcenter
										# 	position = { 0 180 }
										# 	raw_text = "[CombatWindow.GetCombat.MakeScope.ScriptValue('bbv_combat_strength')|0]"
										# }

										# text_single = {
										# 	parentanchor = hcenter
										# 	position = { 0 150 }
										# 	default_format = "v"
										# 	# visible = "[]"
										# 	raw_text = "Max value: [CombatWindow.GetCombat.MakeScope.Var('bbv_max_maa').GetValue|0]"
										# }
									}

									widget = {
										visible = no
										size = { 360 0 }
										layoutpolicy_vertical = expanding

										flowcontainer_reinforcements = {
											parentanchor = right
											datacontext = "[CombatWindow.GetRightSideMainParticipant]"
										}
									}

									expand = { }
								}

								flowcontainer = {
									ignoreinvisible = yes
									direction = vertical

									parentanchor = hcenter
									position = { 0 95 }
									# visible = "[Not(IsGamePaused)]"

									# advantage
									widget = {
										size = { 500 25 }
										scissor = yes
										visible = "[Not(CombatWindow.IsCombatInPursuitPhase)]"
										parentanchor = hcenter

										background = {
											using = Text_Label_Background
											margin_top = 2
											alpha = 1
											modify_texture = {
												texture = "gfx/interface/component_masks/mask_fade_horizontal_middle.dds"
												blend_mode = alphamultiply
												# alpha = 0.7
											}
										}

										text_single = {
											parentanchor = hcenter
											position = { 0 -30 }
											text = "[CombatWindow.GetAdvantageDescription]"
										}
									}

									text_label_center = {
										parentanchor = hcenter
										text = "[CombatWindow.GetName]"
										max_width = 285
										fontsize = 20
										font = TitleFont
										# default_format = "#high"
										alpha = 1
									}

									text_label_center = {
										parentanchor = hcenter
										text = "Days: [CombatWindow.GetCombat.MakeScope.Var('battle_started').GetValue|0]"
										max_width = 185
										fontsize = 20
										font = TitleFont
										default_format = "#high"
									}

								}

								flowcontainer = {
									parentanchor = right|vcenter
									position = { 150 3 }
									spacing = 5
									margin_right = 10

									icon = {
										name = "terrain"
										datacontext = "[CombatWindow.GetCombat.GetProvince.GetTerrain]"
										texture = "[Terrain.GetIcon]"
										size = { 30 30 }
										tooltip = "HOLDING_TERRAIN_TOOLTIP"
										alwaystransparent = no
									}

									button_go_to_my_location = {
										onclick = "[CombatWindow.GoToProvince]"
										tooltip = "GOTO_PROVINCE_TT"
										# onclick = "[GetVariableSystem.Toggle('big_battle')]"
									}

									button_close = {
										shortcut = close_window
										onclick = "[CombatWindow.CloseAndDeselect]"
										tooltip = "CLOSE_LABEL"
									}
								}
							}
						}

						spacer = {
							size = { 0 17 }
							visible = "[CombatWindow.IsCombatInPursuitPhase]"
						}


						# retreat
						widget = {
							tooltip = "[CombatWindow.GetCurrentPhaseTooltip]"
							name = "pursuit_phase"
							visible = "[CombatWindow.IsCombatInPursuitPhase]"
							#visible_at_creation = no
							size = { 450 50 }

							using = Animation_ShowHide_Standard

							background = {
								using = Background_Area
							}

							hbox = {
								margin = { 20 0 }
								margin_top = 5

								hbox = {
									visible = "[CombatWindow.IsRightSideWinning]"
									spacing = 5

									icon = {
										name = "left_side_fled"
										texture = "gfx/interface/icons/icon_fled.dds"
										size = { 35 35 }
									}

									text_single = {
										text = "[CombatWindow.GetLeftCombatSide.GetPursuingRetreatingLabel]"
										using = Font_Size_Medium
										align = nobaseline
										default_format = "#N"
									}
								}

								hbox = {
									visible = "[CombatWindow.IsLeftSideWinning]"
									spacing = 5

									icon = {
										name = "left_side_pursuing"
										texture = "gfx/interface/icons/icon_pursuit.dds"
										size = { 35 35 }
									}

									text_single = {
										text = "[CombatWindow.GetLeftCombatSide.GetPursuingRetreatingLabel]"
										using = Font_Size_Medium
										align = nobaseline
									}

								}

								expand = {}

								hbox = {
									visible = "[CombatWindow.IsLeftSideWinning]"
									spacing = 5

									text_single = {
										text = "[CombatWindow.GetRightCombatSide.GetPursuingRetreatingLabel]"
										using = Font_Size_Medium
										align = nobaseline
										default_format = "#N"
									}

									icon = {
										name = "right_side_fled"
										texture = "gfx/interface/icons/icon_fled.dds"
										size = { 35 35 }
									}
								}

								hbox = {
									visible = "[CombatWindow.IsRightSideWinning]"
									spacing = 5

									text_single = {
										text = "[CombatWindow.GetRightCombatSide.GetPursuingRetreatingLabel]"
										using = Font_Size_Medium
										align = nobaseline
									}

									icon = {
										name = "right_side_pursuing"
										texture = "gfx/interface/icons/icon_pursuit.dds"
										mirror = horizontal
										size = { 35 35 }
									}
								}
							}
						}

						# advantage
						widget = {
							size = { 450 0 }
							allow_outside = yes
							widget = {
								size = { 100% 100% }
								allow_outside = yes
								position = { 0 0 }
								widget = {
									visible = "[Not(CombatWindow.IsCombatInPursuitPhase)]"
									parentanchor = hcenter
									size = { 180 38 }
									position = { 0 -10 }
									scissor = yes
									#
									# widget = {
									# 	size = { 120 70 }
									# 	parentanchor = hcenter
									# 	position = { -128 2 }
									# 	scissor = yes
									# 	datacontext = "[CombatWindow.GetLeftSideCommander]"
									# 	visible = "[Character.IsValid]"
									#
									# 	icon = {
									# 		# size = { 450 64 }
									# 		parentanchor = center
									# 		texture = "gfx/interface/window_combat/combat_advantage_bars.dds"
									# 		mirror = vertical
									# 	}
									#
									# 	text_single = {
									# 		text = "[Character.GetCommanderAdvantage]"
									# 		tooltip = "[Character.GetCommanderAdvantageDesc]"
									# 		parentanchor = hcenter
									# 		margin = { 15 0 }
									# 		position = { -15 7 }
									# 		alpha = 0.8
									# 		default_format = "#high;glow_color:{0.1,0.1,0.1,1.0}"
									# 		align = nobaseline
									# 		using = Font_Size_Big
									# 	}
									# }
									#
									# widget = {
									# 	size = { 120 70 }
									# 	parentanchor = hcenter
									# 	position = { -78 2 }
									# 	scissor = yes
									#
									# 	icon = {
									# 		# size = { 450 64 }
									# 		parentanchor = center
									# 		texture = "gfx/interface/window_combat/combat_advantage_bars.dds"
									# 		mirror = vertical
									#
									# 		modify_texture = {
									# 			name = "flash"
									# 			texture = "gfx/interface/component_effects/effect_shimmer.dds"
									# 			blend_mode = colordodge
									# 			alpha = 0
									# 		}
									#
									# 		state = {
									# 			name = "combat_left_roll"
									# 			next = "b"
									# 			trigger_on_create = yes
									#
									# 			duration = 0.1
									# 			using = Animation_Curve_Default
									#
									# 			modify_texture = {
									# 				name = "flash"
									# 				alpha = 1
									# 			}
									# 		}
									#
									# 		state = {
									# 			name = "b"
									#
									# 			duration = 0.3
									# 			using = Animation_Curve_Default
									#
									# 			modify_texture = {
									# 				name = "flash"
									# 				alpha = 0
									# 			}
									# 		}
									# 	}
									#
									# 	text_single = {
									# 		tooltip = COW_TT_CURRENT_ROLL_LEFT
									# 		parentanchor = hcenter
									# 		margin = { 15 0 }
									# 		position = { -15 7 }
									# 		alpha = 0.8
									# 		text = "[CombatWindow.GetLeftRoll]"
									# 		default_format = "#high;glow_color:{0.1,0.1,0.1,1.0}"
									# 		align = nobaseline
									# 		using = Font_Size_Big
									# 	}
									# }
									#
									# widget = {
									# 	size = { 120 70 }
									# 	parentanchor = hcenter
									# 	position = { 128 2 }
									# 	scissor = yes
									# 	datacontext = "[CombatWindow.GetRightSideCommander]"
									# 	visible = "[Character.IsValid]"
									#
									# 	icon = {
									# 		# size = { 450 64 }
									# 		parentanchor = center
									# 		texture = "gfx/interface/window_combat/combat_advantage_bars.dds"
									# 		mirror = vertical
									# 	}
									#
									# 	text_single = {
									# 		text = "[Character.GetCommanderAdvantage]"
									# 		tooltip = "[Character.GetCommanderAdvantageDesc]"
									# 		parentanchor = hcenter
									# 		margin = { 15 0 }
									# 		position = { 15 7 }
									# 		alpha = 0.8
									# 		default_format = "#high;glow_color:{0.1,0.1,0.1,1.0}"
									# 		align = nobaseline
									# 		using = Font_Size_Big
									# 	}
									# }

									# widget = {
									# 	size = { 120 70 }
									# 	parentanchor = hcenter
									# 	position = { 78 2 }
									# 	scissor = yes
									#
									# 	icon = {
									# 		parentanchor = center
									# 		texture = "gfx/interface/window_combat/combat_advantage_bars.dds"
									# 		mirror = vertical
									#
									# 		modify_texture = {
									# 			name = "flash"
									# 			texture = "gfx/interface/component_effects/effect_shimmer.dds"
									# 			blend_mode = colordodge
									# 			alpha = 0
									# 		}
									#
									# 		state = {
									# 			name = "combat_right_roll"
									# 			next = "b"
									# 			trigger_on_create = yes
									#
									# 			duration = 0.1
									# 			using = Animation_Curve_Default
									#
									# 			modify_texture = {
									# 				name = "flash"
									# 				alpha = 1
									# 			}
									# 		}
									#
									# 		state = {
									# 			name = "b"
									#
									# 			duration = 0.3
									# 			using = Animation_Curve_Default
									#
									# 			modify_texture = {
									# 				name = "flash"
									# 				alpha = 0
									# 			}
									# 		}
									#
									# 	}
									#
									# 	text_single = {
									# 		tooltip = COW_TT_CURRENT_ROLL_RIGHT
									# 		parentanchor = hcenter
									# 		margin = { 15 0 }
									# 		position = { 15 7 }
									# 		alpha = 0.8
									# 		text = "[CombatWindow.GetRightRoll]"
									# 		default_format = "#high;glow_color:{0.1,0.1,0.1,1.0}"
									# 		align = nobaseline
									# 		using = Font_Size_Big
									# 	}
									# }

									icon = {
										parentanchor = hcenter
										mirror = vertical
										position = { 0 -132 }
										glow = {
											glow_radius = 3
											using = Glow_Standard
											using = Color_Black
										}
										name = "center_box"
										size = { 450 170 }
										texture = "gfx/interface/window_combat/combat_info_box.dds"

										modify_texture = {
											name = "1_maneuver"
											visible = "[CombatWindow.IsCombatInManeuverPhase]"
											texture = "gfx/interface/window_combat/combat_info_box_glow.dds"
											blend_mode = colordodge
										}

										modify_texture = {
											name = "2_reteat"
											visible = "[CombatWindow.ShowNoRetreatIcon]"
											texture = "gfx/interface/window_combat/combat_info_box_glow.dds"
											blend_mode = colordodge
											translate_uv = { -0.07 0 }
										}

										modify_texture = {
											name = "3_no_reteat"
											visible = "[CombatWindow.ShowRetreatIcon]"
											texture = "gfx/interface/window_combat/combat_info_box_glow.dds"
											blend_mode = colordodge
											translate_uv = { -0.13 0 }
										}

										modify_texture = {
											name = "4_pursuit"
											visible = "[CombatWindow.IsCombatInPursuitPhase]"
											texture = "gfx/interface/window_combat/combat_info_box_glow.dds"
											blend_mode = colordodge
											translate_uv = { -0.198 0 }
										}

										modify_texture = {
											name = "flash"
											texture = "gfx/interface/window_combat/combat_info_box_glow_full.dds"
											blend_mode = colordodge
											alpha = 0
										}

										state = {
											name = "phase_change"
											next = "b"
											duration = 0.4
											using = Animation_Transition_Start

											modify_texture = {
												name = "flash"
												alpha = 1
											}
										}

										state = {
											name = "b"
											duration = 1
											using = Animation_Transition_End

											modify_texture = {
												name = "flash"
												alpha = 0
											}
										}

										background = {
											texture ="gfx/interface/component_masks/patterns/mask_pattern_02.dds"
											spriteType = Corneredtiled
											color = { 0.6 0.7 0.65 0.3 }
											margin = { -10 0 }
											margin_top = -30

											modify_texture = {
												texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
												blend_mode = alphamultiply
												mirror = vertical
											}
										}

										widget = {
											name = "combat_phases"
											parentanchor = top|hcenter
											position = { 0 10 }
											size = { 120 28 }
											tooltip = "[CombatWindow.GetCurrentPhaseTooltip]"
											using = tooltip_ne
										}

									}
								}

								widget = {
									parentanchor = hcenter
									name = "main_info"
									size = { 100% 100% }
									position = { 0 -112 }
									allow_outside = yes

									vbox = {
										margin = { 10 10 }
										margin_top = 40

										widget = {
											layoutpolicy_horizontal = expanding
											size = { 0 45 }
											allow_outside = yes

											widget = {
												name = "advantage"
												visible = "[Not(CombatWindow.IsCombatInPursuitPhase)]"
												#visible_at_creation = no
												position = { 0 0 }
												size = { 100% 100% }
												tooltip = "[CombatWindow.GetAdvantageDescription]"

												using = Animation_ShowHide_Standard

												hbox = {
													margin = { 40 0 }
													margin_top = 0

													background = {
														texture = "gfx/interface/progressbars/siege_frame.dds"
														spriteType = Corneredstretched
														spriteborder = { 30 40 }
														margin = { -30 0 }
														margin_bottom = -18
														texture_density = 2
													}

													vbox = {
														layoutpolicy_vertical = expanding
														margin_top = 5

														widget = {
															name = "progressbar"
															size = { 145 10 }

															background = {
																texture = "gfx/interface/component_overlay/overlay_stone.dds"
																texture_density = 2
																spritetype = corneredtiled
																color = { 0.3 0.3 0.34 1 }
																alpha = 0.8
															}

															arrow_progressbar_icon = {
																size = { 100% 100% }
																visible = "[GreaterThan_CFixedPoint( CombatWindow.GetAdvantage, '(CFixedPoint)40')]"

																blockoverride "color"
																{
																	using = Color_Blue
																	mirror = horizontal
																}
															}

															hbox = {
																visible = "[And(LessThanOrEqualTo_CFixedPoint( CombatWindow.GetAdvantage, '(CFixedPoint)40'), GreaterThan_CFixedPoint( CombatWindow.GetAdvantage, '(CFixedPoint)0'))]"

																widget = {
																	layoutstretchfactor_horizontal = "[GetProgressBarValueMaxOtherScaled( FixedPointToFloat( CombatWindow.GetAdvantage ), '(float)40', '(int32)145' )]"
																	layoutpolicy_horizontal = expanding
																}

																arrow_progressbar_icon  = {
																	layoutstretchfactor_horizontal = "[GetProgressBarValueMaxScaled( FixedPointToFloat( CombatWindow.GetAdvantage ), '(float)40', '(int32)145' )]"
																	layoutpolicy_horizontal = expanding
																	layoutpolicy_vertical = expanding

																	blockoverride "color"
																	{
																		using = Color_Blue
																		mirror = horizontal
																	}
																}
															}
														}

														expand = {}
													}

													expand = {}

													vbox = {
														layoutpolicy_vertical = expanding
														margin_top = 5

														widget = {
															name = "progressbar"
															size = { 145 10 }

															background = {
																texture = "gfx/interface/component_overlay/overlay_stone.dds"
																texture_density = 2
																spritetype = corneredtiled
																color = { 0.3 0.3 0.34 1 }
																alpha = 0.8
															}

															arrow_progressbar_icon = {
																size = { 100% 100% }
																visible = "[LessThan_CFixedPoint( CombatWindow.GetAdvantage, '(CFixedPoint)-40')]"

																blockoverride "color"
																{
																	using = Color_Red
																}
															}


															hbox = {
																visible = "[And(GreaterThanOrEqualTo_CFixedPoint( CombatWindow.GetAdvantage, '(CFixedPoint)-40'), LessThan_CFixedPoint( CombatWindow.GetAdvantage, '(CFixedPoint)0'))]"

																arrow_progressbar_icon  = {
																	layoutstretchfactor_horizontal = "[GetProgressBarValueMaxScaled( Multiply_float( FixedPointToFloat( CombatWindow.GetAdvantage ), '(float)-1'), '(float)40', '(int32)145' )]"
																	layoutpolicy_horizontal = expanding
																	layoutpolicy_vertical = expanding

																	blockoverride "color"
																	{
																		using = Color_Red
																	}
																}

																widget = {
																	layoutstretchfactor_horizontal = "[GetProgressBarValueMaxOtherScaled( Multiply_float( FixedPointToFloat( CombatWindow.GetAdvantage ), '(float)-1'), '(float)40', '(int32)145' )]"
																	layoutpolicy_horizontal = expanding
																}
															}
														}
														expand = {}
													}
												}

												widget = {
													visible = "[Not(CombatWindow.IsCombatInPursuitPhase)]"
													size = { 400 64 }
													parentanchor = hcenter
													position = { 0 -10 }
													scissor = yes

													icon = {
														parentanchor = hcenter
														size = { 420 64 }
														texture = "gfx/interface/window_combat/combat_advantage_bars.dds"

														modify_texture = {
															name = "swoosh_left"
															texture = "gfx/interface/component_effects/effect_shimmer.dds"
															blend_mode = colordodge
															alpha = 1
															translate_uv = { 0.6 0 }
														}

														modify_texture = {
															name = "swoosh_right"
															texture = "gfx/interface/component_effects/effect_shimmer.dds"
															blend_mode = colordodge
															alpha = 1
															translate_uv = { -0.6 0 }
														}

														modify_texture = {
															name = "flash"
															texture = "gfx/interface/window_combat/combat_info_advantage_glow.dds"
															blend_mode = colordodge
															alpha = 0
														}

														# Left side
														state = {
															name = "combat_left_roll"
															next = "left_b"
															delay = 0.4
															trigger_on_create = yes

															modify_texture = {
																name = "swoosh_left"
																alpha = 0.2
																translate_uv = { 0.6 0 }
															}
														}

														state = {
															name = "left_b"
															next = "left_c"
															duration = 0.3

															modify_texture = {
																name = "swoosh_left"
																alpha = 0.3
																translate_uv = { 0 0 }
															}
														}

														state = {
															name = "left_c"
															next = "left_d"

															duration = 0.1
															using = Animation_Curve_Default

															modify_texture = {
																name = "flash"
																alpha = 0.3
															}

															modify_texture = {
																name = "swoosh_left"
																alpha = 0.2
															}
														}

														state = {
															name = "left_d"
															duration = 0.8
															bezier = { 0 0.8 0.6 1 }

															modify_texture = {
																name = "flash"
																alpha = 0
															}

															modify_texture = {
																name = "swoosh_left"
																alpha = 0
															}
														}


														# Right side
														state = {
															name = "combat_right_roll"
															next = "right_b"
															delay = 0.4
															trigger_on_create = yes

															modify_texture = {
																name = "swoosh_right"
																alpha = 0.2
																translate_uv = { -0.6 0 }
															}
														}

														state = {
															name = "right_b"
															next = "right_c"
															duration = 0.3

															modify_texture = {
																name = "swoosh_right"
																alpha = 0.3
																translate_uv = { 0 0 }
															}
														}

														state = {
															name = "right_c"
															next = "right_d"

															duration = 0.1
															using = Animation_Curve_Default

															modify_texture = {
																name = "flash"
																alpha = 0.3
															}

															modify_texture = {
																name = "swoosh_right"
																alpha = 0.2
															}
														}

														state = {
															name = "right_d"
															duration = 0.8
															bezier = { 0 0.8 0.6 1 }

															modify_texture = {
																name = "flash"
																alpha = 0
															}

															modify_texture = {
																name = "swoosh_right"
																alpha = 0
															}
														}
													}
												}

												widget = {
													size = { 50 50 }
													parentanchor = center
													position = { 0 -5 }

													text_single = {
														name = "advantage"
														parentanchor = center
														text = "COMBAT_WINDOW_ADVANTAGE"
														fontsize = 20
														tooltip = "[CombatWindow.GetAdvantageDescription]"
														default_format = "#high;bold;glow_color:{0.1,0.1,0.1,1.0}"
														align = nobaseline
													}
												}
											}
										}

										expand = {}
									}
								}
							}

						}
					}
					expand = {}
				}
			}

			text_single = {
				position = { 50 5 }
				raw_text = "[NumberOrErrors] errors, FPS: [GetCurrentFps|0]"
				visible = "[Not(InReleaseMode)]"
				background = { using = Background_Area_Border_Solid margin = { 5 0 }}
			}

			# widget = {
			# 	size = { 660 22 }
			# 	using = Window_Decoration_Warfare
			# 	position = { -30 0 }
			# }

			# widget = {
			# 	size = { 690 22 }
			# 	parentanchor = right
			# 	using = Window_Decoration_Warfare
			# 	position = { 60 40 }
			# }

			# button_standard = {
			# 	parentanchor = hcenter
			# 	position = { 0 190 }
			# 	onclick = "[PdxGuiTriggerAllAnimations('bbv_grab_maa_values')]"
			# }
		}


		# fullscreen view
		widget = {
			size = { 100% 100% }
			visible = "[And(GetVariableSystem.HasValue('big_battle', 'big'), Not(GetVariableSystem.Exists('hide_battle_view')))]"
			alwaystransparent = yes

			state = {
				name = _show
				position = { 0 0 }
				duration = 0.2
				bezier = { 0.5 0 1 0.5 }
				alpha = 1
				using = Sound_WindowShow_Standard
			}

			state = {
				name = _hide
				using = Sound_WindowHide_Standard
				position = { 0 5 }
				duration = 0.2
				bezier = { 0.5 0 1 0.5 }
				alpha = 0
			}

			# bg
			margin_battle_background = { }

			widget = {
				size = { 100% 100% }
				name = "battle_big"
				alpha = 1
				alwaystransparent = yes
				# visible = no

				state = {
					name = _show
					duration = 0.25
					alpha = 1
				}

				state = {
					name = _hide
					duration = 0.2
					alpha = 0
				}

				widget = {
					size = { 100% 100% }
					alwaystransparent = yes
					# visible = no

					text_single = {
						position = { 30 60 }
						raw_text = "[NumberOrErrors] errors"
						visible = "[Not(InReleaseMode)]"
						background = { using = Background_Area_Border_Solid margin = { 5 0 }}
					}

					text_label_center = {
						visible = "[And(CombatWindow.IsCombatInPursuitPhase, CombatWindow.IsRightSideWinning)]"
						parentanchor = top|hcenter
						position = { 0 0 }
						fontsize = 30
						text = "game_concept_defeat"
						default_format = "#negative_value;bold;glow_color:{0.1,0.1,0.1,1.0}"

						using = Animation_ShowHide_Standard

						background = {
							texture = "gfx/interface/component_masks/mask_fade_halfcircle.dds"
							margin = { 100 0 }
							margin_bottom = 100
							margin_top = 0
							using = Color_Red
							alpha = 0.3
						}
					}

					text_label_center = {
						visible = "[And(CombatWindow.IsCombatInPursuitPhase, CombatWindow.IsLeftSideWinning)]"
						parentanchor = top|hcenter
						position = { 0 0 }
						fontsize = 30
						text = "game_concept_victory"
						default_format = "#positive_value;bold;glow_color:{0.1,0.1,0.1,1.0}"

						using = Animation_ShowHide_Standard

						background = {
							texture = "gfx/interface/component_masks/mask_fade_halfcircle.dds"
							margin = { 100 0 }
							margin_bottom = 100
							margin_top = 3
							using = Color_Green
							alpha = 0.3
						}
					}

					button = {
						parentanchor = right
						shortcut = close_window
						onclick = "[CombatWindow.CloseAndDeselect]"
						tooltip = "CLOSE_TOOLTIP"
						size = { 60 50 }
					}

					button = {
						size = { 60 50 }
						tooltip = "MINIMIZE_TOOLTIP"
						onclick = "[GetVariableSystem.Toggle('big_battle')]"
						onclick = "[GetVariableSystem.Set('minimize_battle_tip', 'yes')]"
						onmousehierarchyenter = "[GetVariableSystem.Set('minimize_battle_tip', 'yes')]"
						shortcut = zoom_in
						# onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('hide_combat_bg')]"
						# onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('restore_combat_bg')]"
					}

					text_single = {
						raw_text = "MINIMIZE_TOOLTIP"
						position = { 10 30 }
						using = DefaultTooltipBackground
						visible = "[Not(GetVariableSystem.Exists('minimize_battle_tip'))]"
					}

					flowcontainer = {
						parentanchor = right
						position = { -50 15 }
						spacing = 5
						margin_right = 10

						icon = {
							name = "terrain"
							datacontext = "[CombatWindow.GetCombat.GetProvince.GetTerrain]"
							texture = "[Terrain.GetIcon]"
							size = { 30 30 }
							tooltip = "HOLDING_TERRAIN_TOOLTIP"
							alwaystransparent = no
						}

						button_go_to_my_location = {
							onclick = "[CombatWindow.GoToProvince]"
							tooltip = "GOTO_PROVINCE_TT"
							onclick = "[GetVariableSystem.Toggle('big_battle')]"
						}

						button_close = {
							shortcut = close_window
							onclick = "[CombatWindow.CloseAndDeselect]"
							tooltip = "CLOSE_LABEL"
						}
					}

					button = {
						size = { 150 30 }
						parentanchor = bottom|hcenter
						onclick = "[GetVariableSystem.Toggle('army_hole')]"
						tooltip = "show_army_hole"

						button_icon = {
							parentanchor = center
							texture = "gfx/interface/icons/flat_icons/observer.dds"
							alwaystransparent = yes
						}
					}
				}

				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					margin = { 0 15 }
					margin_top = 80
					margin_bottom = 42
					spacing = 10

					vbox = {
						layoutpolicy_horizontal = expanding
						spacing = 10
						# visible = no

						# progressbar
						hbox = {
							layoutpolicy_horizontal = expanding

							visible = "[Not(CombatWindow.IsCombatInPursuitPhase)]"
							widget = {
								name = "combat_progress"
								size = { 1220 42 }
								# layoutpolicy_horizontal = expanding
								tooltip = "CV_TT_RELATIVE_SOLDIERS"
								using = tooltip_above

								using = Animation_ShowHide_Standard

								background = {
									texture = "gfx/interface/progressbars/war_progress_noprogress.dds"
									margin = { 0 -3 }
								}

								widget = {
									size = { 100% 100% }
									scissor = yes

									hbox = {
										margin_top = 5

										icon = {
											layoutpolicy_horizontal = expanding
											layoutpolicy_vertical = expanding
											layoutstretchfactor_horizontal = "[GetProgressBarValueMaxScaled( CombatWindow.GetCombat.GetPowerSlider, '(float)100', '(int32)410' )]"
											size = { 0 0 }

											texture = "gfx/interface/progressbars/progress_grandeur.dds"
											spriteType = Corneredtiled
											spriteborder = { 4 0 }

											modify_texture = {
												name = "bright"
												texture = "gfx/interface/colors/blue.dds"
												blend_mode = colordodge
												alpha = 0.7
											}
											modify_texture = {
												name = "mask"
												texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
												spriteType = Corneredstretched
												spriteborder = { 0 0 }
												blend_mode = alphamultiply
												alpha = 0.35
											}

											modify_texture = {
												name = "flash"
												texture = "gfx/interface/colors/orange.dds"
												blend_mode = colordodge
												alpha = 0
											}

											state = {
												name = "daily_tick_left_most_casualties"
												next = "b"
												duration = 0.05
												using = Animation_Curve_Default

												modify_texture = {
													name = "flash"
													alpha = 0.5
												}
											}

											state = {
												name = "b"
												duration = 0.2
												using = Animation_Curve_Default

												modify_texture = {
													name = "flash"
													alpha = 0
												}
											}

											icon = {
												parentanchor = right|vcenter
												position = { 5 0 }

												size = { 25 100% }
												texture = "gfx/interface/progressbars/progressbar_center_glow.dds"
												color = { 0.9 0.9 0.9 1 }

												state = {
													name = a
													next = b
													trigger_on_create = yes
													duration = 0.2
													alpha = 1
												}

												state = {
													name = b
													next = a
													duration = 0.4
													alpha = 0.85
												}
											}
										}

										icon = {
											layoutpolicy_horizontal = expanding
											layoutpolicy_vertical = expanding
											layoutstretchfactor_horizontal = "[GetProgressBarValueMaxOtherScaled( CombatWindow.GetCombat.GetPowerSlider, '(float)100', '(int32)410' )]"
											size = { 0 0 }

											texture = "gfx/interface/progressbars/progress_grandeur_decrease.dds"
											spriteborder = { 4 0 }
											spriteType = Corneredtiled

											modify_texture = {
												name = "bright"
												texture = "gfx/interface/colors/red.dds"
												blend_mode = colordodge
												alpha = 0.25
											}
											modify_texture = {
												name = "mask"
												texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
												spriteType = Corneredstretched
												spriteborder = { 0 0 }
												blend_mode = alphamultiply
												# mirror = horizontal
												alpha = 0.3
											}

											modify_texture = {
												name = "flash"
												texture = "gfx/interface/colors/orange.dds"
												blend_mode = colordodge
												alpha = 0
											}


											state = {
												name = "daily_tick_right_most_casualties"
												next = "b"
												duration = 0.05
												using = Animation_Curve_Default

												modify_texture = {
													name = "flash"
													alpha = 0.3
												}
											}

											state = {
												name = "b"
												duration = 0.2
												using = Animation_Curve_Default

												modify_texture = {
													name = "flash"
													alpha = 0
												}
											}

											icon = {
												parentanchor = left|vcenter
												position = { -6 0 }
												mirror = horizontal

												size = { 25 100% }
												texture = "gfx/interface/progressbars/progressbar_center_glow.dds"
												color = { 0.9 0.9 0.9 1 }

												state = {
													name = a
													next = b
													trigger_on_create = yes
													duration = 0.2
													alpha = 1
												}

												state = {
													name = b
													next = a
													duration = 0.4
													alpha = 0.85
												}
											}
										}
									}
								}

								widget = {
									name = "power_bar_frame"
									parentanchor = top
									size = { 100% 100% }
									alwaystransparent = yes

									background = {
										texture = "gfx/interface/progressbars/siege_frame.dds"
										spriteType = Corneredstretched
										spriteborder = { 30 40 }
										margin = { 5 0 }
										margin_bottom = 10
										texture_density = 2
									}
								}

								text_label_center = {
									name = "combat_result"
									visible = "[CombatWindow.IsCombatInPursuitPhase]"
									parentanchor = center
									text = "[CombatWindow.GetWonLostLabel]"
									font = TitleFont
									fontsize = 35
									align = nobaseline
									margin_bottom = 0
								}
							}
						}

						widget = {
							size = { 0 17 }
							visible = "[CombatWindow.IsCombatInPursuitPhase]"
						}

						# retreat
						widget = {
							tooltip = "[CombatWindow.GetCurrentPhaseTooltip]"
							name = "pursuit_phase"
							visible = "[CombatWindow.IsCombatInPursuitPhase]"
							#visible_at_creation = no
							size = { 450 50 }

							using = Animation_ShowHide_Standard

							background = {
								using = Background_Area
							}

							hbox = {
								margin = { 20 0 }
								margin_top = 5

								hbox = {
									visible = "[CombatWindow.IsRightSideWinning]"
									spacing = 5

									icon = {
										name = "left_side_fled"
										texture = "gfx/interface/icons/icon_fled.dds"
										size = { 35 35 }
									}

									text_single = {
										text = "[CombatWindow.GetLeftCombatSide.GetPursuingRetreatingLabel]"
										using = Font_Size_Medium
										align = nobaseline
										default_format = "#N"
									}
								}

								hbox = {
									visible = "[CombatWindow.IsLeftSideWinning]"
									spacing = 5

									icon = {
										name = "left_side_pursuing"
										texture = "gfx/interface/icons/icon_pursuit.dds"
										size = { 35 35 }
									}

									text_single = {
										text = "[CombatWindow.GetLeftCombatSide.GetPursuingRetreatingLabel]"
										using = Font_Size_Medium
										align = nobaseline
									}

								}

								expand = {}

								hbox = {
									visible = "[CombatWindow.IsLeftSideWinning]"
									spacing = 5

									text_single = {
										text = "[CombatWindow.GetRightCombatSide.GetPursuingRetreatingLabel]"
										using = Font_Size_Medium
										align = nobaseline
										default_format = "#N"
									}

									icon = {
										name = "right_side_fled"
										texture = "gfx/interface/icons/icon_fled.dds"
										size = { 35 35 }
									}
								}

								hbox = {
									visible = "[CombatWindow.IsRightSideWinning]"
									spacing = 5

									text_single = {
										text = "[CombatWindow.GetRightCombatSide.GetPursuingRetreatingLabel]"
										using = Font_Size_Medium
										align = nobaseline
									}

									icon = {
										name = "right_side_pursuing"
										texture = "gfx/interface/icons/icon_pursuit.dds"
										mirror = horizontal
										size = { 35 35 }
									}
								}
							}
						}

						# advantage
						widget = {
							size = { 450 0 }
							allow_outside = yes

							widget = {
								visible = "[Not(CombatWindow.IsCombatInPursuitPhase)]"
								parentanchor = hcenter
								size = { 450 55 }
								position = { 0 -107 }
								scissor = yes

								widget = {
									size = { 120 70 }
									parentanchor = hcenter
									position = { -128 2 }
									scissor = yes
									datacontext = "[CombatWindow.GetLeftSideCommander]"
									visible = "[Character.IsValid]"

									icon = {
										# size = { 450 64 }
										parentanchor = center
										texture = "gfx/interface/window_combat/combat_advantage_bars.dds"
										mirror = vertical
									}

									text_single = {
										text = "[Character.GetCommanderAdvantage]"
										tooltip = "[Character.GetCommanderAdvantageDesc]"
										parentanchor = hcenter
										margin = { 15 0 }
										position = { -15 7 }
										alpha = 0.8
										default_format = "#high;glow_color:{0.1,0.1,0.1,1.0}"
										align = nobaseline
										using = Font_Size_Big
									}
								}

								widget = {
									size = { 120 70 }
									parentanchor = hcenter
									position = { -78 2 }
									scissor = yes

									icon = {
										# size = { 450 64 }
										parentanchor = center
										texture = "gfx/interface/window_combat/combat_advantage_bars.dds"
										mirror = vertical

										modify_texture = {
											name = "flash"
											texture = "gfx/interface/component_effects/effect_shimmer.dds"
											blend_mode = colordodge
											alpha = 0
										}

										state = {
											name = "combat_left_roll"
											next = "b"
											trigger_on_create = yes

											duration = 0.1
											using = Animation_Curve_Default

											modify_texture = {
												name = "flash"
												alpha = 1
											}
										}

										state = {
											name = "b"

											duration = 0.3
											using = Animation_Curve_Default

											modify_texture = {
												name = "flash"
												alpha = 0
											}
										}
									}

									text_single = {
										tooltip = COW_TT_CURRENT_ROLL_LEFT
										parentanchor = hcenter
										margin = { 15 0 }
										position = { -15 7 }
										alpha = 0.8
										text = "[CombatWindow.GetLeftRoll]"
										default_format = "#high;glow_color:{0.1,0.1,0.1,1.0}"
										align = nobaseline
										using = Font_Size_Big
									}
								}

								widget = {
									size = { 120 70 }
									parentanchor = hcenter
									position = { 128 2 }
									scissor = yes
									datacontext = "[CombatWindow.GetRightSideCommander]"
									visible = "[Character.IsValid]"

									icon = {
										# size = { 450 64 }
										parentanchor = center
										texture = "gfx/interface/window_combat/combat_advantage_bars.dds"
										mirror = vertical
									}

									text_single = {
										text = "[Character.GetCommanderAdvantage]"
										tooltip = "[Character.GetCommanderAdvantageDesc]"
										parentanchor = hcenter
										margin = { 15 0 }
										position = { 15 7 }
										alpha = 0.8
										default_format = "#high;glow_color:{0.1,0.1,0.1,1.0}"
										align = nobaseline
										using = Font_Size_Big
									}
								}

								widget = {
									size = { 120 70 }
									parentanchor = hcenter
									position = { 78 2 }
									scissor = yes

									icon = {
										parentanchor = center
										texture = "gfx/interface/window_combat/combat_advantage_bars.dds"
										mirror = vertical

										modify_texture = {
											name = "flash"
											texture = "gfx/interface/component_effects/effect_shimmer.dds"
											blend_mode = colordodge
											alpha = 0
										}

										state = {
											name = "combat_right_roll"
											next = "b"
											trigger_on_create = yes

											duration = 0.1
											using = Animation_Curve_Default

											modify_texture = {
												name = "flash"
												alpha = 1
											}
										}

										state = {
											name = "b"

											duration = 0.3
											using = Animation_Curve_Default

											modify_texture = {
												name = "flash"
												alpha = 0
											}
										}

									}

									text_single = {
										tooltip = COW_TT_CURRENT_ROLL_RIGHT
										parentanchor = hcenter
										margin = { 15 0 }
										position = { 15 7 }
										alpha = 0.8
										text = "[CombatWindow.GetRightRoll]"
										default_format = "#high;glow_color:{0.1,0.1,0.1,1.0}"
										align = nobaseline
										using = Font_Size_Big
									}
								}

								icon = {
									glow = {
										glow_radius = 3
										using = Glow_Standard
										using = Color_Black
									}
									name = "center_box"
									size = { 450 170 }
									texture = "gfx/interface/window_combat/combat_info_box.dds"

									modify_texture = {
										name = "1_maneuver"
										visible = "[CombatWindow.IsCombatInManeuverPhase]"
										texture = "gfx/interface/window_combat/combat_info_box_glow.dds"
										blend_mode = colordodge
									}

									modify_texture = {
										name = "2_reteat"
										visible = "[CombatWindow.ShowNoRetreatIcon]"
										texture = "gfx/interface/window_combat/combat_info_box_glow.dds"
										blend_mode = colordodge
										translate_uv = { -0.07 0 }
									}

									modify_texture = {
										name = "3_no_reteat"
										visible = "[CombatWindow.ShowRetreatIcon]"
										texture = "gfx/interface/window_combat/combat_info_box_glow.dds"
										blend_mode = colordodge
										translate_uv = { -0.13 0 }
									}

									modify_texture = {
										name = "4_pursuit"
										visible = "[CombatWindow.IsCombatInPursuitPhase]"
										texture = "gfx/interface/window_combat/combat_info_box_glow.dds"
										blend_mode = colordodge
										translate_uv = { -0.198 0 }
									}

									modify_texture = {
										name = "flash"
										texture = "gfx/interface/window_combat/combat_info_box_glow_full.dds"
										blend_mode = colordodge
										alpha = 0
									}

									state = {
										name = "phase_change"
										next = "b"
										duration = 0.4
										using = Animation_Transition_Start

										modify_texture = {
											name = "flash"
											alpha = 1
										}
									}

									state = {
										name = "b"
										duration = 1
										using = Animation_Transition_End

										modify_texture = {
											name = "flash"
											alpha = 0
										}
									}

									background = {
										texture ="gfx/interface/component_masks/patterns/mask_pattern_02.dds"
										spriteType = Corneredtiled
										color = { 0.6 0.7 0.65 0.3 }
										margin = { -10 0 }
										margin_top = -30

										modify_texture = {
											texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
											blend_mode = alphamultiply
											mirror = vertical
										}
									}

									widget = {
										name = "combat_phases"
										parentanchor = top|hcenter
										position = { 0 10 }
										size = { 120 28 }
										tooltip = "[CombatWindow.GetCurrentPhaseTooltip]"
										using = tooltip_ne
									}

								}
							}

							widget = {
								parentanchor = hcenter
								name = "main_info"
								size = { 100% 100% }
								position = { 0 -108 }
								allow_outside = yes

								vbox = {
									margin = { 10 10 }
									margin_top = 40

									widget = {
										layoutpolicy_horizontal = expanding
										size = { 0 45 }
										allow_outside = yes

										widget = {
											name = "advantage"
											visible = "[Not(CombatWindow.IsCombatInPursuitPhase)]"
											#visible_at_creation = no
											position = { 0 0 }
											size = { 100% 100% }
											tooltip = "[CombatWindow.GetAdvantageDescription]"

											using = Animation_ShowHide_Standard

											hbox = {
												margin = { 38 0 }
												margin_top = 0

												vbox = {
													layoutpolicy_vertical = expanding
													margin_top = 5

													widget = {
														name = "progressbar"
														size = { 145 10 }

														background = {
															texture = "gfx/interface/component_overlay/overlay_stone.dds"
															texture_density = 2
															spritetype = corneredtiled
															color = { 0.3 0.3 0.34 1 }
															alpha = 0.8
														}

														arrow_progressbar_icon = {
															size = { 100% 100% }
															visible = "[GreaterThan_CFixedPoint( CombatWindow.GetAdvantage, '(CFixedPoint)40')]"

															blockoverride "color"
															{
																using = Color_Blue
																mirror = horizontal
															}
														}

														hbox = {
															visible = "[And(LessThanOrEqualTo_CFixedPoint( CombatWindow.GetAdvantage, '(CFixedPoint)40'), GreaterThan_CFixedPoint( CombatWindow.GetAdvantage, '(CFixedPoint)0'))]"

															widget = {
																layoutstretchfactor_horizontal = "[GetProgressBarValueMaxOtherScaled( FixedPointToFloat( CombatWindow.GetAdvantage ), '(float)40', '(int32)145' )]"
																layoutpolicy_horizontal = expanding
															}

															arrow_progressbar_icon  = {
																layoutstretchfactor_horizontal = "[GetProgressBarValueMaxScaled( FixedPointToFloat( CombatWindow.GetAdvantage ), '(float)40', '(int32)145' )]"
																layoutpolicy_horizontal = expanding
																layoutpolicy_vertical = expanding

																blockoverride "color"
																{
																	using = Color_Blue
																	mirror = horizontal
																}
															}
														}
													}

													hbox = {
														name = "advantage_icons"
														layoutpolicy_horizontal = expanding
														layoutpolicy_vertical = expanding
														margin_top = 4

														# icon = {
														# 	name = "terrain"
														# 	datacontext = "[CombatWindow.GetCombat.GetProvince.GetTerrain]"
														# 	texture = "[Terrain.GetIcon]"
														# 	size = { 30 30 }
														# 	tooltip = "HOLDING_TERRAIN_TOOLTIP"
														# }

														expand = {}
													}

													expand = {}
												}

												expand = {}

												vbox = {
													layoutpolicy_vertical = expanding
													margin_top = 5

													widget = {
														name = "progressbar"
														size = { 145 10 }

														background = {
															texture = "gfx/interface/component_overlay/overlay_stone.dds"
															texture_density = 2
															spritetype = corneredtiled
															color = { 0.3 0.3 0.34 1 }
															alpha = 0.8
														}

														arrow_progressbar_icon = {
															size = { 100% 100% }
															visible = "[LessThan_CFixedPoint( CombatWindow.GetAdvantage, '(CFixedPoint)-40')]"

															blockoverride "color"
															{
																using = Color_Red
															}
														}


														hbox = {
															visible = "[And(GreaterThanOrEqualTo_CFixedPoint( CombatWindow.GetAdvantage, '(CFixedPoint)-40'), LessThan_CFixedPoint( CombatWindow.GetAdvantage, '(CFixedPoint)0'))]"

															arrow_progressbar_icon  = {
																layoutstretchfactor_horizontal = "[GetProgressBarValueMaxScaled( Multiply_float( FixedPointToFloat( CombatWindow.GetAdvantage ), '(float)-1'), '(float)40', '(int32)145' )]"
																layoutpolicy_horizontal = expanding
																layoutpolicy_vertical = expanding

																blockoverride "color"
																{
																	using = Color_Red
																}
															}

															widget = {
																layoutstretchfactor_horizontal = "[GetProgressBarValueMaxOtherScaled( Multiply_float( FixedPointToFloat( CombatWindow.GetAdvantage ), '(float)-1'), '(float)40', '(int32)145' )]"
																layoutpolicy_horizontal = expanding
															}
														}
													}

													hbox = {
														name = "advantage_icons"
														layoutpolicy_horizontal = expanding
														layoutpolicy_vertical = expanding
														margin_top = 4

														# icon = {
														# 	name = "terrain"
														# 	datacontext = "[CombatWindow.GetCombat.GetProvince.GetTerrain]"
														# 	texture = "[Terrain.GetIcon]"
														# 	size = { 30 30 }
														# 	tooltip = "HOLDING_TERRAIN_TOOLTIP"
														# }

														expand = {}
													}

													expand = {}
												}
											}

											widget = {
												visible = "[Not(CombatWindow.IsCombatInPursuitPhase)]"
												size = { 400 64 }
												parentanchor = hcenter
												position = { 0 -10 }
												scissor = yes

												icon = {
													parentanchor = hcenter
													size = { 500 64 }
													texture = "gfx/interface/window_combat/combat_advantage_bars.dds"

													modify_texture = {
														name = "swoosh_left"
														texture = "gfx/interface/component_effects/effect_shimmer.dds"
														blend_mode = colordodge
														alpha = 1
														translate_uv = { 0.6 0 }
													}

													modify_texture = {
														name = "swoosh_right"
														texture = "gfx/interface/component_effects/effect_shimmer.dds"
														blend_mode = colordodge
														alpha = 1
														translate_uv = { -0.6 0 }
													}

													modify_texture = {
														name = "flash"
														texture = "gfx/interface/window_combat/combat_info_advantage_glow.dds"
														blend_mode = colordodge
														alpha = 0
													}

													# Left side
													state = {
														name = "combat_left_roll"
														next = "left_b"
														delay = 0.4
														trigger_on_create = yes

														modify_texture = {
															name = "swoosh_left"
															alpha = 0.2
															translate_uv = { 0.6 0 }
														}
													}

													state = {
														name = "left_b"
														next = "left_c"
														duration = 0.3

														modify_texture = {
															name = "swoosh_left"
															alpha = 0.3
															translate_uv = { 0 0 }
														}
													}

													state = {
														name = "left_c"
														next = "left_d"

														duration = 0.1
														using = Animation_Curve_Default

														modify_texture = {
															name = "flash"
															alpha = 0.3
														}

														modify_texture = {
															name = "swoosh_left"
															alpha = 0.2
														}
													}

													state = {
														name = "left_d"
														duration = 0.8
														bezier = { 0 0.8 0.6 1 }

														modify_texture = {
															name = "flash"
															alpha = 0
														}

														modify_texture = {
															name = "swoosh_left"
															alpha = 0
														}
													}


													# Right side
													state = {
														name = "combat_right_roll"
														next = "right_b"
														delay = 0.4
														trigger_on_create = yes

														modify_texture = {
															name = "swoosh_right"
															alpha = 0.2
															translate_uv = { -0.6 0 }
														}
													}

													state = {
														name = "right_b"
														next = "right_c"
														duration = 0.3

														modify_texture = {
															name = "swoosh_right"
															alpha = 0.3
															translate_uv = { 0 0 }
														}
													}

													state = {
														name = "right_c"
														next = "right_d"

														duration = 0.1
														using = Animation_Curve_Default

														modify_texture = {
															name = "flash"
															alpha = 0.3
														}

														modify_texture = {
															name = "swoosh_right"
															alpha = 0.2
														}
													}

													state = {
														name = "right_d"
														duration = 0.8
														bezier = { 0 0.8 0.6 1 }

														modify_texture = {
															name = "flash"
															alpha = 0
														}

														modify_texture = {
															name = "swoosh_right"
															alpha = 0
														}
													}
												}
											}

											widget = {
												size = { 50 50 }
												parentanchor = center
												position = { 0 -5 }

												text_single = {
													name = "advantage"
													parentanchor = center
													text = "COMBAT_WINDOW_ADVANTAGE"
													fontsize = 20
													tooltip = "[CombatWindow.GetAdvantageDescription]"
													default_format = "#high;bold;glow_color:{0.1,0.1,0.1,1.0}"
													align = nobaseline
												}
											}
										}
									}

									expand = {}
								}
							}
						}

						# advantage
						widget = {
							size = { 500 25 }
							scissor = yes
							visible = "[Not(CombatWindow.IsCombatInPursuitPhase)]"

							background = {
								using = Text_Label_Background
								margin_top = 2
								alpha = 0.6
								modify_texture = {
									texture = "gfx/interface/component_masks/mask_fade_horizontal_middle.dds"
									blend_mode = alphamultiply
									# alpha = 0.7
								}
							}

							text_single = {
								parentanchor = hcenter
								position = { 0 -30 }
								text = "[CombatWindow.GetAdvantageDescription]"
							}
						}

						hbox = {
							layoutpolicy_horizontal = expanding
							spacing = 45

							expand = { }

							widget = {
								size = { 360 0 }
								layoutpolicy_vertical = expanding

								flowcontainer_reinforcements = {
									datacontext = "[CombatWindow.GetLeftSideMainParticipant]"
									# parentanchor = right
									blockoverride "order" {
										righttoleft = yes
									}
								}
							}

							widget = {
								name = "troop_counters"
								size = { 410 60 }

								widget = {
									size = { 100% 100% }
									visible = "[CombatWindow.IsCombatInPursuitPhase]"

									state = {
										name = _show
										using = Animation_FadeIn_Standard
										duration = 0.8
									}

									state = {
										name = _hide
										using = Animation_FadeOut_Standard
									}

									animation_soldier_loss = {
										visible = "[CombatWindow.IsCombatInPursuitPhase]"
										position = { 55 20 }

										blockoverride "animation_trigger_name"
										{
											name = "daily_tick_left_most_casualties"
										}
									}

									animation_soldier_loss = {
										visible = "[CombatWindow.IsCombatInPursuitPhase]"
										parentanchor = right
										position = { -22 20 }

										blockoverride "animation_trigger_name"
										{
											name = "daily_tick_right_most_casualties"
										}
									}
								}

								flowcontainer = {
									name = "left_soldiers"
									datacontext = "[CombatWindow.GetLeftCombatSide]"
									datacontext = "[CombatSide.GetComposition]"
									tooltip = "[ArmyComposition.GetArmyCompositionTooltip]"
									ignoreinvisible = yes

									background = {
										margin = { 45 20 }
										texture = "gfx/interface/component_masks/mask_fade_circle.dds"
										color = { 0.2 0.2 0.2 0.8 }
									}

									flowcontainer = {
										visible = "[And( CombatWindow.IsCombatInPursuitPhase, Not(CombatSide.IsStillFighting ))]"
										spacing = 3

										using = Animation_ShowHide_Standard

										icon = {
											name = "fled_icon_left"
											parentanchor = vcenter
											size = { 25 25 }
											texture = "gfx/interface/icons/icon_retreat.dds"
										}

										text_single = {
											text = "[ArmyComposition.GetSoldierCountString]"
											default_format = "#N;glow_color:{0.1,0.1,0.1,1}"
											fontsize = 25
											align = nobaseline
										}
									}

									flowcontainer = {
										visible = "[Or( Not(CombatWindow.IsCombatInPursuitPhase), CombatSide.IsStillFighting )]"
										direction = vertical
										spacing = -5

										using = Animation_ShowHide_Standard

										flowcontainer = {
											spacing = 3

											icon = {
												name = "icon_soldier"
												parentanchor = vcenter
												texture = "gfx/interface/icons/icon_soldier.dds"
												size = { 25 25 }
											}

											text_single = {
												text = "[CombatSide.GetCurrentFightingMen|0]"
												fontsize = 25
												align = nobaseline
												default_format = "#high;glow_color:{0.1,0.1,0.1,1}"

												text_single = {
													text = "[CombatSide.GetCurrentFightingMen|0]"
													fontsize = 25
													align = nobaseline
													default_format = "#N;glow_color:{0.1,0.1,0.1,1}"

													state = {
														name = "daily_tick_left_most_casualties"
														next = "b"
														duration = 0.1
														using = Animation_Curve_Default
														alpha = 1
														trigger_on_create = yes
													}

													state = {
														name = "b"
														duration = 0.3
														using = Animation_Curve_Default
														alpha = 0
													}
												}

											}

											army_quality_icon = {
												parentanchor = vcenter
											}
										}

										flowcontainer = {
											visible = "[CombatSide.IsStillFighting]"
											tooltip = "COW_TT_SOFT_CASUALTIES_LEFT"
											spacing = 3
											ignoreinvisible = yes

											using = Animation_ShowHide_Standard

											icon = {
												name = "fled_icon_left"
												parentanchor = vcenter
												size = { 20 20 }
												texture = "gfx/interface/icons/icon_retreat.dds"
											}

											text_single = {
												text = "[CombatWindow.GetLeftCombatSide.GetSoftCasualties|0]"
												default_format = "#medium;glow_color:{0.1,0.1,0.1,1}"
												align = nobaseline
											}
										}
									}
								}

								text_label_center = {
									parentanchor = top|hcenter
									position = { 0 1 }
									text = "[CombatWindow.GetName]"
									max_width = 185
									fontsize = 20
									font = TitleFont
									default_format = "#high"
									alpha = 0.5
								}

								flowcontainer = {
									name = "right_soldiers"
									parentanchor = right
									datacontext = "[CombatWindow.GetRightCombatSide]"
									datacontext = "[CombatSide.GetComposition]"
									tooltip = "[ArmyComposition.GetArmyCompositionTooltip]"
									ignoreinvisible = yes

									background = {
										margin = { 45 20 }
										texture = "gfx/interface/component_masks/mask_fade_circle.dds"
										color = { 0.2 0.2 0.2 0.8 }
									}

									flowcontainer = {
										visible = "[And( CombatWindow.IsCombatInPursuitPhase, Not(CombatSide.IsStillFighting ))]"
										spacing = 3

										using = Animation_ShowHide_Standard

										icon = {
											name = "fled_icon_left"
											parentanchor = vcenter
											size = { 25 25 }
											texture = "gfx/interface/icons/icon_retreat.dds"
										}

										text_single = {
											text = "[ArmyComposition.GetSoldierCountString]"
											default_format = "#N;glow_color:{0.1,0.1,0.1,1}"
											fontsize = 25
											align = nobaseline
										}

									}

									flowcontainer = {
										visible = "[Or( Not(CombatWindow.IsCombatInPursuitPhase), CombatSide.IsStillFighting )]"
										direction = vertical
										spacing = -5

										using = Animation_ShowHide_Standard

										flowcontainer = {
											spacing = 3

											icon = {
												name = "icon_soldier"
												parentanchor = vcenter
												texture = "gfx/interface/icons/icon_soldier.dds"
												size = { 25 25 }
											}

											text_single = {
												text = "[CombatSide.GetCurrentFightingMen|0]"
												fontsize = 25
												align = nobaseline
												default_format = "#high;glow_color:{0.1,0.1,0.1,1}"

												text_single = {
													text = "[CombatSide.GetCurrentFightingMen|0]"
													fontsize = 25
													align = nobaseline
													default_format = "#N;glow_color:{0.1,0.1,0.1,1}"

													state = {
														name = "daily_tick_right_most_casualties"
														next = "b"
														duration = 0.1
														using = Animation_Curve_Default
														alpha = 1
														trigger_on_create = yes
													}

													state = {
														name = "b"
														duration = 0.3
														using = Animation_Curve_Default
														alpha = 0
													}
												}
											}

											army_quality_icon = {
												parentanchor = vcenter
											}
										}

										flowcontainer = {
											visible = "[CombatSide.IsStillFighting]"
											tooltip = "COW_TT_SOFT_CASUALTIES_RIGHT"
											spacing = 3
											parentanchor = right

											using = Animation_ShowHide_Standard

											icon = {
												name = "fled_icon_left"
												parentanchor = vcenter
												size = { 20 20 }
												texture = "gfx/interface/icons/icon_retreat.dds"
											}

											text_single = {
												text = "[CombatWindow.GetRightCombatSide.GetSoftCasualties|0]"
												default_format = "#medium;glow_color:{0.1,0.1,0.1,1}"
												align = nobaseline
											}
										}
									}
								}
							}

							widget = {
								size = { 360 0 }
								layoutpolicy_vertical = expanding

								flowcontainer_reinforcements = {
									parentanchor = right
									datacontext = "[CombatWindow.GetRightSideMainParticipant]"
								}
							}

							expand = { }
						}
					}

					# maa
					vbox = {
						# margin = { 200 0 }
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						scrollbox = {
							# visible = no
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							blockoverride "scrollbox_background" {}
							blockoverride "scrollbox_background_fade" {}
							blockoverride "scrollbox_margins" {}
							blockoverride "scrollbox_content" {

								vbox = {
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding
									name = "maa_vbox"

									hbox = {
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = expanding

										expand = {}

										vbox_combat_side_left = {}


										widget = {
											size = { 35 0 }
											layoutpolicy_vertical = expanding

											vbox = {
												margin_bottom = 200
												layoutpolicy_vertical = expanding
												divider = {
													color = { 0 0 0 1 }
													size = { 5 0 }
													layoutpolicy_vertical = expanding
												}
											}
										}

										vbox_combat_side_right = {}

										expand = { }
									}
								}
							}
						}
					}

					widget = {
						visible = "[CombatWindow.BattleEventIsShown]"
						size = { 0 80 }
						#visible_at_creation = no
					}

					expand = { }
				}

				widget = {
					# visible = no
					name = "commander_info"
					parentanchor = bottom|hcenter
					size = { 100% 0 }
					allow_outside = yes
					position = { 0 -20 }

					container = {
						ignoreinvisible = yes
						widgetanchor = bottom
						position = { 300 50 }
						visible = "[LessThan_int32(GetDataModelSize(CombatWindow.GetLeftSideMaaTypes), '(int32)3')]"

						flowcontainer = {
							ignoreinvisible = yes
							datamodel = "[DataModelFirst(CombatWindow.GetCombat.MakeScope.GetList('defender_knights'), '(int32)3')]"
							visible = "[And(Not(CombatWindow.GetLeftCombatSide.IsAttacker), DataModelHasItems(CombatWindow.GetCombat.MakeScope.GetList('defender_knights')))]"

							item = {
								knight_portrait = {}
							}
						}

						flowcontainer = {
							ignoreinvisible = yes
							datamodel = "[DataModelFirst(CombatWindow.GetCombat.MakeScope.GetList('attacker_knights'), '(int32)3')]"
							visible = "[And(CombatWindow.GetLeftCombatSide.IsAttacker, DataModelHasItems(CombatWindow.GetCombat.MakeScope.GetList('attacker_knights')))]"

							item = {
								knight_portrait = {}
							}
						}

					}

					### Commander Left
					widget = {
						name = "left_commander"
						datacontext = "[CombatWindow.GetLeftSideCommander]"
						parentanchor = left|bottom
						position = { 10 20 }
						allow_outside = yes

						container = {
							visible = "[Character.IsValid]"
							parentanchor = bottom|left
							scale = 1.3

							portrait_body = {
								visible = "[CombatWindow.IsAttackerOnLeftSide]"

								blockoverride "portrait_button"
								{
									portrait_texture = "[Character.GetPortrait('environment_combat_window', 'camera_combat_window', 'war_attacker', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
									mask = "gfx/portraits/portrait_mask_blank.dds"
								}

								blockoverride "portrait_button_template_tooltip" {
									tooltip = "[CombatWindow.GetLeftSideCommanderTooltip]"
								}

								blockoverride "coa" {}
								blockoverride "opinion_box" {}
								blockoverride "status_icons" {}
							}

							portrait_body = {
								visible = "[Not(CombatWindow.IsAttackerOnLeftSide)]"

								blockoverride "portrait_button"
								{
									portrait_texture = "[Character.GetPortrait('environment_combat_window', 'camera_combat_window', 'war_defender', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
									mask = "gfx/portraits/portrait_mask_blank.dds"
								}

								blockoverride "portrait_button_template_tooltip" {
									tooltip = "[CombatWindow.GetLeftSideCommanderTooltip]"
								}

								blockoverride "coa" {}
								blockoverride "opinion_box" {}
								blockoverride "status_icons" {}
							}
						}

						icon = {
							parentanchor = bottom|left
							position = { 9 0 }
							size = { 200 100 }
							texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
							mirror = vertical
							color = { 0.15 0.15 0.15 0.5 }
						}

						coa_realm_medium_crown = {
							datacontext = "[CombatWindow.GetLeftSideMainParticipant]"
							parentanchor = bottom|left
							position = { 20 -70 }
							tooltip = "[CombatWindow.GetLeftSideRealmFlagTooltip]"
						}

						text_label_center = {
							visible = "[Not(Character.IsValid)]"
							parentanchor = bottom|left
							widgetanchor = center
							position = { 110 -25 }
							text = "COMBAT_WINDOW_NO_COMMANDER"
						}

						flowcontainer = {
							name = "martial_value"
							visible = "[Character.IsValid]"
							parentanchor = bottom|left
							position = { 100 -80 }
							tooltip = "[Character.GetCommanderAdvantageDesc]"
							direction = vertical

							background = {
								using = Background_Area_Dark
								margin = { 12 8 }
								color = { 0.1 0.1 0.1 0.8 }
							}

							background = {
								using = Background_Frame
								margin = { 9 5 }
								alpha = 0.7
							}

							icon = {
								name = "icon"
								parentanchor = hcenter
								texture = "gfx/interface/icons/icon_commander_advantage.dds"
								size = { 30 30 }
							}

							text_single = {
								name = "label"
								parentanchor = hcenter
								text = "[Character.GetCommanderAdvantage]"
								default_format = "#high;glow_color:{0.1,0.1,0.1,1.0}"
								using = Font_Size_Big
								align = nobaseline
							}
						}

						dynamicgridbox = {
							datamodel = "[CombatWindow.GetLeftCommanderTraits]"
							visible = "[LessThanOrEqualTo_int32(GetDataModelSize(CombatWindow.GetLeftCommanderTraits), '(int32)3')]"

							parentanchor = bottom|left
							position = { 25 -5 }
							flipdirection = yes
							datamodel_wrap = 3

							item = {
								icon_trait = {
									blockoverride "icon_size"
									{
										size = { 50 50 }
									}
								}
							}
						}

						dynamicgridbox = {
							datamodel = "[CombatWindow.GetLeftCommanderTraits]"
							visible = "[EqualTo_int32(GetDataModelSize(CombatWindow.GetLeftCommanderTraits), '(int32)4')]"

							parentanchor = bottom|left
							position = { 25 -5 }
							flipdirection = yes

							item = {
								icon_trait = {
									blockoverride "icon_size"
									{
										size = { 45 45 }
									}
								}
							}
						}

						dynamicgridbox = {
							datamodel = "[CombatWindow.GetLeftCommanderTraits]"
							visible = "[EqualTo_int32(GetDataModelSize(CombatWindow.GetLeftCommanderTraits), '(int32)5')]"

							parentanchor = bottom|left
							position = { 25 -5 }
							flipdirection = yes

							item = {
								icon_trait = {
									blockoverride "icon_size"
									{
										size = { 36 36 }
									}
								}
							}
						}

						dynamicgridbox = {
							datamodel = "[CombatWindow.GetLeftCommanderTraits]"
							visible = "[GreaterThanOrEqualTo_int32(GetDataModelSize(CombatWindow.GetLeftCommanderTraits), '(int32)5')]"

							parentanchor = bottom|left
							position = { 25 -5 }
							flipdirection = yes
							datamodel_wrap = 8

							item = {
								icon_trait = {
									blockoverride "icon_size"
									{
										size = { 30 30 }
									}
								}
							}
						}

						flowcontainer = {
							parentanchor = bottom|left
							position = { 25 -60 }
							ignoreinvisible = yes

							text_label_left = {
								visible = "[CombatWindow.IsAttackerOnLeftSide]"
								text = "ATTACKER"
								default_format = "#defender_color"
							}

							text_label_left = {
								visible = "[Not(CombatWindow.IsAttackerOnLeftSide)]"
								text = "DEFENDER"
								default_format = "#defender_color"
							}
						}
					}

					### Commander Right

					container = {
						ignoreinvisible = yes
						parentanchor = right
						widgetanchor = bottom|right
						position = { -250 50 }
						visible = "[LessThan_int32(GetDataModelSize(CombatWindow.GetRightSideMaaTypes), '(int32)3')]"

						flowcontainer = {
							ignoreinvisible = yes
							datamodel = "[DataModelFirst(CombatWindow.GetCombat.MakeScope.GetList('defender_knights'), '(int32)3')]"
							visible = "[And(CombatWindow.GetLeftCombatSide.IsAttacker, DataModelHasItems(CombatWindow.GetCombat.MakeScope.GetList('defender_knights')))]"

							item = {
								knight_portrait = {
									blockoverride "portrait_texture" {
										portrait_texture = "[Character.GetPortrait('environment_combat_window', 'camera_body_right', 'throne_room_one_handed_passive_1', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
									}
								}
							}
						}

						flowcontainer = {
							ignoreinvisible = yes
							datamodel = "[DataModelFirst(CombatWindow.GetCombat.MakeScope.GetList('attacker_knights'), '(int32)3')]"
							visible = "[And(Not(CombatWindow.GetLeftCombatSide.IsAttacker), DataModelHasItems(CombatWindow.GetCombat.MakeScope.GetList('attacker_knights')))]"

							item = {
								knight_portrait = {
									blockoverride "portrait_texture" {
										portrait_texture = "[Character.GetPortrait('environment_combat_window', 'camera_body_right', 'throne_room_one_handed_passive_1', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
									}
								}
							}
						}
					}

					widget = {
						name = "right_commander"
						datacontext = "[CombatWindow.GetRightSideCommander]"
						parentanchor = bottom|right
						position = { -10 -25 }
						allow_outside = yes

						container = {
							parentanchor = bottom|right
							visible = "[Character.IsValid]"
							scale = 1.3
							position = { 0 45 }

							portrait_body = {
								visible = "[Not(CombatWindow.IsAttackerOnLeftSide)]"

								blockoverride "portrait_button"
								{
									portrait_texture = "[Character.GetPortrait('environment_combat_window', 'camera_combat_window', 'war_attacker', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
									mask = "gfx/portraits/portrait_mask_blank.dds"

									portrait_scale = { -1 1 }
									portrait_offset = { 1 0 }
								}

								blockoverride "portrait_button_template_tooltip" {
									tooltip = "[CombatWindow.GetRightSideCommanderTooltip]"
								}

								blockoverride "coa" {}
								blockoverride "opinion_box" {}
								blockoverride "status_icons" {}
							}

							portrait_body = {
								visible = "[CombatWindow.IsAttackerOnLeftSide]"

								blockoverride "portrait_button"
								{
									portrait_texture = "[Character.GetPortrait('environment_combat_window', 'camera_combat_window', 'war_defender', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
									mask = "gfx/portraits/portrait_mask_blank.dds"

									portrait_scale = { -1 1 }
									portrait_offset = { 1 0 }
								}

								blockoverride "portrait_button_template_tooltip" {
									tooltip = "[CombatWindow.GetRightSideCommanderTooltip]"
								}

								blockoverride "coa" {}
								blockoverride "opinion_box" {}
								blockoverride "status_icons" {}
							}
						}

						icon = {
							parentanchor = bottom|right
							position = { -9 0 }
							size = { 200 100 }
							texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
							mirror = vertical
							color = { 0.15 0.15 0.15 0.5 }
						}

						coa_realm_medium_crown = {
							datacontext = "[CombatWindow.GetRightSideMainParticipant]"
							parentanchor = bottom|right
							position = { -20 -70 }
							tooltip = "[CombatWindow.GetRightSideRealmFlagTooltip]"
						}

						text_label_center = {
							visible = "[Not(Character.IsValid)]"
							parentanchor = bottom|right
							widgetanchor = center
							position = { -110 -25 }
							text = "COMBAT_WINDOW_NO_COMMANDER"
						}

						flowcontainer = {
							name = "martial_value"
							visible = "[Character.IsValid]"
							parentanchor = bottom|right
							position = { -100 -80 }
							tooltip = "[Character.GetCommanderAdvantageDesc]"
							direction = vertical

							background = {
								using = Background_Area_Dark
								margin = { 12 8 }
								color = { 0.1 0.1 0.1 0.8 }
							}

							background = {
								using = Background_Frame
								margin = { 9 5 }
								alpha = 0.7
							}

							icon = {
								name = "icon"
								parentanchor = hcenter
								texture = "gfx/interface/icons/icon_commander_advantage.dds"
								size = { 30 30 }
							}

							text_single = {
								name = "label"
								parentanchor = hcenter
								text = "[Character.GetCommanderAdvantage]"
								default_format = "#high;glow_color:{0.1,0.1,0.1,1.0}"
								using = Font_Size_Big
								align = nobaseline
							}
						}

						dynamicgridbox = {
							datamodel = "[CombatWindow.GetRightCommanderTraits]"
							visible = "[LessThanOrEqualTo_int32(GetDataModelSize(CombatWindow.GetRightCommanderTraits), '(int32)3')]"

							parentanchor = bottom|right
							position = { -25 -5 }
							flipdirection = yes
							datamodel_wrap = 3

							item = {
								icon_trait = {
									blockoverride "icon_size"
									{
										size = { 50 50 }
									}
								}
							}
						}

						dynamicgridbox = {
							datamodel = "[CombatWindow.GetRightCommanderTraits]"
							visible = "[EqualTo_int32(GetDataModelSize(CombatWindow.GetRightCommanderTraits), '(int32)4')]"

							parentanchor = bottom|right
							position = { -25 -5 }
							flipdirection = yes

							item = {
								icon_trait = {
									blockoverride "icon_size"
									{
										size = { 45 45 }
									}
								}
							}
						}

						dynamicgridbox = {
							datamodel = "[CombatWindow.GetRightCommanderTraits]"
							visible = "[EqualTo_int32(GetDataModelSize(CombatWindow.GetRightCommanderTraits), '(int32)5')]"

							parentanchor = bottom|right
							position = { -25 -5 }
							flipdirection = yes

							item = {
								icon_trait = {
									blockoverride "icon_size"
									{
										size = { 36 36 }
									}
								}
							}
						}

						dynamicgridbox = {
							datamodel = "[CombatWindow.GetRightCommanderTraits]"
							visible = "[GreaterThanOrEqualTo_int32(GetDataModelSize(CombatWindow.GetRightCommanderTraits), '(int32)5')]"

							parentanchor = bottom|right
							position = { -25 -5 }
							flipdirection = yes
							datamodel_wrap = 8

							item = {
								icon_trait = {
									blockoverride "icon_size"
									{
										size = { 30 30 }
									}
								}
							}
						}

						flowcontainer = {
							parentanchor = bottom|right
							position = { -25 -60 }
							ignoreinvisible = yes

							text_label_right = {
								visible = "[Not(CombatWindow.IsAttackerOnLeftSide)]"
								text = "ATTACKER"
								default_format = "#attacker_color"
							}

							text_label_right = {
								visible = "[CombatWindow.IsAttackerOnLeftSide]"
								text = "DEFENDER"
								default_format = "#attacker_color"
							}
						}
					}
				}

				### Battle event
				container = {
					# visible = no
					visible = "[CombatWindow.BattleEventIsShown]"
					parentanchor = bottom|hcenter
					widgetanchor = bottom|hcenter
					allow_outside = yes
					#visible_at_creation = no
					position = { 0 -5 }

					state = {
						name = _show
						using = Animation_FadeIn_Standard
						position_y = -5
						start_sound = {
							soundeffect = "event:/SFX/UI/Generic/Windows/sfx_ui_generic_window_small"
						}
					}

					state = {
						name = _hide
						using = Animation_FadeOut_Standard
						position_y = 0
						start_sound = {
							soundeffect = "event:/SFX/UI/Generic/Windows/sfx_ui_generic_window_small"
						}
					}

					button_group = {
						size = { 100% 100% }
						onclick = "[CombatWindow.IncrementBattleEvent]"
						onrightclick = "[CombatWindow.IncrementBattleEvent]"
						button_ignore = none

						background = {
							using = Background_Area_Dark
							color = { 0.13 0.13 0.13 0.85 }
						}
					}

					flowcontainer = {
						name = "battle_event"
						datacontext = "[CombatWindow.GetCurrentBattleEvent]"
						margin = { 10 10 }
						allow_outside = yes

						portrait_head_small = {
							name = "left_portrait"
							datacontext = "[BattleEvent.GetLeftCharacter( CombatWindow.GetLeftCombatSide.IsAttacker )]"
							visible = "[Character.IsValid]"

							blockoverride "opinion_box"	{}
							blockoverride "coa" {}
						}

						text_multi = {
							name = "title"
							autoresize = yes
							max_width = 230
							min_width = 230
							margin = { 5 5 }

							text = "[CombatWindow.GetCurrentBattleEvent.GetTitle( CombatWindow.GetLeftCombatSide.IsAttacker )]"
						}

						portrait_head_small = {
							name = "right_portrait"
							datacontext = "[BattleEvent.GetRightCharacter( CombatWindow.GetLeftCombatSide.IsAttacker )]"
							visible = "[Character.IsValid]"

							blockoverride "opinion_box" {}
							blockoverride "coa" {}

							blockoverride "portrait_button"
							{
								portrait_scale = { -1 1 }
								portrait_offset = { 1 0 }
							}
						}
					}
				}
			}
		}

		# a copy of the date widget
		# this way we can show it above the new panels but it doesn't overlap the default window
		big_battle_date = {}

		# normal view
		# visible alongside split
		widget = {
			alwaystransparent = no
			# visible = "[Or(GetVariableSystem.HasValue('big_battle', 'small'), Not(GetVariableSystem.Exists('big_battle')))]"
			visible = "[GetVariableSystem.HasValue('big_battle', 'small')]"
			parentanchor = bottom|hcenter
			size = { 875 330 }
			position = { 0 27 }

			state = {
				name = hide_battle_middle
				trigger_when = "[GetVariableSystem.Exists('hide_battle_view')]"
				position_y = 50
				duration = 0.1
			}
			state = {
				name = show_battle_middle
				trigger_when = "[Not(GetVariableSystem.Exists('hide_battle_view'))]"
				position_y = 27
				duration = 0.05
			}

			state = {
				name = _show
				position = { 0 27 }
				duration = 0.05
				bezier = { 0.5 0 1 0.5 }
				alpha = 1
			}

			state = {
				name = _hide
				position = { 0 60 }
				duration = 0.1
				bezier = { 0.5 0 1 0.5 }
				alpha = 0
			}

			widget = {
				size = { 100% 100% }

				background = {
					texture = "gfx/interface/component_tiles/tile_window_background.dds"
					spriteType = Corneredtiled
					spriteborder = { 18 0 }
					margin = { -23 -17 }
					texture_density = 2

					modify_texture = {
						texture = "gfx/interface/component_overlay/overlay_effect.dds"
						blend_mode = overlay
					}

					modify_texture = {
						texture = "gfx/interface/window_combat/combat_bg_mask.dds"
						blend_mode = alphamultiply
						spriteType = corneredStretched
						spriteborder_top = 200
						spriteborder_right = 200
						spriteborder_left = 200
					}
				}

				background = {
					texture = "gfx/interface/component_tiles/tile_window_background.dds"
					spriteType = Corneredtiled
					spriteborder = { 18 0 }
					margin = { -23 -17 }
					texture_density = 2

					modify_texture = {
						texture = "gfx/interface/component_overlay/overlay_effect.dds"
						blend_mode = overlay
					}

					modify_texture = {
						texture = "gfx/interface/window_combat/combat_bg_mask.dds"
						blend_mode = alphamultiply
						spriteType = corneredStretched
						spriteborder_top = 200
						spriteborder_right = 200
						spriteborder_left = 200
					}
				}

				margin_widget = {
					size = { 100% 100% }
					margin = { 23 17 }

					icon = {
						datacontext = "[CombatWindow.GetCombat.GetProvince.GetTerrain]"
						size = { 100% 100% }
						texture = "[Terrain.GetIllustration]"
						# texture = "gfx/interface/illustrations/terrain_types/steppe.dds"
						alpha = 0.8

						modify_texture = {
							texture = "gfx/interface/window_combat/combat_bg_mask.dds"
							blend_mode = alphamultiply
							spriteType = corneredStretched
							spriteborder_top = 200
							spriteborder_right = 200
							spriteborder_left = 200
						}

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_horizontal_middle.dds"
							blend_mode = alphamultiply
							alpha = 0.5
						}

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
							blend_mode = alphamultiply
							alpha = 0.8
							rotate_uv = -4.75
							translate_uv = { 0 -0.3 }
						}

						modify_texture = {
							texture = "gfx/interface/window_combat/combat_bg_darken.dds"
							blend_mode = alphamultiply
							alpha = 0.8
						}
					}

					widget = {
						size = { 100% 100% }
						alpha = 0.6

						icon = {
							visible = "[CombatWindow.IsCombatInPursuitPhase]"
							size = { 100% 103 }
							parentanchor = top|hcenter
							using = Background_Area_Dark
							color = { 0.1 0.1 0.1 1 }

							modify_texture = {
								texture = "gfx/interface/window_combat/combat_bg_mask.dds"
								blend_mode = alphamultiply
								spriteType = corneredStretched
								spriteborder_top = 200
								spriteborder_right = 200
								spriteborder_left = 200
							}

							using = Animation_ShowHide_Standard
						}
					}
				}

				icon = {
					parentanchor = hcenter
					position = { 0 -12 }
					size = { 821 126 }
					texture = "gfx/interface/window_combat/combat_decoration.dds"
				}

				icon = {
					name = "tile_frame_top_center_part"
					texture = "gfx/interface/window_war/tile_frame_top.dds"
					position = { 0 -40 }
					parentanchor = top|hcenter
					texture_density = 2
				}

				widget = {
					name = "commander_info"
					parentanchor = bottom|hcenter
					size = { 100% 0 }
					allow_outside = yes

					### Commander Left
					widget = {
						name = "left_commander"
						datacontext = "[CombatWindow.GetLeftSideCommander]"
						parentanchor = left|bottom
						position = { 10 -25 }
						allow_outside = yes

						container = {
							visible = "[Character.IsValid]"
							parentanchor = bottom|left

							portrait_body = {
								visible = "[CombatWindow.IsAttackerOnLeftSide]"

								blockoverride "portrait_button"
								{
									portrait_texture = "[Character.GetPortrait('environment_combat_window', 'camera_combat_window', 'war_attacker', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
									mask = "gfx/portraits/portrait_mask_blank.dds"
								}

								blockoverride "portrait_button_template_tooltip" {
									tooltip = "[CombatWindow.GetLeftSideCommanderTooltip]"
								}

								blockoverride "coa" {}
								blockoverride "opinion_box" {}
								blockoverride "status_icons" {}
							}

							portrait_body = {
								visible = "[Not(CombatWindow.IsAttackerOnLeftSide)]"

								blockoverride "portrait_button"
								{
									portrait_texture = "[Character.GetPortrait('environment_combat_window', 'camera_combat_window', 'war_defender', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
									mask = "gfx/portraits/portrait_mask_blank.dds"
								}

								blockoverride "portrait_button_template_tooltip" {
									tooltip = "[CombatWindow.GetLeftSideCommanderTooltip]"
								}

								blockoverride "coa" {}
								blockoverride "opinion_box" {}
								blockoverride "status_icons" {}
							}
						}

						icon = {
							parentanchor = bottom|left
							position = { 9 0 }
							size = { 200 100 }
							texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
							mirror = vertical
							color = { 0.15 0.15 0.15 0.5 }
						}

						coa_realm_medium_crown = {
							datacontext = "[CombatWindow.GetLeftSideMainParticipant]"
							parentanchor = bottom|left
							position = { 20 -70 }
							tooltip = "[CombatWindow.GetLeftSideRealmFlagTooltip]"
						}

						text_label_center = {
							visible = "[Not(Character.IsValid)]"
							parentanchor = bottom|left
							widgetanchor = center
							position = { 110 -25 }
							text = "COMBAT_WINDOW_NO_COMMANDER"
						}

						flowcontainer = {
							name = "martial_value"
							visible = "[Character.IsValid]"
							parentanchor = bottom|left
							position = { 100 -80 }
							tooltip = "[Character.GetCommanderAdvantageDesc]"
							direction = vertical

							background = {
								using = Background_Area_Dark
								margin = { 12 8 }
								color = { 0.1 0.1 0.1 0.8 }
							}

							background = {
								using = Background_Frame
								margin = { 9 5 }
								alpha = 0.7
							}

							icon = {
								name = "icon"
								parentanchor = hcenter
								texture = "gfx/interface/icons/icon_commander_advantage.dds"
								size = { 30 30 }
							}

							text_single = {
								name = "label"
								parentanchor = hcenter
								text = "[Character.GetCommanderAdvantage]"
								default_format = "#high;glow_color:{0.1,0.1,0.1,1.0}"
								using = Font_Size_Big
								align = nobaseline
							}
						}

						dynamicgridbox = {
							datamodel = "[CombatWindow.GetLeftCommanderTraits]"
							visible = "[LessThanOrEqualTo_int32(GetDataModelSize(CombatWindow.GetLeftCommanderTraits), '(int32)3')]"

							parentanchor = bottom|left
							position = { 25 -5 }
							flipdirection = yes
							datamodel_wrap = 3

							item = {
								icon_trait = {
									blockoverride "icon_size"
									{
										size = { 50 50 }
									}
								}
							}
						}

						dynamicgridbox = {
							datamodel = "[CombatWindow.GetLeftCommanderTraits]"
							visible = "[EqualTo_int32(GetDataModelSize(CombatWindow.GetLeftCommanderTraits), '(int32)4')]"

							parentanchor = bottom|left
							position = { 25 -5 }
							flipdirection = yes

							item = {
								icon_trait = {
									blockoverride "icon_size"
									{
										size = { 45 45 }
									}
								}
							}
						}

						dynamicgridbox = {
							datamodel = "[CombatWindow.GetLeftCommanderTraits]"
							visible = "[EqualTo_int32(GetDataModelSize(CombatWindow.GetLeftCommanderTraits), '(int32)5')]"

							parentanchor = bottom|left
							position = { 25 -5 }
							flipdirection = yes

							item = {
								icon_trait = {
									blockoverride "icon_size"
									{
										size = { 36 36 }
									}
								}
							}
						}

						dynamicgridbox = {
							datamodel = "[CombatWindow.GetLeftCommanderTraits]"
							visible = "[GreaterThanOrEqualTo_int32(GetDataModelSize(CombatWindow.GetLeftCommanderTraits), '(int32)5')]"

							parentanchor = bottom|left
							position = { 25 -5 }
							flipdirection = yes
							datamodel_wrap = 8

							item = {
								icon_trait = {
									blockoverride "icon_size"
									{
										size = { 30 30 }
									}
								}
							}
						}

						flowcontainer = {
							parentanchor = bottom|left
							position = { 25 -60 }
							ignoreinvisible = yes

							text_label_left = {
								visible = "[CombatWindow.IsAttackerOnLeftSide]"
								text = "ATTACKER"
								default_format = "#defender_color"
							}

							text_label_left = {
								visible = "[Not(CombatWindow.IsAttackerOnLeftSide)]"
								text = "DEFENDER"
								default_format = "#defender_color"
							}
						}
					}

					### Commander Right
					widget = {
						name = "right_commander"
						datacontext = "[CombatWindow.GetRightSideCommander]"
						parentanchor = bottom|right
						position = { -10 -25 }
						allow_outside = yes

						container = {
							parentanchor = bottom|right
							visible = "[Character.IsValid]"

							portrait_body = {
								visible = "[Not(CombatWindow.IsAttackerOnLeftSide)]"

								blockoverride "portrait_button"
								{
									portrait_texture = "[Character.GetPortrait('environment_combat_window', 'camera_combat_window', 'war_attacker', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
									mask = "gfx/portraits/portrait_mask_blank.dds"

									portrait_scale = { -1 1 }
									portrait_offset = { 1 0 }
								}

								blockoverride "portrait_button_template_tooltip" {
									tooltip = "[CombatWindow.GetRightSideCommanderTooltip]"
								}

								blockoverride "coa" {}
								blockoverride "opinion_box" {}
								blockoverride "status_icons" {}
							}

							portrait_body = {
								visible = "[CombatWindow.IsAttackerOnLeftSide]"

								blockoverride "portrait_button"
								{
									portrait_texture = "[Character.GetPortrait('environment_combat_window', 'camera_combat_window', 'war_defender', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
									mask = "gfx/portraits/portrait_mask_blank.dds"

									portrait_scale = { -1 1 }
									portrait_offset = { 1 0 }
								}

								blockoverride "portrait_button_template_tooltip" {
									tooltip = "[CombatWindow.GetRightSideCommanderTooltip]"
								}

								blockoverride "coa" {}
								blockoverride "opinion_box" {}
								blockoverride "status_icons" {}
							}
						}

						icon = {
							parentanchor = bottom|right
							position = { -9 0 }
							size = { 200 100 }
							texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
							mirror = vertical
							color = { 0.15 0.15 0.15 0.5 }
						}

						coa_realm_medium_crown = {
							datacontext = "[CombatWindow.GetRightSideMainParticipant]"
							parentanchor = bottom|right
							position = { -20 -70 }
							tooltip = "[CombatWindow.GetRightSideRealmFlagTooltip]"
						}

						text_label_center = {
							visible = "[Not(Character.IsValid)]"
							parentanchor = bottom|right
							widgetanchor = center
							position = { -110 -25 }
							text = "COMBAT_WINDOW_NO_COMMANDER"
						}

						flowcontainer = {
							name = "martial_value"
							visible = "[Character.IsValid]"
							parentanchor = bottom|right
							position = { -100 -80 }
							tooltip = "[Character.GetCommanderAdvantageDesc]"
							direction = vertical

							background = {
								using = Background_Area_Dark
								margin = { 12 8 }
								color = { 0.1 0.1 0.1 0.8 }
							}

							background = {
								using = Background_Frame
								margin = { 9 5 }
								alpha = 0.7
							}

							icon = {
								name = "icon"
								parentanchor = hcenter
								texture = "gfx/interface/icons/icon_commander_advantage.dds"
								size = { 30 30 }
							}

							text_single = {
								name = "label"
								parentanchor = hcenter
								text = "[Character.GetCommanderAdvantage]"
								default_format = "#high;glow_color:{0.1,0.1,0.1,1.0}"
								using = Font_Size_Big
								align = nobaseline
							}
						}

						dynamicgridbox = {
							datamodel = "[CombatWindow.GetRightCommanderTraits]"
							visible = "[LessThanOrEqualTo_int32(GetDataModelSize(CombatWindow.GetRightCommanderTraits), '(int32)3')]"

							parentanchor = bottom|right
							position = { -25 -5 }
							flipdirection = yes
							datamodel_wrap = 3

							item = {
								icon_trait = {
									blockoverride "icon_size"
									{
										size = { 50 50 }
									}
								}
							}
						}

						dynamicgridbox = {
							datamodel = "[CombatWindow.GetRightCommanderTraits]"
							visible = "[EqualTo_int32(GetDataModelSize(CombatWindow.GetRightCommanderTraits), '(int32)4')]"

							parentanchor = bottom|right
							position = { -25 -5 }
							flipdirection = yes

							item = {
								icon_trait = {
									blockoverride "icon_size"
									{
										size = { 45 45 }
									}
								}
							}
						}

						dynamicgridbox = {
							datamodel = "[CombatWindow.GetRightCommanderTraits]"
							visible = "[EqualTo_int32(GetDataModelSize(CombatWindow.GetRightCommanderTraits), '(int32)5')]"

							parentanchor = bottom|right
							position = { -25 -5 }
							flipdirection = yes

							item = {
								icon_trait = {
									blockoverride "icon_size"
									{
										size = { 36 36 }
									}
								}
							}
						}

						dynamicgridbox = {
							datamodel = "[CombatWindow.GetRightCommanderTraits]"
							visible = "[GreaterThanOrEqualTo_int32(GetDataModelSize(CombatWindow.GetRightCommanderTraits), '(int32)5')]"

							parentanchor = bottom|right
							position = { -25 -5 }
							flipdirection = yes
							datamodel_wrap = 8

							item = {
								icon_trait = {
									blockoverride "icon_size"
									{
										size = { 30 30 }
									}
								}
							}
						}

						flowcontainer = {
							parentanchor = bottom|right
							position = { -25 -60 }
							ignoreinvisible = yes

							text_label_right = {
								visible = "[Not(CombatWindow.IsAttackerOnLeftSide)]"
								text = "ATTACKER"
								default_format = "#attacker_color"
							}

							text_label_right = {
								visible = "[CombatWindow.IsAttackerOnLeftSide]"
								text = "DEFENDER"
								default_format = "#attacker_color"
							}
						}
					}
				}
			}

			text_label_center = {
				visible = "[And(CombatWindow.IsCombatInPursuitPhase, CombatWindow.IsRightSideWinning)]"
				parentanchor = top|hcenter
				position = { 0 17 }
				fontsize = 30
				text = "game_concept_defeat"
				default_format = "#negative_value;bold;glow_color:{0.1,0.1,0.1,1.0}"

				using = Animation_ShowHide_Standard

				background = {
					texture = "gfx/interface/component_masks/mask_fade_halfcircle.dds"
					margin = { 100 0 }
					margin_bottom = 100
					margin_top = 0
					using = Color_Red
					alpha = 0.3
				}
			}

			text_label_center = {
				visible = "[And(CombatWindow.IsCombatInPursuitPhase, CombatWindow.IsLeftSideWinning)]"
				parentanchor = top|hcenter
				position = { 0 17 }
				fontsize = 30
				text = "game_concept_victory"
				default_format = "#positive_value;bold;glow_color:{0.1,0.1,0.1,1.0}"

				using = Animation_ShowHide_Standard

				background = {
					texture = "gfx/interface/component_masks/mask_fade_halfcircle.dds"
					margin = { 100 0 }
					margin_bottom = 100
					margin_top = 3
					using = Color_Green
					alpha = 0.3
				}
			}

			widget = {
				name = "combat_progress"
				visible = "[Not(CombatWindow.IsCombatInPursuitPhase)]"
				parentanchor = top|hcenter
				position = { 0 19 }
				size = { 410 42 }
				tooltip = "CV_TT_RELATIVE_SOLDIERS"
				using = tooltip_above

				using = Animation_ShowHide_Standard

				background = {
					texture = "gfx/interface/progressbars/war_progress_noprogress.dds"
					margin = { 0 -3 }
				}

				widget = {
					size = { 100% 100% }
					scissor = yes

					hbox = {
						margin_top = 5

						icon = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							layoutstretchfactor_horizontal = "[GetProgressBarValueMaxScaled( CombatWindow.GetCombat.GetPowerSlider, '(float)100', '(int32)410' )]"
							size = { 0 0 }

							texture = "gfx/interface/progressbars/war_progress_blue.dds"
							spriteType = Corneredtiled

							modify_texture = {
								name = "flash"
								texture = "gfx/interface/colors/orange.dds"
								blend_mode = colordodge
								alpha = 0
							}

							state = {
								name = "daily_tick_left_most_casualties"
								next = "b"
								duration = 0.05
								using = Animation_Curve_Default

								modify_texture = {
									name = "flash"
									alpha = 0.5
								}
							}

							state = {
								name = "b"
								duration = 0.2
								using = Animation_Curve_Default

								modify_texture = {
									name = "flash"
									alpha = 0
								}
							}

							icon = {
								parentanchor = right|vcenter
								position = { 5 0 }

								size = { 25 100% }
								texture = "gfx/interface/progressbars/progressbar_center_glow.dds"
								color = { 0.9 0.9 0.9 1 }

								state = {
									name = a
									next = b
									trigger_on_create = yes
									duration = 0.2
									alpha = 1
								}

								state = {
									name = b
									next = a
									duration = 0.4
									alpha = 0.85
								}
							}
						}

						icon = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							layoutstretchfactor_horizontal = "[GetProgressBarValueMaxOtherScaled( CombatWindow.GetCombat.GetPowerSlider, '(float)100', '(int32)410' )]"
							size = { 0 0 }

							texture = "gfx/interface/progressbars/war_progress_red.dds"
							spriteType = Corneredtiled

							modify_texture = {
								name = "flash"
								texture = "gfx/interface/colors/orange.dds"
								blend_mode = colordodge
								alpha = 0
							}

							state = {
								name = "daily_tick_right_most_casualties"
								next = "b"
								duration = 0.05
								using = Animation_Curve_Default

								modify_texture = {
									name = "flash"
									alpha = 0.3
								}
							}

							state = {
								name = "b"
								duration = 0.2
								using = Animation_Curve_Default

								modify_texture = {
									name = "flash"
									alpha = 0
								}
							}

							icon = {
								parentanchor = left|vcenter
								position = { -6 0 }
								mirror = horizontal

								size = { 25 100% }
								texture = "gfx/interface/progressbars/progressbar_center_glow.dds"
								color = { 0.9 0.9 0.9 1 }

								state = {
									name = a
									next = b
									trigger_on_create = yes
									duration = 0.2
									alpha = 1
								}

								state = {
									name = b
									next = a
									duration = 0.4
									alpha = 0.85
								}
							}
						}
					}
				}

				widget = {
					name = "power_bar_frame"
					parentanchor = top
					size = { 100% 100% }
					alwaystransparent = yes

					background = {
						texture = "gfx/interface/progressbars/siege_frame.dds"
						spriteType = Corneredstretched
						spriteborder = { 30 40 }
						margin = { 5 0 }
						margin_bottom = 10
						texture_density = 2
					}
				}

				text_label_center = {
					name = "combat_result"
					visible = "[CombatWindow.IsCombatInPursuitPhase]"
					parentanchor = center
					text = "[CombatWindow.GetWonLostLabel]"
					font = TitleFont
					fontsize = 35
					align = nobaseline
					margin_bottom = 0
				}
			}

			widget = {
				name = "troop_counters"
				parentanchor = top|hcenter
				position = { 0 63 }
				size = { 410 70 }

				widget = {
					size = { 100% 100% }
					visible = "[CombatWindow.IsCombatInPursuitPhase]"

					state = {
						name = _show
						using = Animation_FadeIn_Standard
						duration = 0.8
					}

					state = {
						name = _hide
						using = Animation_FadeOut_Standard
					}

					animation_soldier_loss = {
						visible = "[CombatWindow.IsCombatInPursuitPhase]"
						position = { 55 20 }

						blockoverride "animation_trigger_name"
						{
							name = "daily_tick_left_most_casualties"
						}
					}

					animation_soldier_loss = {
						visible = "[CombatWindow.IsCombatInPursuitPhase]"
						parentanchor = right
						position = { -22 20 }

						blockoverride "animation_trigger_name"
						{
							name = "daily_tick_right_most_casualties"
						}
					}
				}

				flowcontainer = {
					name = "left_soldiers"
					datacontext = "[CombatWindow.GetLeftCombatSide]"
					datacontext = "[CombatSide.GetComposition]"
					tooltip = "[ArmyComposition.GetArmyCompositionTooltip]"
					ignoreinvisible = yes

					background = {
						margin = { 45 20 }
						texture = "gfx/interface/component_masks/mask_fade_circle.dds"
						color = { 0.2 0.2 0.2 0.8 }
					}

					flowcontainer = {
						visible = "[And( CombatWindow.IsCombatInPursuitPhase, Not(CombatSide.IsStillFighting ))]"
						spacing = 3

						using = Animation_ShowHide_Standard

						icon = {
							name = "fled_icon_left"
							parentanchor = vcenter
							size = { 25 25 }
							texture = "gfx/interface/icons/icon_retreat.dds"
						}

						text_single = {
							text = "[ArmyComposition.GetSoldierCountString]"
							default_format = "#N;glow_color:{0.1,0.1,0.1,1}"
							fontsize = 25
							align = nobaseline
						}
					}

					flowcontainer = {
						visible = "[Or( Not(CombatWindow.IsCombatInPursuitPhase), CombatSide.IsStillFighting )]"
						direction = vertical
						spacing = -5

						using = Animation_ShowHide_Standard

						flowcontainer = {
							spacing = 3

							icon = {
								name = "icon_soldier"
								parentanchor = vcenter
								texture = "gfx/interface/icons/icon_soldier.dds"
								size = { 25 25 }
							}

							text_single = {
								text = "[CombatSide.GetCurrentFightingMen|0]"
								fontsize = 25
								align = nobaseline
								default_format = "#high;glow_color:{0.1,0.1,0.1,1}"

								text_single = {
									text = "[CombatSide.GetCurrentFightingMen|0]"
									fontsize = 25
									align = nobaseline
									default_format = "#N;glow_color:{0.1,0.1,0.1,1}"

									state = {
										name = "daily_tick_left_most_casualties"
										next = "b"
										duration = 0.1
										using = Animation_Curve_Default
										alpha = 1
										trigger_on_create = yes
									}

									state = {
										name = "b"
										duration = 0.3
										using = Animation_Curve_Default
										alpha = 0
									}
								}

							}

							army_quality_icon = {
								parentanchor = vcenter
							}
						}

						flowcontainer = {
							visible = "[CombatSide.IsStillFighting]"
							tooltip = "COW_TT_SOFT_CASUALTIES_LEFT"
							spacing = 3
							ignoreinvisible = yes

							using = Animation_ShowHide_Standard

							icon = {
								name = "fled_icon_left"
								parentanchor = vcenter
								size = { 20 20 }
								texture = "gfx/interface/icons/icon_retreat.dds"
							}

							text_single = {
								text = "[CombatWindow.GetLeftCombatSide.GetSoftCasualties|0]"
								default_format = "#medium;glow_color:{0.1,0.1,0.1,1}"
								align = nobaseline
							}
						}
					}
				}

				text_label_center = {
					parentanchor = top|hcenter
					position = { 0 1 }
					text = "[CombatWindow.GetName]"
					max_width = 185
					fontsize = 20
					font = TitleFont
					default_format = "#high"
					alpha = 0.5
				}

				flowcontainer = {
					name = "right_soldiers"
					parentanchor = right
					datacontext = "[CombatWindow.GetRightCombatSide]"
					datacontext = "[CombatSide.GetComposition]"
					tooltip = "[ArmyComposition.GetArmyCompositionTooltip]"
					ignoreinvisible = yes

					background = {
						margin = { 45 20 }
						texture = "gfx/interface/component_masks/mask_fade_circle.dds"
						color = { 0.2 0.2 0.2 0.8 }
					}

					flowcontainer = {
						visible = "[And( CombatWindow.IsCombatInPursuitPhase, Not(CombatSide.IsStillFighting ))]"
						spacing = 3

						using = Animation_ShowHide_Standard

						icon = {
							name = "fled_icon_left"
							parentanchor = vcenter
							size = { 25 25 }
							texture = "gfx/interface/icons/icon_retreat.dds"
						}

						text_single = {
							text = "[ArmyComposition.GetSoldierCountString]"
							default_format = "#N;glow_color:{0.1,0.1,0.1,1}"
							fontsize = 25
							align = nobaseline
						}

					}

					flowcontainer = {
						visible = "[Or( Not(CombatWindow.IsCombatInPursuitPhase), CombatSide.IsStillFighting )]"
						direction = vertical
						spacing = -5

						using = Animation_ShowHide_Standard

						flowcontainer = {
							spacing = 3

							icon = {
								name = "icon_soldier"
								parentanchor = vcenter
								texture = "gfx/interface/icons/icon_soldier.dds"
								size = { 25 25 }
							}

							text_single = {
								text = "[CombatSide.GetCurrentFightingMen|0]"
								fontsize = 25
								align = nobaseline
								default_format = "#high;glow_color:{0.1,0.1,0.1,1}"

								text_single = {
									text = "[CombatSide.GetCurrentFightingMen|0]"
									fontsize = 25
									align = nobaseline
									default_format = "#N;glow_color:{0.1,0.1,0.1,1}"

									state = {
										name = "daily_tick_right_most_casualties"
										next = "b"
										duration = 0.1
										using = Animation_Curve_Default
										alpha = 1
										trigger_on_create = yes
									}

									state = {
										name = "b"
										duration = 0.3
										using = Animation_Curve_Default
										alpha = 0
									}
								}
							}

							army_quality_icon = {
								parentanchor = vcenter
							}
						}

						flowcontainer = {
							visible = "[CombatSide.IsStillFighting]"
							tooltip = "COW_TT_SOFT_CASUALTIES_RIGHT"
							spacing = 3
							parentanchor = right

							using = Animation_ShowHide_Standard

							icon = {
								name = "fled_icon_left"
								parentanchor = vcenter
								size = { 20 20 }
								texture = "gfx/interface/icons/icon_retreat.dds"
							}

							text_single = {
								text = "[CombatWindow.GetRightCombatSide.GetSoftCasualties|0]"
								default_format = "#medium;glow_color:{0.1,0.1,0.1,1}"
								align = nobaseline
							}
						}
					}
				}
			}

			flowcontainer = {
				position = { 187 26 }
				spacing = 3

				# button_plus = {
				# 	onclick = "[GetVariableSystem.Toggle('big_battle'))]"
				# 	shortcut = zoom_out
				# 	raw_tooltip = "#T [Localize('SHOW_DETAILS')]"
				# }

				icon = {
					name = "terrain"
					datacontext = "[CombatWindow.GetCombat.GetProvince.GetTerrain]"
					texture = "[Terrain.GetIcon]"
					size = { 30 30 }
					tooltip = "HOLDING_TERRAIN_TOOLTIP"
					alwaystransparent = no
				}
			}

			widget = {
				name = "mouseover_catcher"
				parentanchor = top|right
				position = { -135 15 }
				size = { 70 70 }
				alwaystransparent = no
			}

			flowcontainer = {
				parentanchor = right
				position = { -164 25 }

				button_go_to_my_location = {
					onclick = "[CombatWindow.GoToProvince]"
					tooltip = "GOTO_PROVINCE_TT"
				}

				button_close = {
					onclick = "[CombatWindow.CloseAndDeselect]"
					shortcut = close_window
				}
			}

			### Battle event
			container = {
				visible = "[CombatWindow.BattleEventIsShown]"
				parentanchor = top|hcenter
				widgetanchor = bottom|hcenter
				allow_outside = yes
				position = { 0 -20 }

				state = {
					name = _show
					using = Animation_FadeIn_Standard
					position_y = -20
					start_sound = {
						soundeffect = "event:/SFX/UI/Generic/Windows/sfx_ui_generic_window_small"
					}
				}

				state = {
					name = _hide
					using = Animation_FadeOut_Standard
					position_y = 0
					start_sound = {
						soundeffect = "event:/SFX/UI/Generic/Windows/sfx_ui_generic_window_small"
					}
				}

				button_group = {
					size = { 100% 100% }
					onclick = "[CombatWindow.IncrementBattleEvent]"

					background = {
						using = Background_Area_Dark
						color = { 0.13 0.13 0.13 0.85 }
					}
				}

				flowcontainer = {
					name = "battle_event"
					datacontext = "[CombatWindow.GetCurrentBattleEvent]"
					margin = { 10 10 }
					allow_outside = yes

					portrait_head_small = {
						name = "left_portrait"
						datacontext = "[BattleEvent.GetLeftCharacter( CombatWindow.GetLeftCombatSide.IsAttacker )]"
						visible = "[Character.IsValid]"

						blockoverride "opinion_box"	{}
						blockoverride "coa" {}
					}

					text_multi = {
						name = "title"
						autoresize = yes
						max_width = 230
						min_width = 230
						margin = { 5 5 }

						text = "[CombatWindow.GetCurrentBattleEvent.GetTitle( CombatWindow.GetLeftCombatSide.IsAttacker )]"
					}

					portrait_head_small = {
						name = "right_portrait"
						datacontext = "[BattleEvent.GetRightCharacter( CombatWindow.GetLeftCombatSide.IsAttacker )]"
						visible = "[Character.IsValid]"

						blockoverride "opinion_box" {}
						blockoverride "coa" {}

						blockoverride "portrait_button"
						{
							portrait_scale = { -1 1 }
							portrait_offset = { 1 0 }
						}
					}
				}
			}

			icon = {
				name = "center_box"
				parentanchor = bottom|hcenter
				position = { 0 -25 }
				size = { 450 170 }

				texture = "gfx/interface/window_combat/combat_info_box.dds"

				modify_texture = {
					name = "1_maneuver"
					visible = "[CombatWindow.IsCombatInManeuverPhase]"
					texture = "gfx/interface/window_combat/combat_info_box_glow.dds"
					blend_mode = colordodge
				}

				modify_texture = {
					name = "2_reteat"
					visible = "[CombatWindow.ShowNoRetreatIcon]"
					texture = "gfx/interface/window_combat/combat_info_box_glow.dds"
					blend_mode = colordodge
					translate_uv = { -0.07 0 }
				}

				modify_texture = {
					name = "3_no_reteat"
					visible = "[CombatWindow.ShowRetreatIcon]"
					texture = "gfx/interface/window_combat/combat_info_box_glow.dds"
					blend_mode = colordodge
					translate_uv = { -0.13 0 }
				}

				modify_texture = {
					name = "4_pursuit"
					visible = "[CombatWindow.IsCombatInPursuitPhase]"
					texture = "gfx/interface/window_combat/combat_info_box_glow.dds"
					blend_mode = colordodge
					translate_uv = { -0.198 0 }
				}

				modify_texture = {
					name = "flash"
					texture = "gfx/interface/window_combat/combat_info_box_glow_full.dds"
					blend_mode = colordodge
					alpha = 0
				}

				state = {
					name = "phase_change"
					next = "b"
					duration = 0.4
					using = Animation_Transition_Start

					modify_texture = {
						name = "flash"
						alpha = 1
					}
				}

				state = {
					name = "b"
					duration = 1
					using = Animation_Transition_End

					modify_texture = {
						name = "flash"
						alpha = 0
					}
				}

				background = {
					texture ="gfx/interface/component_masks/patterns/mask_pattern_02.dds"
					spriteType = Corneredtiled
					color = { 0.6 0.7 0.65 0.3 }
					margin = { -10 0 }
					margin_top = -30

					modify_texture = {
						texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
						blend_mode = alphamultiply
						mirror = vertical
					}
				}

				widget = {
					name = "combat_phases"
					parentanchor = top|hcenter
					position = { 0 10 }
					size = { 120 28 }
					tooltip = "[CombatWindow.GetCurrentPhaseTooltip]"
					using = tooltip_ne
				}

				widget = {
					name = "main_info"
					size = { 100% 100% }

					vbox = {
						margin = { 10 10 }
						margin_top = 40

						widget = {
							layoutpolicy_horizontal = expanding
							size = { 0 45 }

							widget = {
								name = "advantage"
								visible = "[Not(CombatWindow.IsCombatInPursuitPhase)]"
								#visible_at_creation = no
								position = { 0 0 }
								size = { 100% 100% }
								tooltip = "[CombatWindow.GetAdvantageDescription]"

								using = Animation_ShowHide_Standard

								hbox = {
									margin = { 38 0 }
									margin_top = 0

									vbox = {
										layoutpolicy_vertical = expanding
										margin_top = 5

										widget = {
											name = "progressbar"
											size = { 145 10 }

											background = {
												texture = "gfx/interface/component_overlay/overlay_stone.dds"
												texture_density = 2
												spritetype = corneredtiled
												color = { 0.3 0.3 0.34 1 }
												alpha = 0.8
											}

											arrow_progressbar_icon = {
												size = { 100% 100% }
												visible = "[GreaterThan_CFixedPoint( CombatWindow.GetAdvantage, '(CFixedPoint)40')]"

												blockoverride "color"
												{
													using = Color_Blue
													mirror = horizontal
												}
											}

											hbox = {
												visible = "[And(LessThanOrEqualTo_CFixedPoint( CombatWindow.GetAdvantage, '(CFixedPoint)40'), GreaterThan_CFixedPoint( CombatWindow.GetAdvantage, '(CFixedPoint)0'))]"

												widget = {
													layoutstretchfactor_horizontal = "[GetProgressBarValueMaxOtherScaled( FixedPointToFloat( CombatWindow.GetAdvantage ), '(float)40', '(int32)145' )]"
													layoutpolicy_horizontal = expanding
												}

												arrow_progressbar_icon  = {
													layoutstretchfactor_horizontal = "[GetProgressBarValueMaxScaled( FixedPointToFloat( CombatWindow.GetAdvantage ), '(float)40', '(int32)145' )]"
													layoutpolicy_horizontal = expanding
													layoutpolicy_vertical = expanding

													blockoverride "color"
													{
														using = Color_Blue
														mirror = horizontal
													}
												}
											}
										}

										hbox = {
											name = "advantage_icons"
											layoutpolicy_horizontal = expanding
											layoutpolicy_vertical = expanding
											margin_top = 4

											# icon = {
											# 	name = "terrain"
											# 	datacontext = "[CombatWindow.GetCombat.GetProvince.GetTerrain]"
											# 	texture = "[Terrain.GetIcon]"
											# 	size = { 30 30 }
											# 	tooltip = "HOLDING_TERRAIN_TOOLTIP"
											# }

											expand = {}
										}

										expand = {}
									}

									expand = {}

									vbox = {
										layoutpolicy_vertical = expanding
										margin_top = 5

										widget = {
											name = "progressbar"
											size = { 145 10 }

											background = {
												texture = "gfx/interface/component_overlay/overlay_stone.dds"
												texture_density = 2
												spritetype = corneredtiled
												color = { 0.3 0.3 0.34 1 }
												alpha = 0.8
											}

											arrow_progressbar_icon = {
												size = { 100% 100% }
												visible = "[LessThan_CFixedPoint( CombatWindow.GetAdvantage, '(CFixedPoint)-40')]"

												blockoverride "color"
												{
													using = Color_Red
												}
											}


											hbox = {
												visible = "[And(GreaterThanOrEqualTo_CFixedPoint( CombatWindow.GetAdvantage, '(CFixedPoint)-40'), LessThan_CFixedPoint( CombatWindow.GetAdvantage, '(CFixedPoint)0'))]"

												arrow_progressbar_icon  = {
													layoutstretchfactor_horizontal = "[GetProgressBarValueMaxScaled( Multiply_float( FixedPointToFloat( CombatWindow.GetAdvantage ), '(float)-1'), '(float)40', '(int32)145' )]"
													layoutpolicy_horizontal = expanding
													layoutpolicy_vertical = expanding

													blockoverride "color"
													{
														using = Color_Red
													}
												}

												widget = {
													layoutstretchfactor_horizontal = "[GetProgressBarValueMaxOtherScaled( Multiply_float( FixedPointToFloat( CombatWindow.GetAdvantage ), '(float)-1'), '(float)40', '(int32)145' )]"
													layoutpolicy_horizontal = expanding
												}
											}
										}

										hbox = {
											name = "advantage_icons"
											layoutpolicy_horizontal = expanding
											layoutpolicy_vertical = expanding
											margin_top = 4

											# icon = {
											# 	name = "terrain"
											# 	datacontext = "[CombatWindow.GetCombat.GetProvince.GetTerrain]"
											# 	texture = "[Terrain.GetIcon]"
											# 	size = { 30 30 }
											# 	tooltip = "HOLDING_TERRAIN_TOOLTIP"
											# }

											expand = {}
										}

										expand = {}
									}
								}

								icon = {
									visible = "[Not(CombatWindow.IsCombatInPursuitPhase)]"
									parentanchor = top|hcenter
									position = { 0 -10 }
									size = { 450 64 }
									texture = "gfx/interface/window_combat/combat_advantage_bars.dds"

									modify_texture = {
										name = "swoosh_left"
										texture = "gfx/interface/component_effects/effect_shimmer.dds"
										blend_mode = colordodge
										alpha = 1
										translate_uv = { 0.6 0 }
									}

									modify_texture = {
										name = "swoosh_right"
										texture = "gfx/interface/component_effects/effect_shimmer.dds"
										blend_mode = colordodge
										alpha = 1
										translate_uv = { -0.6 0 }
									}

									modify_texture = {
										name = "flash"
										texture = "gfx/interface/window_combat/combat_info_advantage_glow.dds"
										blend_mode = colordodge
										alpha = 0
									}

									# Left side
									state = {
										name = "combat_left_roll"
										next = "left_b"
										delay = 0.4
										trigger_on_create = yes

										modify_texture = {
											name = "swoosh_left"
											alpha = 0.2
											translate_uv = { 0.6 0 }
										}
									}

									state = {
										name = "left_b"
										next = "left_c"
										duration = 0.3

										modify_texture = {
											name = "swoosh_left"
											alpha = 0.3
											translate_uv = { 0 0 }
										}
									}

									state = {
										name = "left_c"
										next = "left_d"

										duration = 0.1
										using = Animation_Curve_Default

										modify_texture = {
											name = "flash"
											alpha = 0.3
										}

										modify_texture = {
											name = "swoosh_left"
											alpha = 0.2
										}
									}

									state = {
										name = "left_d"
										duration = 0.8
										bezier = { 0 0.8 0.6 1 }

										modify_texture = {
											name = "flash"
											alpha = 0
										}

										modify_texture = {
											name = "swoosh_left"
											alpha = 0
										}
									}


									# Right side
									state = {
										name = "combat_right_roll"
										next = "right_b"
										delay = 0.4
										trigger_on_create = yes

										modify_texture = {
											name = "swoosh_right"
											alpha = 0.2
											translate_uv = { -0.6 0 }
										}
									}

									state = {
										name = "right_b"
										next = "right_c"
										duration = 0.3

										modify_texture = {
											name = "swoosh_right"
											alpha = 0.3
											translate_uv = { 0 0 }
										}
									}

									state = {
										name = "right_c"
										next = "right_d"

										duration = 0.1
										using = Animation_Curve_Default

										modify_texture = {
											name = "flash"
											alpha = 0.3
										}

										modify_texture = {
											name = "swoosh_right"
											alpha = 0.2
										}
									}

									state = {
										name = "right_d"
										duration = 0.8
										bezier = { 0 0.8 0.6 1 }

										modify_texture = {
											name = "flash"
											alpha = 0
										}

										modify_texture = {
											name = "swoosh_right"
											alpha = 0
										}
									}
								}

								icon = {
									parentanchor = top|left
									position = { -5 -5 }
									texture = "gfx/interface/window_combat/combat_roll_bg.dds"
									size = { 55 55 }
									tooltip = COW_TT_CURRENT_ROLL_LEFT

									modify_texture = {
										name = "flash"
										texture = "gfx/interface/component_effects/effect_shimmer.dds"
										blend_mode = colordodge
										alpha = 0
									}

									state = {
										name = "combat_left_roll"
										next = "b"
										trigger_on_create = yes

										duration = 0.1
										using = Animation_Curve_Default

										modify_texture = {
											name = "flash"
											alpha = 1
										}
									}

									state = {
										name = "b"

										duration = 0.3
										using = Animation_Curve_Default

										modify_texture = {
											name = "flash"
											alpha = 0
										}
									}

									text_single = {
										parentanchor = center
										text = "[CombatWindow.GetLeftRoll]"
										default_format = "#high;glow_color:{0.1,0.1,0.1,1.0}"
										fontsize = 25
										align = nobaseline
									}
								}

								icon = {
									parentanchor = top|right
									position = { 5 -5 }
									texture = "gfx/interface/window_combat/combat_roll_bg.dds"
									size = { 55 55 }
									tooltip = COW_TT_CURRENT_ROLL_RIGHT
									mirror = horizontal

									modify_texture = {
										name = "flash"
										texture = "gfx/interface/component_effects/effect_shimmer.dds"
										blend_mode = colordodge
										alpha = 0
									}

									state = {
										name = "combat_right_roll"
										next = "b"
										trigger_on_create = yes

										duration = 0.1
										using = Animation_Curve_Default

										modify_texture = {
											name = "flash"
											alpha = 1
										}
									}

									state = {
										name = "b"

										duration = 0.3
										using = Animation_Curve_Default

										modify_texture = {
											name = "flash"
											alpha = 0
										}
									}

									text_single = {
										parentanchor = center
										text = "[CombatWindow.GetRightRoll]"
										default_format = "#high;glow_color:{0.1,0.1,0.1,1.0}"
										fontsize = 25
										align = nobaseline
									}
								}

								widget = {
									size = { 50 50 }
									parentanchor = center
									position = { 0 -5 }

									text_single = {
										name = "advantage"
										parentanchor = center
										text = "COMBAT_WINDOW_ADVANTAGE"
										fontsize = 20
										tooltip = "[CombatWindow.GetAdvantageDescription]"
										default_format = "#high;bold;glow_color:{0.1,0.1,0.1,1.0}"
										align = nobaseline
									}
								}
							}

							widget = {
								name = "pursuit_phase"
								visible = "[CombatWindow.IsCombatInPursuitPhase]"
								#visible_at_creation = no
								size = { 100% 100% }

								using = Animation_ShowHide_Standard

								background = {
									using = Background_Area
								}

								hbox = {
									margin = { 20 0 }
									margin_top = 5

									hbox = {
										visible = "[CombatWindow.IsRightSideWinning]"
										spacing = 5

										icon = {
											name = "left_side_fled"
											texture = "gfx/interface/icons/icon_fled.dds"
											size = { 35 35 }
										}

										text_single = {
											text = "[CombatWindow.GetLeftCombatSide.GetPursuingRetreatingLabel]"
											using = Font_Size_Medium
											align = nobaseline
											default_format = "#N"
										}
									}

									hbox = {
										visible = "[CombatWindow.IsLeftSideWinning]"
										spacing = 5

										icon = {
											name = "left_side_pursuing"
											texture = "gfx/interface/icons/icon_pursuit.dds"
											size = { 35 35 }
										}

										text_single = {
											text = "[CombatWindow.GetLeftCombatSide.GetPursuingRetreatingLabel]"
											using = Font_Size_Medium
											align = nobaseline
										}

									}

									expand = {}

									hbox = {
										visible = "[CombatWindow.IsLeftSideWinning]"
										spacing = 5

										text_single = {
											text = "[CombatWindow.GetRightCombatSide.GetPursuingRetreatingLabel]"
											using = Font_Size_Medium
											align = nobaseline
											default_format = "#N"
										}

										icon = {
											name = "right_side_fled"
											texture = "gfx/interface/icons/icon_fled.dds"
											size = { 35 35 }
										}
									}

									hbox = {
										visible = "[CombatWindow.IsRightSideWinning]"
										spacing = 5

										text_single = {
											text = "[CombatWindow.GetRightCombatSide.GetPursuingRetreatingLabel]"
											using = Font_Size_Medium
											align = nobaseline
										}

										icon = {
											name = "right_side_pursuing"
											texture = "gfx/interface/icons/icon_pursuit.dds"
											mirror = horizontal
											size = { 35 35 }
										}
									}
								}
							}
						}

						hbox = {
							name = "MAA"
							layoutpolicy_horizontal = expanding
							margin = { 10 5 }

							text_single = {
								visible = "[IsDataModelEmpty(CombatWindow.GetLeftSideMaaTypes)]"
								text = "COMBAT_WINDOW_NO_MAA"
								default_format = "#weak"
								align = nobaseline
								margin_left = 5
							}

							overlappingitembox = {
								datamodel = "[CombatWindow.GetLeftSideMaaTypes]"
								datacontext = "[CombatWindow.GetLeftCombatSide]"
								ignoreinvisible = yes
								spacing = -2
								maximumsize = { 200 40 }
								minimumsize = { 0 40 }
								autoresize = yes

								item = {
									container = {
										icon_maa_combat = {
											visible = "[And(CombatWindow.IsCombatInPursuitPhase, Not(CombatMaaItem.IsGoodAftermath(CombatSide.IsStillFighting)))]"

											blockoverride "glow"
											{
												visible = no

											}
										}

										icon_maa_combat = {
											visible = "[And(CombatWindow.IsCombatInPursuitPhase, CombatMaaItem.IsGoodAftermath(CombatSide.IsStillFighting))]"

											blockoverride "glow"
											{
												using = Color_Green

											}
										}

										icon_maa_combat = {
											visible = "[And(EqualTo_int32(CombatMaaItem.GetPerformance, '(int32)3'), Not(CombatWindow.IsCombatInPursuitPhase))]"

											blockoverride "glow"
											{
												using = Color_Red

											}
										}

										icon_maa_combat = {
											visible = "[And(EqualTo_int32(CombatMaaItem.GetPerformance, '(int32)2'), Not(CombatWindow.IsCombatInPursuitPhase))]"

											blockoverride "glow"
											{
												using = Color_Bright_Yellow

											}
										}

										icon_maa_combat = {
											visible = "[And(EqualTo_int32(CombatMaaItem.GetPerformance, '(int32)1'), Not(CombatWindow.IsCombatInPursuitPhase))]"

											blockoverride "glow"
											{
												using = Color_Green

											}
										}

										icon_maa_combat = {
											visible = "[And(EqualTo_int32(CombatMaaItem.GetPerformance, '(int32)0'), Not(CombatWindow.IsCombatInPursuitPhase))]"

											blockoverride "glow"
											{
												visible = no

											}
										}
									}
								}
							}

							expand = {
							}

							overlappingitembox = {
								datamodel = "[CombatWindow.GetRightSideMaaTypes]"
								datacontext = "[CombatWindow.GetRightCombatSide]"
								ignoreinvisible = yes
								spacing = -2
								maximumsize = { 200 40 }
								minimumsize = { 0 40 }
								autoresize = yes
								righttoleft = yes

								item = {
									container = {
										icon_maa_combat = {
											visible = "[And(CombatWindow.IsCombatInPursuitPhase, Not(CombatMaaItem.IsGoodAftermath(CombatSide.IsStillFighting)))]"

											blockoverride "glow"
											{
												visible = no

											}
										}

										icon_maa_combat = {
											visible = "[And(CombatWindow.IsCombatInPursuitPhase, CombatMaaItem.IsGoodAftermath(CombatSide.IsStillFighting))]"

											blockoverride "glow"
											{
												using = Color_Green

											}
										}

										icon_maa_combat = {
											visible = "[And(EqualTo_int32(CombatMaaItem.GetPerformance, '(int32)3'), Not(CombatWindow.IsCombatInPursuitPhase))]"

											blockoverride "glow"
											{
												using = Color_Red

											}
										}

										icon_maa_combat = {
											visible = "[And(EqualTo_int32(CombatMaaItem.GetPerformance, '(int32)2'), Not(CombatWindow.IsCombatInPursuitPhase))]"

											blockoverride "glow"
											{
												using = Color_Bright_Yellow

											}
										}

										icon_maa_combat = {
											visible = "[And(EqualTo_int32(CombatMaaItem.GetPerformance, '(int32)1'), Not(CombatWindow.IsCombatInPursuitPhase))]"

											blockoverride "glow"
											{
												using = Color_Green

											}
										}

										icon_maa_combat = {
											visible = "[And(EqualTo_int32(CombatMaaItem.GetPerformance, '(int32)0'), Not(CombatWindow.IsCombatInPursuitPhase))]"

											blockoverride "glow"
											{
												visible = no

											}
										}
									}
								}
							}

							text_single = {
								visible = "[IsDataModelEmpty(CombatWindow.GetRightSideMaaTypes)]"
								text = "COMBAT_WINDOW_NO_MAA"
								default_format = "#weak"
								align = nobaseline
								margin_right = 5
							}
						}

						divider_light = {
							layoutpolicy_horizontal = expanding
							alpha = 0.5
						}

						hbox = {
							name = "knights"
							layoutpolicy_horizontal = expanding
							margin = { 15 0 }
							margin_top = 3

							text_single = {
								visible = "[And(LessThanOrEqualTo_int32( CombatWindow.GetLeftKnightCount, '(int32)0' ), LessThanOrEqualTo_int32( CombatWindow.GetRightKnightCount, '(int32)0' ))]"
								text = "CW_NO_KNIGHTS"
								default_format = "#weak"
								align = nobaseline
							}

							hbox = {
								visible = "[Not(And(LessThanOrEqualTo_int32( CombatWindow.GetLeftKnightCount, '(int32)0' ), LessThanOrEqualTo_int32( CombatWindow.GetRightKnightCount, '(int32)0' )))]"
								layoutpolicy_horizontal = expanding

								text_single = {
									name = "left_knights"
									visible = "[GreaterThan_int32( CombatWindow.GetLeftKnightCount, '(int32)0' )]"
									# visible = "[GreaterThan_int32( CombatWindow.GetLeftKnightCount, '(int32)10' )]"
									text = "COW_KNIGHT_COUNT_LEFT"
									align = nobaseline
									tooltip = "COW_TT_KNIGHT_COUNT_LEFT"
								}

								text_single = {
									name = "left_no_knights"
									visible = "[Not(GreaterThan_int32( CombatWindow.GetLeftKnightCount, '(int32)0' ))]"
									text = "CW_NO_KNIGHTS"
									default_format = "#weak"
									align = nobaseline
								}

								# icon = {
								# 	size = { 20 20 }
								# 	texture = "gfx/interface/icons/portraits/knight.dds"
								# }

								expand = {}

								# icon = {
								# 	size = { 20 20 }
								# 	texture = "gfx/interface/icons/portraits/knight.dds"
								# }

								text_single = {
									name = "right_no_knights"
									visible = "[Not(GreaterThan_int32( CombatWindow.GetRightKnightCount, '(int32)0' ))]"
									text = "CW_NO_KNIGHTS"
									default_format = "#weak"
									align = nobaseline
								}

								text_single = {
									name = "right_knights"
									visible = "[GreaterThan_int32( CombatWindow.GetRightKnightCount, '(int32)0' )]"
									# visible = "[GreaterThan_int32( CombatWindow.GetRightKnightCount, '(int32)10' )]"
									text = "COW_KNIGHT_COUNT_RIGHT"
									align = nobaseline
									tooltip = "COW_TT_KNIGHT_COUNT_RIGHT"
								}
							}
						}

						expand = {}
					}

					button = {
						size = { 60 40 }
						parentanchor = hcenter|bottom
						onclick = "[GetVariableSystem.Clear('big_battle')]"
						onmousehierarchyenter = "[GetVariableSystem.Set('minimize_battle_tip', 'yes')]"
						shortcut = army_merge
						raw_tooltip = "big_battle_window"
						position = { 0 0 }
						visible = "[GetVariableSystem.Exists('big_battle')]"

						state = {
							name = _show
							trigger_when = "[GetVariableSystem.Exists('big_battle')]"
							position_y = 0
							scale = 1
							duration = 0.1
						}
						state = {
							name = _hide
							scale = 0.7
							duration = 0.05
						}

						button_icon = {
							parentanchor = center
							texture = "gfx/battle_maximize.png"
							alwaystransparent = yes
						}
					}


					text_single = {
						raw_text = "big_battle_view"
						position = { 0 -50 }
						parentanchor = hcenter|bottom
						using = DefaultTooltipBackground
						visible = "[Not(GetVariableSystem.Exists('minimize_battle_tip'))]"
					}
				}
			}
		}

		# buttons for big view
		widget = {
			alwaystransparent = yes
			visible = "[Or(GetVariableSystem.HasValue('big_battle', 'big'), Not(GetVariableSystem.Exists('big_battle')))]"
			size = { 100% 100% }


			# change views
			flowcontainer = {
				ignoreinvisible = yes


				button = {
					size = { 50 40 }
					raw_tooltip = "toggle_full_battle_view"
					onmousehierarchyenter = "[GetVariableSystem.Set('minimize_battle_tip', 'yes')]"
					shortcut = action_list
					onclick = "[GetVariableSystem.SetOrToggle('big_battle', 'big')]"

					button_icon = {
						parentanchor = center
						texture = "gfx/battle_maximize.png"
						visible = "[Not(GetVariableSystem.Exists('big_battle'))]"
						alwaystransparent = yes
					}

					button_icon = {
						parentanchor = center
						texture = "gfx/battle_split_view.png"
						visible = "[GetVariableSystem.HasValue('big_battle', 'big')]"
						alwaystransparent = yes
					}

					text_single = {
						raw_text = "toggle_full_battle_view"
						position = { 50 0 }
						align = nobaseline
						using = DefaultTooltipBackground
						margin = { 15 10 }
						visible = "[Not(GetVariableSystem.Exists('minimize_battle_tip'))]"
					}
				}

				button_outliner = {
					size = { 35 40 }

					onclick = "[GetVariableSystem.Toggle('compact_combat')]"
				}

			}

			button = {
				size = { 50 40 }
				parentanchor = bottom
				raw_tooltip = "MINIMIZE_TOOLTIP"
				onmousehierarchyenter = "[GetVariableSystem.Set('minimize_battle_tip', 'yes')]"
				shortcut = army_merge
				onclick = "[GetVariableSystem.Set('big_battle', 'small')]"

				button_icon = {
					parentanchor = center
					texture = "gfx/interface/icons/flat_icons/window_minimize.dds"
					alwaystransparent = yes
				}

				text_single = {
					raw_text = "MINIMIZE_TOOLTIP"
					position = { 50 0 }
					align = nobaseline
					using = DefaultTooltipBackground
					margin = { 15 10 }
					visible = "[Not(GetVariableSystem.Exists('minimize_battle_tip'))]"
				}
			}

			# show map
			button = {
				size = { 50 40 }
				parentanchor = right
				onmousehierarchyenter = "[GetVariableSystem.Set('hide_battle_view', 'yes')]"
				onmousehierarchyleave = "[GetVariableSystem.Clear('hide_battle_view')]"
				onmousehierarchyenter = "[GetVariableSystem.Set('minimize_battle_tip', 'yes')]"
				shortcut = army_split_half
				onclick = "[GetVariableSystem.Toggle('hide_battle_view')]"

				button_icon = {
					parentanchor = center
					texture = "gfx/interface/icons/flat_icons/observer.dds"
					alwaystransparent = yes
				}

				text_single = {
					raw_text = "hover_hide_battle"
					parentanchor = right
					position = { -50 0 }
					align = nobaseline
					using = DefaultTooltipBackground
					margin = { 15 10 }
					visible = "[Not(GetVariableSystem.Exists('minimize_battle_tip'))]"
				}
			}
		}
	}

	# battle map
	widget = {
		size = { 100% 100% }
		background = { using = Background_Area_Border_Solid alpha = 0.2 }
		datacontext = "[CombatWindow.GetCombat]"
		visible = no

		# button_standard = {
		# 	position = { 5 90 }
		# 	raw_text = "battle map"
		# 	onclick = "[GetScriptedGui('battle_map').Execute( GuiScope.SetRoot( Combat.MakeScope ).AddScope('left_levies_max', ).End )]"
		# 	# MenAtArmsType.GetIconKey
		# }

		hbox = {
			layoutpolicy_horizontal = expanding
			spacing = 100

			hbox = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CombatWindow.GetLeftCombatSide]"
				datacontext = "[CombatSide.GetComposition]"
				expand = {}

				vbox = {
					fixedgridbox = {
						datamodel = "[Combat.MakeScope.GetList('left_levies')]"
						datamodel_wrap = 10
						addrow = 20
						addcolumn = 20
						setitemsizefromcell = yes

						item = {
							# portrait_head_small = {
							# 	datacontext = "[Scope.GetCharacter]"
							# }
							icon = {
								texture = "gfx/interface/icons/icon_knight_small.dds"
								background = { using = Background_Area_Border_Solid }
							}
						}
					}
				}
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				vbox = {}
				expand = {}
			}
		}
	}

	button = {
		shortcut = close_window
		visible = "[And(IsGameViewOpen('character'), Not(GetVariableSystem.Exists('big_battle')))]"
		onclick = "[CloseGameView('character')]"
	}

	button = {
		shortcut = close_window
		visible = "[And(IsGameViewOpen('holding_view'), Not(GetVariableSystem.Exists('big_battle')))]"
		onclick = "[CloseGameView('holding_view')]"
	}

	# show map
	button = {
		visible = "[GetVariableSystem.Exists('hide_battle_view')]"
		size = { 150 40 }
		parentanchor = right
		alwaystransparent = yes
		shortcut = army_split_half
		shortcut = close_window
		onclick = "[GetVariableSystem.Toggle('hide_battle_view')]"
		background = { using = Background_Area_Border_Solid }

		button_icon = {
			position = { -10 0 }
			parentanchor = vcenter|right
			texture = "gfx/interface/icons/flat_icons/observer.dds"
			alwaystransparent = yes
		}

		text_single = {
			raw_text = "show_battle_window"
			parentanchor = right
			position = { -50 0 }
			align = nobaseline
			using = DefaultTooltipBackground
			margin = { 15 10 }
		}
	}

}

types CombatWindow
{
	type animation_soldier_loss = icon {
		widgetanchor = center
		size = { 15 15 }
		texture = "gfx/interface/colors/white.dds"
		using = Color_Red
		alpha = 0

		modify_texture = {
			name = "mask_1"
			texture = "gfx/interface/component_masks/mask_glow.dds"
			blend_mode = alphamultiply
			rotate_uv = 1
		}

		modify_texture = {
			name = "mask_2"
			texture = "gfx/interface/component_masks/mask_glow.dds"
			blend_mode = alphamultiply
			rotate_uv = -1
		}

		modify_texture = {
			name = "mask_3"
			texture = "gfx/interface/component_masks/mask_clouds.dds"
			blend_mode = alphamultiply
			alpha = 0.1
		}

		modify_texture = {
			name = "mask_4"
			texture = "gfx/interface/component_masks/mask_circle.dds"
			blend_mode = mask
		}

		modify_texture = {
			name = "mask_3"
			texture = "gfx/interface/colors/gold.dds"
			blend_mode = add
		}

		state = {
			block "animation_trigger_name"
			{
				name = "name"
			}
			next = b
			trigger_on_create = yes

			using = Animation_Curve_Default
			scale = 1
			alpha = 0
		}

		state = {
			name = b
			next = c

			duration = 0.3
			bezier = { 0.5 0 1 0.5 }

			scale = 5
			alpha = 0.7
		}

		state = {
			name = c
			duration = 0.3
			alpha = 0
			scale = 6
		}

		state = {
			name = rotate_a
			next = rotate_b
			trigger_on_create = yes

			modify_texture = {
				name = "mask_1"
				rotate_uv = 1
			}
		}

		state = {
			name = rotate_a
			next = rotate_b

			duration = 0.5

			modify_texture = {
				name = "mask_1"
				rotate_uv = 180
			}
		}

		state = {
			name = rotate_a_2
			next = rotate_b_2
			trigger_on_create = yes

			modify_texture = {
				name = "mask_2"
				rotate_uv = -1
			}
		}

		state = {
			name = rotate_a_2
			next = rotate_b_2

			duration = 0.5

			modify_texture = {
				name = "mask_2"
				rotate_uv = -180
			}
		}

		state = {
			name = rotate_a_3
			next = rotate_b_3
			trigger_on_create = yes

			modify_texture = {
				name = "mask_3"
				rotate_uv = 0
				alpha = 0.1
			}
		}

		state = {
			name = rotate_a_3
			next = rotate_b_3

			duration = 0.5

			modify_texture = {
				name = "mask_3"
				rotate_uv = 40
				alpha = 0.8
			}
		}
	}

	type icon_maa_combat = icon {
		name = "maa_icon"
		datacontext = "[CombatMaaItem.GetMenAtArmsType]"
		size = { 40 40 }
		texture = "[MenAtArmsType.GetIcon]"

		alwaystransparent = yes
		using = tooltip_nw

		tooltipwidget = {
			maa_tooltip_widget = {}
		}

		glow = {
			glow_radius = 3
			using = Glow_Standard

			block "glow"
			{
				using = Color_Green
			}
		}
	}

	type maa_tooltip_widget = widget {
		alwaystransparent = no

		widget = {
			name = "background"
			using = DefaultTooltipBackground
			size = { 100% 100% }
			alwaystransparent = no
		}

		vbox = {
			margin = { 10 3 }
			margin_bottom = 10
			minimumsize = { 380 0 }
			spacing = 5
			set_parent_size_to_minimum = yes

			vbox_maa_stats = {
				layoutpolicy_horizontal = expanding

				blockoverride "siege_stat"
				{
					text = "COMBAT_REGIMENT_SIEGE"
				}
				blockoverride "siege_tt"
				{
					tooltip = "COMBAT_REGIMENT_SIEGE_TT"
				}
				blockoverride "damage_stat"
				{
					text = "[CombatMaaItem.GetStat( 'damage' )|0]"
				}
				blockoverride "damage_tt"
				{
					tooltip = "COMBAT_REGIMENT_DAMAGE_TT"
				}
				blockoverride "toughness_stat"
				{
					text = "[CombatMaaItem.GetStat( 'toughness' )|0]"
				}
				blockoverride "toughness_tt"
				{
					tooltip = "COMBAT_REGIMENT_TOUGHNESS_TT"
				}
				blockoverride "pursuit_stat"
				{
					text = "[CombatMaaItem.GetStat( 'pursuit' )|0]"
				}
				blockoverride "pursuit_tt"
				{
					tooltip = "COMBAT_REGIMENT_PURSUIT_TT"
					# fade out if 0
					alpha = "[Select_float(GreaterThan_CFixedPoint(CombatMaaItem.GetStat( 'pursuit' ),'(CFixedPoint)0'), '(float)1.0','(float)0.4')]"
				}
				blockoverride "screen_stat"
				{
					text = "[CombatMaaItem.GetStat( 'screen' )|0]"
				}
				blockoverride "screen_tt"
				{
					tooltip = "COMBAT_REGIMENT_SCREEN_TT"
					# fade out if 0
					alpha = "[Select_float(GreaterThan_CFixedPoint(CombatMaaItem.GetStat( 'screen' ),'(CFixedPoint)0'), '(float)1.0','(float)0.4')]"
				}
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				margin = { 10 0 }

				text_single = {
					layoutpolicy_horizontal = expanding
					text = "[CombatMaaItem.GetCurrentStrength|0]/[CombatMaaItem.GetMaxStrength]"
				}

				text_single = {
					text = "COMBAT_WINDOW_MAA_TT_REGIMENTS"
				}
			}

			text_single = {
				margin = { 10 0 }
				layoutpolicy_horizontal = expanding
				visible = "[And(Not(CombatWindow.IsCombatInPursuitPhase), GreaterThan_int32(CombatMaaItem.GetTerrainBonus, '(int32)0'))]"
				text = "COMBAT_WINDOW_MAA_TT_TERRAIN_GOOD"
			}


			text_single = {
				margin = { 10 0 }
				layoutpolicy_horizontal = expanding
				visible = "[And(Not(CombatWindow.IsCombatInPursuitPhase), LessThan_int32(CombatMaaItem.GetTerrainBonus, '(int32)0'))]"
				text = "COMBAT_WINDOW_MAA_TT_TERRAIN_BAD"
			}

			vbox = {
				layoutpolicy_horizontal = expanding
				text_single = {
					margin = { 6 0 }
					layoutpolicy_horizontal = expanding
					visible = "[And(Not(CombatWindow.IsCombatInPursuitPhase), LessThan_CFixedPoint(CombatMaaItem.GetCountered, '(CFixedPoint)1'))]"
					text = "COMBAT_WINDOW_MAA_TT_EFFICIENCY"
				}

				flowcontainer = {
					layoutpolicy_horizontal = expanding
					visible = "[And( DataModelHasItems(CombatMaaItem.GetCounteredByMaa), Not( CombatWindow.IsCombatInPursuitPhase ) )]"
					margin = { 10 0 }
					margin_left = 30
					direction = vertical
					datamodel = "[CombatMaaItem.GetCounteredByMaa]"

					item = {
						text_single = {
							layoutpolicy_horizontal = expanding
							text = "COMBAT_WINDOW_MAA_TT_COUNTERED_BY"
						}
					}
				}
			}

			flowcontainer = {
				layoutpolicy_horizontal = expanding
				visible = "[And( DataModelHasItems(CombatMaaItem.GetCountersMaa), Not( CombatWindow.IsCombatInPursuitPhase ) )]"
				margin = { 10 0 }
				direction = vertical
				datamodel = "[CombatMaaItem.GetCountersMaa]"

				item = {
					text_single = {
						layoutpolicy_horizontal = expanding
						text = "COMBAT_WINDOW_MAA_TT_COUNTERS"
					}
				}
			}

			text_single = {
				datacontext = "[CombatWindow.GetCombat.GetProvince]"
				# TODO_CODE_EP3: Get actual title?
				datacontext = "[GetNullLandedTitle]"

				visible = "[And( And( CombatWindow.IsCombatInPursuitPhase, GreaterThan_CFixedPoint( MenAtArmsType.GetStat( GetPlayer, Province.Self, Title.Self, 'screen' ), '(CFixedPoint)0' ) ), Not( CombatSide.IsStillFighting ) )]"

				margin = { 10 0 }
				layoutpolicy_horizontal = expanding

				text = "COMBAT_WINDOW_MAA_TT_SCREEN"
			}

			text_single = {
				datacontext = "[CombatWindow.GetCombat.GetProvince]"
				# TODO_CODE_EP3: Get actual title?
				datacontext = "[GetNullLandedTitle]"

				visible = "[And( And(CombatWindow.IsCombatInPursuitPhase, GreaterThan_CFixedPoint(MenAtArmsType.GetStat(GetPlayer, Province.Self, Title.Self, 'pursuit'), '(CFixedPoint)0')), CombatSide.IsStillFighting )]"

				margin = { 10 0 }
				layoutpolicy_horizontal = expanding

				text = "COMBAT_WINDOW_MAA_TT_PURSUIT"
			}
		}
	}
}


types Big_Battle {
	type container_text_maa = container {
		ignoreinvisible = yes
		text_maa = {}
		text_maa_compact = {}
	}
	type text_maa = widget {
		block "visible_big" {
			visible = "[And(LessThanOrEqualTo_int32(PdxGuiWidget.AccessParent.AccessParent.AccessParent.FindChild('maa').GetChildrenCount, '(int32)5'), Not(GetVariableSystem.Exists('compact_combat')))]"
		}
		# background = { using = Background_Area_Border_Solid }
		block "datacontext" {
			datacontext = "[CombatMaaItem.GetMenAtArmsType]"
		}
		block "size" {
			size = { 590 95 }
		}

		icon = {
			size = { 100% 100% }
			texture = "gfx/interface/colors/black.dds"
			alpha = 0.5
		}


		hbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			block "right_progressbar_bg" {}

			widget_bbv_maa_progressbars = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
			}

			# background = {
			# 	texture = "gfx/interface/progressbars/progress_red_bg.dds"
			# }

			widget = {
				size = { 0 0 }
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding
				alpha = 0.8
				scissor = yes
				visible = no

				progressbar = {
					min = 0
					block "right_progressbar" {
						mirror = horizontal
					}
					block "levy_progress" {
						max = "[CombatMaaItem.GetMaxStrength]"
						value = "[CombatMaaItem.GetCurrentStrength]"
					}
					size = { 100% 100% }

					block "progresstexture" {
						progresstexture = "gfx/interface/progressbars/progress_standard.dds"
					}
					noprogresstexture = "gfx/interface/progressbars/progress_red_bg.dds"
					spriteType = Corneredtiled
					spriteborder = { 6 6 }

					icon = {
						name = "overlay"
						texture = "gfx/interface/progressbars/progress_overlay.dds"
						spriteType = Corneredstretched
						spriteborder = { 2 2 }
						size = { 100% 100% }
					}
				}

				fixedgridbox = {
					position = { -1 0 }
					raw_tooltip = "Each notch is 2000 toughness"
					using = tooltip_se
					tooltip_offset = { 15 15 }
					block "levy_segment" {
						# addcolumn = "['(float)5']"
						addcolumn = "[FixedPointToFloat(Divide_CFixedPoint('(CFixedPoint)800000', Multiply_CFixedPoint(CombatMaaItem.GetStat( 'toughness' ), IntToFixedPoint(CombatMaaItem.GetMaxStrength))))]"
					}
					addrow = 15
					datamodel = "[GetAllTraits]"
					flipdirection = yes

					item = {
						widget = {
							size = { 1 45 }
							icon = {
								texture = "gfx/interface/colors/black.dds"
								alpha = 1
								size = { 1 10 }
							}
							icon = {
								parentanchor = bottom
								texture = "gfx/interface/colors/black.dds"
								alpha = 1
								size = { 1 10 }
							}
						}
					}
				}
			}

			widget = {
				size = { 162 0 }
			}
		}

		widget = {
			size = { 500 100% }
			scissor = yes
			block "right_status" {
				position = { -510 0 }
			}
			block "status" {}

			flowcontainer = {
				margin = { 10 15 }
				ignoreinvisible = yes
				direction = vertical
				block "parentanchor" {
					parentanchor = right
				}

				background = {
					using = Background_Area_Dark
					alpha = 0.9
					modify_texture = {
						name = "mask"
						texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
						spriteType = Corneredstretched
						spriteborder = { 0 0 }
						alpha = 0.8
						blend_mode = alphamultiply
						block "image_right" {}
					}
				}

				block "levy" {}

				text_single = {
					visible = "[And(Not(CombatWindow.IsCombatInPursuitPhase), GreaterThan_int32(CombatMaaItem.GetTerrainBonus, '(int32)0'))]"
					text = "COMBAT_WINDOW_MAA_TT_TERRAIN_GOOD"
				}

				text_single = {
					visible = "[And(Not(CombatWindow.IsCombatInPursuitPhase), LessThan_int32(CombatMaaItem.GetTerrainBonus, '(int32)0'))]"
					text = "COMBAT_WINDOW_MAA_TT_TERRAIN_BAD"
				}

				flowcontainer = {
					ignoreinvisible = yes
					direction = vertical

					text_single = {
						visible = "[And(Not(CombatWindow.IsCombatInPursuitPhase), LessThan_CFixedPoint(CombatMaaItem.GetCountered, '(CFixedPoint)1'))]"
						text = "COMBAT_WINDOW_MAA_TT_EFFICIENCY"
					}

					flowcontainer = {
						visible = "[And( DataModelHasItems(CombatMaaItem.GetCounteredByMaa), Not( CombatWindow.IsCombatInPursuitPhase ) )]"
						margin = { 10 0 }
						margin_left = 30
						direction = vertical
						datamodel = "[CombatMaaItem.GetCounteredByMaa]"

						item = {
							text_single = {
								layoutpolicy_horizontal = expanding
								text = "COMBAT_WINDOW_MAA_TT_COUNTERED_BY"
							}
						}
					}
				}

				flowcontainer = {
					visible = "[And( DataModelHasItems(CombatMaaItem.GetCountersMaa), Not( CombatWindow.IsCombatInPursuitPhase ) )]"
					direction = vertical
					datamodel = "[CombatMaaItem.GetCountersMaa]"

					item = {
						text_single = {
							layoutpolicy_horizontal = expanding
							text = "COMBAT_WINDOW_MAA_TT_COUNTERS"
						}
					}
				}

				text_single = {
					datacontext = "[CombatWindow.GetCombat.GetProvince]"
					visible = "[And(And(CombatWindow.IsCombatInPursuitPhase, GreaterThan_CFixedPoint(MenAtArmsType.GetStat(GetPlayer, Province.Self, Title.Self, 'screen'), '(CFixedPoint)0')), Not( CombatSide.IsStillFighting ) )]"

					text = "COMBAT_WINDOW_MAA_TT_SCREEN"
				}

				text_single = {
					datacontext = "[CombatWindow.GetCombat.GetProvince]"
					visible = "[And( And(CombatWindow.IsCombatInPursuitPhase, GreaterThan_CFixedPoint(MenAtArmsType.GetStat(GetPlayer, Province.Self, Title.Self, 'pursuit'), '(CFixedPoint)0')), CombatSide.IsStillFighting )]"

					text = "COMBAT_WINDOW_MAA_TT_PURSUIT"
				}
			}
		}

		hbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			# spacing = 15
			margin = { 3 0 }
			block "right" {
				# margin_right = 20
			}

			vbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				# margin_top = 10

				hbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					spacing = 15
					block "right" {}


					block "levy_icon" {}

					container = {
						ignoreinvisible = yes
						block "levy" {}
						container = {
							position = { 0 -4 }
							icon_maa_combat = {
								visible = "[And(CombatWindow.IsCombatInPursuitPhase, Not(CombatMaaItem.IsGoodAftermath(CombatSide.IsStillFighting)))]"

								blockoverride "glow"
								{
									visible = no

								}
							}

							icon_maa_combat = {
								visible = "[And(CombatWindow.IsCombatInPursuitPhase, CombatMaaItem.IsGoodAftermath(CombatSide.IsStillFighting))]"

								blockoverride "glow"
								{
									using = Color_Green

								}
							}

							icon_maa_combat = {
								visible = "[And(EqualTo_int32(CombatMaaItem.GetPerformance, '(int32)3'), Not(CombatWindow.IsCombatInPursuitPhase))]"

								blockoverride "glow"
								{
									using = Color_Red

								}
							}

							icon_maa_combat = {
								visible = "[And(EqualTo_int32(CombatMaaItem.GetPerformance, '(int32)2'), Not(CombatWindow.IsCombatInPursuitPhase))]"

								blockoverride "glow"
								{
									using = Color_Bright_Yellow

								}
							}

							icon_maa_combat = {
								visible = "[And(EqualTo_int32(CombatMaaItem.GetPerformance, '(int32)1'), Not(CombatWindow.IsCombatInPursuitPhase))]"

								blockoverride "glow"
								{
									using = Color_Green

								}
							}

							icon_maa_combat = {
								visible = "[And(EqualTo_int32(CombatMaaItem.GetPerformance, '(int32)0'), Not(CombatWindow.IsCombatInPursuitPhase))]"

								blockoverride "glow"
								{
									visible = no

								}
							}
						}
					}

					text_single = {
						size = { 60 30 }
						autoresize = no
						block "size_align" {
							align = nobaseline
						}
						default_format = "#high"
						alpha = 0.9
						margin = { 5 0 }
						using = Font_Size_Medium

						block "levy_size" {
							raw_text = "[CombatMaaItem.GetCurrentStrength]"
						}
					}

					expand = { }

					container = {
						ignoreinvisible = yes
						visible = "[GetVariableSystem.Exists('total_maa_stats')]"
						text_single = {
							block "compact" {}
							align = nobaseline
							default_format = "#high"
							using = Font_Size_Medium

							block "levy_name" {
								raw_text = "[MenAtArmsType.GetNameNoTooltip]"
							}
							max_width = 250
						}
					}

					flowcontainer = {
						ignoreinvisible = yes
						# direction = vertical
						visible = "[Not(GetVariableSystem.Exists('total_maa_stats'))]"
						spacing = 10

						block "right" {}
						flowcontainer = {
							ignoreinvisible = yes
							spacing = 5
							block "right" {}

							text_single = {
								block "stat_margin" {
									margin_top = 2
								}
								block "levy_toughness" {
									raw_text = "#v [Multiply_CFixedPoint(CombatMaaItem.GetStat( 'toughness' ), IntToFixedPoint(CombatMaaItem.GetCurrentStrength))|0*]"
									state = {
										name = "bbv_grab_maa_values"
										alpha = 1
										on_finish = "[GetScriptedGui('bbv_grab_maa_values').Execute( GuiScope.SetRoot( CombatWindow.GetCombat.MakeScope ).AddScope('value', MakeScopeValue( Multiply_CFixedPoint(CombatMaaItem.GetStat( 'toughness' ), IntToFixedPoint(CombatMaaItem.GetMaxStrength)) )).End )]"
									}
								}
								block "align_left" {
								}
								min_width = 55
							}
							icon = {
								size = { 32 32 }
								# texture = "gfx/interface/progressbars/progress_standard.dds"
								enabled = no
								texture = "gfx/interface/icons/regimenttypes/unit_stat_toughness.dds"

								# modify_texture = {
								# 	texture = "gfx/interface/icons/regimenttypes/unit_stat_toughness.dds"
								# 	blend_mode = alphamultiply
								# }
								# modify_texture = {
								# 	texture = "gfx/interface/colors/white.dds"
								# 	blend_mode = overlay
								# 	alpha = 0.8
								# }
								# tintcolor = { 0.5 0.8 0.1 1 }
							}
						}

						flowcontainer = {
							ignoreinvisible = yes
							block "right" {}

							spacing = 5

							text_single = {
								block "stat_margin" {
									margin_top = 2
								}
								block "levy_damage" {
									raw_text = "#v [Multiply_CFixedPoint(Multiply_CFixedPoint(CombatMaaItem.GetStat( 'damage' ), IntToFixedPoint(CombatMaaItem.GetCurrentStrength)), GetDefine('NCombat','DAMAGE_SCALING_FACTOR'))|0*]"
								}
								block "align_left" {
								}
								min_width = 55
								 # [Multiply_CFixedPoint(CombatMaaItem.GetStat( 'damage' ), IntToFixedPoint(CombatMaaItem.GetCurrentStrength))|1*], per day:
							}

							icon = {
								size = { 32 32 }
								texture = "gfx/interface/icons/regimenttypes/unit_stat_damage.dds"
							}
						}

					}

					hbox = {
						visible = no
						vbox_maa_stats_numbers = {
							block "show_compact" {
								visible = no
							}
							block "levy" {}
							margin = { -15 0 }
							layoutpolicy_horizontal = expanding

							blockoverride "stat_icon_size" {
								size = { 35 35 }
								enabled = no
							}
							blockoverride "siege_stat"
							{
								text = "COMBAT_REGIMENT_SIEGE"
							}
							blockoverride "siege_tt"
							{
								visible = no
								tooltip = "COMBAT_REGIMENT_SIEGE_TT"
							}
							blockoverride "damage_stat"
							{
								text = "[CombatMaaItem.GetStat( 'damage' )|0]"
								using = Font_Size_Small
							}
							blockoverride "damage_tt"
							{
								tooltip = "COMBAT_REGIMENT_DAMAGE_TT"
								block "right" {}
							}
							blockoverride "toughness_stat"
							{
								text = "[CombatMaaItem.GetStat( 'toughness' )|0]"
								using = Font_Size_Small
							}
							blockoverride "toughness_tt"
							{
								tooltip = "COMBAT_REGIMENT_TOUGHNESS_TT"
								block "right" {}
							}
							blockoverride "pursuit_stat"
							{
								text = "[CombatMaaItem.GetStat( 'pursuit' )|0]"
								using = Font_Size_Small
							}
							blockoverride "pursuit_tt"
							{
								tooltip = "COMBAT_REGIMENT_PURSUIT_TT"
								# fade out if 0
								alpha = "[Select_float(And(GreaterThan_CFixedPoint(CombatMaaItem.GetStat( 'pursuit' ),'(CFixedPoint)0'), CombatWindow.IsCombatInPursuitPhase), '(float)1.0','(float)0.4')]"
							}
							blockoverride "screen_stat"
							{
								text = "[CombatMaaItem.GetStat( 'screen' )|0]"
								using = Font_Size_Small
							}
							blockoverride "screen_tt"
							{
								tooltip = "COMBAT_REGIMENT_SCREEN_TT"
								# fade out if 0
								alpha = "[Select_float(And(GreaterThan_CFixedPoint(CombatMaaItem.GetStat( 'screen' ),'(CFixedPoint)0'), CombatWindow.IsCombatInPursuitPhase), '(float)1.0','(float)0.4')]"
							}
						}
					}

					spacer = { size = { 0 0 } }
				}

				widget = {
					layoutpolicy_horizontal = expanding
					size = { 0 45 }
					block "compact" {}
					scissor = yes
					block "levy" {}

					vbox_maa_stats_numbers = {
						margin = { -15 0 }
						layoutpolicy_horizontal = expanding

						blockoverride "stat_icon_size" {
							size = { 35 35 }
							enabled = no
						}
						blockoverride "siege_stat"
						{
							text = "COMBAT_REGIMENT_SIEGE"
						}
						blockoverride "siege_tt"
						{
							visible = no
							tooltip = "COMBAT_REGIMENT_SIEGE_TT"
						}
						blockoverride "damage_stat"
						{
							text = "[CombatMaaItem.GetStat( 'damage' )|0]"
							using = Font_Size_Small
						}
						blockoverride "damage_tt"
						{
							tooltip = "COMBAT_REGIMENT_DAMAGE_TT"
							block "left" {}
						}
						blockoverride "toughness_stat"
						{
							text = "[CombatMaaItem.GetStat( 'toughness' )|0]"
							using = Font_Size_Small
						}
						blockoverride "toughness_tt"
						{
							tooltip = "COMBAT_REGIMENT_TOUGHNESS_TT"
							block "left" {}
						}
						blockoverride "pursuit_stat"
						{
							text = "[CombatMaaItem.GetStat( 'pursuit' )|0]"
							using = Font_Size_Small
						}
						blockoverride "pursuit_tt"
						{
							tooltip = "COMBAT_REGIMENT_PURSUIT_TT"
							# fade out if 0
							alpha = "[Select_float(And(GreaterThan_CFixedPoint(CombatMaaItem.GetStat( 'pursuit' ),'(CFixedPoint)0'), CombatWindow.IsCombatInPursuitPhase), '(float)1.0','(float)0.4')]"
							block "left" {}
						}
						blockoverride "screen_stat"
						{
							text = "[CombatMaaItem.GetStat( 'screen' )|0]"
							using = Font_Size_Small
						}
						blockoverride "screen_tt"
						{
							tooltip = "COMBAT_REGIMENT_SCREEN_TT"
							# fade out if 0
							alpha = "[Select_float(And(GreaterThan_CFixedPoint(CombatMaaItem.GetStat( 'screen' ),'(CFixedPoint)0'), CombatWindow.IsCombatInPursuitPhase), '(float)1.0','(float)0.4')]"
							block "left" {}
						}
					}
				}
			}

			text_single = {
				align = nobaseline
				visible = no
				margin_left = -15
				block "levy_max" {
					raw_text = "/[CombatMaaItem.GetMaxStrength]"
				}
			}

			margin_widget = {
				size = { 160 0 }
				margin = { 0 3 }
				layoutpolicy_vertical = expanding

				widget = {
					size = { 100% 100% }
					scissor = yes
					icon = {
						size = { 160 90 }
						block "compact_image" {}
						block "image_right" {}

						block "levy_bg" {
							texture = "[MenAtArmsType.GetHorizontalImage]"
							tooltipwidget = {
								maa_tooltip_widget = {
								}
							}
						}

						text_single = {
							position = { 5 25 }
							background = { using = Background_Area_Dark margin = { 5 0 } }
							block "show_compact" {
								visible = no
							}
							align = nobaseline
							# default_format = "#high"
							# using = Font_Size_Small
							fontsize = 14

							block "levy_name" {
								raw_text = "[MenAtArmsType.GetNameNoTooltip]"
							}
							max_width = 250
						}
					}
				}
			}
		}

	}

	type text_maa_compact = text_maa {
		block "visible_compact" {
			visible = "[Or(GreaterThan_int32(PdxGuiWidget.AccessParent.AccessParent.AccessParent.FindChild('maa').GetChildrenCount, '(int32)5'), GetVariableSystem.Exists('compact_combat'))]"
		}
		block "compact_size" {
			blockoverride "size" {
				size = { 590 45 }
			}
		}
		blockoverride "compact" {
			visible = no
		}
		blockoverride "show_compact" {
		}
		blockoverride "compact_image" {
			position = { 0 -5 }
		}
	}

	type levies_maa = container_text_maa {
		visible = "[GreaterThan_int32(ArmyComposition.GetMaxNumberOfLevies, '(int32)0')]"
		blockoverride "datacontext" {

		}
		blockoverride "levy" {
			visible = no
		}

		blockoverride "levy_toughness" {
			raw_text = "#v [Multiply_CFixedPoint(IntToFixedPoint(Multiply_int32(ArmyComposition.GetCurrentNumberOfLevies, '(int32)10')), Character.MakeScope.ScriptValue('bbv_martial_for_levies'))|0*]"
			state = {
				name = "bbv_grab_maa_values"
				alpha = 1
				on_finish = "[GetScriptedGui('bbv_grab_maa_values').Execute( GuiScope.SetRoot( CombatWindow.GetCombat.MakeScope ).AddScope('value', MakeScopeValue(Multiply_CFixedPoint(IntToFixedPoint(Multiply_int32(ArmyComposition.GetMaxNumberOfLevies, '(int32)10')), Character.MakeScope.ScriptValue('bbv_martial_for_levies'))) ).End )]"
			}
		}
		blockoverride "levy_segment" {
			addcolumn = "[FixedPointToFloat(Divide_CFixedPoint('(CFixedPoint)800000', Multiply_CFixedPoint(IntToFixedPoint(Multiply_int32(ArmyComposition.GetCurrentNumberOfLevies, '(int32)10')), Character.MakeScope.ScriptValue('bbv_martial_for_levies'))))]"
		}
		blockoverride "progress_toughness" {
			value = "[Multiply_CFixedPoint(IntToFixedPoint(Multiply_int32(ArmyComposition.GetCurrentNumberOfLevies, '(int32)10')), Character.MakeScope.ScriptValue('bbv_martial_for_levies'))]"
		}
		blockoverride "progress_damage" {
			value = "[Multiply_CFixedPoint(IntToFixedPoint(Multiply_int32(ArmyComposition.GetCurrentNumberOfLevies, '(int32)10')), GetDefine('NCombat','DAMAGE_SCALING_FACTOR'))]"
		}

		blockoverride "levy_name" {
			raw_text = "LEVIES_LABEL"
			# raw_text = "[Multiply_int32(ArmyComposition.GetCurrentNumberOfLevies, '(int32)10')]"
		}
		blockoverride "levy_size" {
			raw_text = "[ArmyComposition.GetCurrentNumberOfLevies]"
		}
		blockoverride "levy_max" {
			raw_text = "/[ArmyComposition.GetMaxNumberOfLevies]"
		}
		blockoverride "levy_damage" {
			raw_text = "#v [Multiply_CFixedPoint(IntToFixedPoint(Multiply_int32(ArmyComposition.GetCurrentNumberOfLevies, '(int32)10')), GetDefine('NCombat','DAMAGE_SCALING_FACTOR'))|0*]"
			# [Multiply_int32(ArmyComposition.GetCurrentNumberOfLevies, '(int32)10')|0*],
		}
		blockoverride "levy_icon" {
			icon = {
				size = { 40 40 }
				texture = "gfx/interface/icons/icon_soldier.dds"
			}
		}
		blockoverride "levy_bg" {
			texture = "gfx/interface/illustrations/men_at_arms_big/levies.dds"

		}
	}

	type widget_bbv_maa_progressbars = vbox {
		# size = { 100% 100% }
		layoutpolicy_horizontal = expanding


		widget = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			progressbar = {
				visible = "[CombatWindow.GetCombat.MakeScope.Var('bbv_max_maa').IsSet]"
				parentanchor = bottom
				block "progress_behind" {
					position = { 2 0 }
				}
				size = { 100% 100% }
				max = "[FixedPointToFloat( CombatWindow.GetCombat.MakeScope.Var('bbv_max_maa').GetValue )]"
				min = 0
				# block "progresstexture" {
				# }
				progresstexture = "gfx/interface/colors/black.dds"
				noprogresstexture = "gfx/0.dds"
				block "right_mirror" {}
				block "progress_toughness" {
					value = "[Multiply_CFixedPoint(CombatMaaItem.GetStat( 'toughness' ), IntToFixedPoint(CombatMaaItem.GetCurrentStrength))]"
				}
			}
			progressbar = {
				visible = "[CombatWindow.GetCombat.MakeScope.Var('bbv_max_maa').IsSet]"
				parentanchor = bottom
				position = { 0 0 }
				size = { 100% 100% }
				max = "[FixedPointToFloat( CombatWindow.GetCombat.MakeScope.Var('bbv_max_maa').GetValue )]"
				min = 0
				block "progresstexture" {
					progresstexture = "gfx/interface/progressbars/progress_standard.dds"
				}
				noprogresstexture = "gfx/0.dds"
				block "right_mirror" {}
				block "progress_toughness" {
					value = "[Multiply_CFixedPoint(CombatMaaItem.GetStat( 'toughness' ), IntToFixedPoint(CombatMaaItem.GetCurrentStrength))]"
				}
			}

			widget = {
				# layoutpolicy_horizontal = expanding
				size = { 100% 12 }

				progressbar = {
					visible = "[CombatWindow.GetCombat.MakeScope.Var('bbv_max_maa').IsSet]"
					block "progress_behind" {
						position = { 2 0 }
					}
					size = { 100% 100% }
					max = "[FixedPointToFloat( CombatWindow.GetCombat.MakeScope.Var('bbv_max_maa').GetValue )]"
					min = 0
					progresstexture = "gfx/interface/colors/black.dds"
					noprogresstexture = "gfx/0.dds"
					block "right_mirror" {}
					block "progress_damage" {
						value = "[Multiply_CFixedPoint(Multiply_CFixedPoint(CombatMaaItem.GetStat( 'damage' ), IntToFixedPoint(CombatMaaItem.GetCurrentStrength)), GetDefine('NCombat','DAMAGE_SCALING_FACTOR'))]"
					}

				}
				progressbar = {
					icon = {
						texture = "gfx/interface/colors/black.dds"
						alpha = 0.1
						size = { 100% 100% }
					}
					visible = "[CombatWindow.GetCombat.MakeScope.Var('bbv_max_maa').IsSet]"
					size = { 100% 100% }
					max = "[FixedPointToFloat( CombatWindow.GetCombat.MakeScope.Var('bbv_max_maa').GetValue )]"
					min = 0
					progresstexture = "gfx/interface/progressbars/progress_orange.dds"
					noprogresstexture = "gfx/0.dds"
					block "right_mirror" {}
					block "progress_damage" {
						value = "[Multiply_CFixedPoint(Multiply_CFixedPoint(CombatMaaItem.GetStat( 'damage' ), IntToFixedPoint(CombatMaaItem.GetCurrentStrength)), GetDefine('NCombat','DAMAGE_SCALING_FACTOR'))]"
					}
				}
			}
		}
	}

	type flowcontainer_reinforcements = flowcontainer {
		ignoreinvisible = yes
		spacing = 10

		text_single = {
			raw_text = "Reinforcements:"
			visible = "[Or(GreaterThan_CFixedPoint(GuiScope.SetRoot( Character.MakeScope).AddScope('province', CombatWindow.GetCombat.GetProvince.MakeScope ).ScriptValue('reinforcements_close_by'), '(CFixedPoint)0'), GreaterThan_CFixedPoint(GuiScope.SetRoot( Character.MakeScope).AddScope('province', CombatWindow.GetCombat.GetProvince.MakeScope ).ScriptValue('reinforcements_nearby'), '(CFixedPoint)0'))]"
		}

		flowcontainer = {
			ignoreinvisible = yes
			spacing = 10
			block "order" {}
			# direction = vertical

			text_single = {
				visible = "[GreaterThan_CFixedPoint(GuiScope.SetRoot( Character.MakeScope).AddScope('province', CombatWindow.GetCombat.GetProvince.MakeScope ).ScriptValue('reinforcements_close_by'), '(CFixedPoint)0')]"
				raw_text = "[GuiScope.SetRoot( Character.MakeScope).AddScope('province', CombatWindow.GetCombat.GetProvince.MakeScope ).ScriptValue('reinforcements_close_by')|v0] close"
			}

			text_single = {
				visible = "[GreaterThan_CFixedPoint(GuiScope.SetRoot( Character.MakeScope).AddScope('province', CombatWindow.GetCombat.GetProvince.MakeScope ).ScriptValue('reinforcements_nearby'), '(CFixedPoint)0')]"
				raw_text = "[GuiScope.SetRoot( Character.MakeScope).AddScope('province', CombatWindow.GetCombat.GetProvince.MakeScope ).ScriptValue('reinforcements_nearby')|v0] nearby"
			}
		}
	}

	type knight_portrait = portrait_body {
		datacontext = "[Scope.GetCharacter]"

		blockoverride "portrait_button"
		{
			block "portrait_texture" {
				portrait_texture = "[Character.GetPortrait('environment_combat_window', 'camera_body_left', 'throne_room_one_handed_passive_1', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
			}
			mask = "gfx/portraits/portrait_mask_blank.dds"

			portrait_scale = { -1 1 }
			portrait_offset = { 1 0 }
		}

		text_label_center = {
			margin_right = 5
			parentanchor = center
			position = { 0 50 }
			background = { using = Background_Area_Solid }
			raw_text = "@skill_prowess_icon![Character.GetProwess]"
			default_format = "#high"
		}

		blockoverride "coa" {}
		blockoverride "opinion_box" {}
		blockoverride "status_icons" {}
	}

	type vbox_combat_side_left = vbox {
		layoutpolicy_vertical = expanding
		datacontext = "[CombatWindow.GetLeftCombatSide]"
		datacontext = "[CombatSide.GetComposition]"
		datacontext = "[CombatWindow.GetLeftSideMainParticipant]"
		spacing = 10
		margin_top = 155

		# expand = {
		# 	visible = "[Not(GetVariableSystem.Exists('big_battle'))]"
		# }

		vbox = {
			layoutpolicy_horizontal = expanding
			spacing = 15
			blockoverride "left" {
				righttoleft = yes
			}
			blockoverride "align_left" {
				align = right
			}

			blockoverride "battle_bg_margins" {
				margin_right = 5
			}

			blockoverride "progress_behind" {
				position = { -2 0 }
			}
			blockoverride "progress_behind2" {
				position = { -2 0 }
			}

			using = background_battle_short

			hbox = {
				layoutpolicy_horizontal = expanding

				levies_maa = {
					blockoverride "right_mirror" {
						mirror = horizontal
					}
					blockoverride "visible_compact" {
						visible = "[Or(GreaterThan_int32(GetDataModelSize(CombatWindow.GetLeftSideMaaTypes), '(int32)5'), GetVariableSystem.Exists('compact_combat'))]"
					}
					blockoverride "visible_big" {
						visible = "[And(LessThan_int32(GetDataModelSize(CombatWindow.GetLeftSideMaaTypes), '(int32)5'), Not(GetVariableSystem.Exists('compact_combat')))]"
					}
					blockoverride "levy_progress" {
						max = "[ArmyComposition.GetMaxNumberOfLevies]"
						value = "[ArmyComposition.GetCurrentNumberOfLevies]"
						#
					}
				}

				expand = {}
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				vbox = {
					visible = "[DataModelHasItems(CombatWindow.GetLeftSideMaaTypes)]"
					spacing = 15
					name = "maa"
					datamodel = "[CombatWindow.GetLeftSideMaaTypes]"
					item = {
						container_text_maa = {
							blockoverride "right_mirror" {
								mirror = horizontal
							}
							blockoverride "stat_spacing"
							{
								righttoleft = yes
							}
						}
					}
				}

				expand = {}
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				spacing = 15
				margin = { 5 0 }
				visible = "[Not(GreaterThan_int32( CombatWindow.GetLeftKnightCount, '(int32)0' ))]"

				background = {
					using = Text_Label_Background margin = { 5 5 }
					alpha = 0.7
					modify_texture = {
						name = "mask"
						texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
						spriteType = Corneredstretched
						spriteborder = { 0 0 }
						blend_mode = alphamultiply
					}
				}

				text_single = {
					text = "CW_NO_KNIGHTS"
					align = nobaseline
					default_format = "#low"
				}
			}

			divider = {
				layoutpolicy_horizontal = expanding
				visible = "[GreaterThan_int32( CombatWindow.GetLeftKnightCount, '(int32)0' )]"
			}

			hbox_knights_combat_stats = {
				visible = "[GreaterThan_int32( CombatWindow.GetLeftKnightCount, '(int32)0' )]"
				datacontext = "[CombatWindow.GetLeftSideMainParticipant]"
				blockoverride "left_edge" {
				}
				blockoverride "right_mirror" {
					mirror = horizontal
				}
			}

			hbox = {
				layoutpolicy_horizontal = expanding

				dynamicgridbox = {
					flipdirection = yes
					block "knight_wrap" {
						datamodel_wrap = 8
					}
					datamodel = "[CombatWindow.GetCombat.MakeScope.GetList('attacker_knights')]"
					visible = "[And(CombatWindow.GetLeftCombatSide.IsAttacker, DataModelHasItems(CombatWindow.GetCombat.MakeScope.GetList('attacker_knights')))]"

					item = {
						portrait_knight_bbv = {
							datacontext = "[Scope.GetCharacter]"
						}
					}
				}

				dynamicgridbox = {
					flipdirection = yes
					block "knight_wrap" {
						datamodel_wrap = 8
					}
					datamodel = "[CombatWindow.GetCombat.MakeScope.GetList('defender_knights')]"
					visible = "[And(Not(CombatWindow.GetLeftCombatSide.IsAttacker), DataModelHasItems(CombatWindow.GetCombat.MakeScope.GetList('defender_knights')))]"

					item = {
						portrait_knight_bbv = {
							datacontext = "[Scope.GetCharacter]"
						}
					}
				}

				expand = { }
			}
		}

		expand = {}
	}

	type vbox_combat_side_right = vbox {
		layoutpolicy_vertical = expanding
		datacontext = "[CombatWindow.GetRightCombatSide]"
		datacontext = "[CombatSide.GetComposition]"
		datacontext = "[CombatWindow.GetRightSideMainParticipant]"
		spacing = 10
		margin_top = 155

		# expand = {
		# 	visible = "[Not(GetVariableSystem.Exists('big_battle'))]"
		# }

		vbox = {
			layoutpolicy_horizontal = expanding
			spacing = 15

			blockoverride "battle_bg_margins" {
				margin_left = 0
			}

			using = background_battle_short

			hbox = {
				layoutpolicy_horizontal = expanding
				margin_left = 5

				# right side
				levies_maa = {
					blockoverride "progresstexture" {
						progresstexture = "gfx/interface/progressbars/progress_grandeur_decrease.dds"
					}
					blockoverride "image_right" {
						mirror = horizontal
					}
					blockoverride "levy_progress" {
						max = "[ArmyComposition.GetMaxNumberOfLevies]"
						value = "[ArmyComposition.GetCurrentNumberOfLevies]"
					}
					blockoverride "right_progressbar_bg" {
						righttoleft = yes
					}
					blockoverride "right_progressbar" {
						# mirror = horizontal
					}
					blockoverride "right" {
						righttoleft = yes
						# margin_left = 20
					}
					blockoverride "size_align" {
						align = right|nobaseline
					}
				}

				expand = {}
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				margin_left = 5

				vbox = {
					visible = "[DataModelHasItems(CombatWindow.GetRightSideMaaTypes)]"
					spacing = 15
					name = "maa"
					datamodel = "[CombatWindow.GetRightSideMaaTypes]"
					item = {
						container_text_maa = {
							blockoverride "progresstexture" {
								progresstexture = "gfx/interface/progressbars/progress_grandeur_decrease.dds"
							}
							blockoverride "image_right" {
								mirror = horizontal
							}
							blockoverride "size_align" {
								align = right|nobaseline
							}
							blockoverride "right_status" {
								position = { 600 0 }
							}
							blockoverride "right_progressbar_bg" {
								righttoleft = yes
							}
							blockoverride "right_progressbar" {
								# mirror = horizontal
							}
							blockoverride "right" {
								righttoleft = yes
								# margin_left = 20
							}
							blockoverride "parentanchor" {}
						}
					}
				}
				expand = {}
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				spacing = 15
				margin = { 5 0 }
				visible = "[Not(GreaterThan_int32( CombatWindow.GetRightKnightCount, '(int32)0' ))]"

				background = {
					using = Text_Label_Background margin = { 5 5 }
					alpha = 0.7
					modify_texture = {
						name = "mask"
						texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
						spriteType = Corneredstretched
						spriteborder = { 0 0 }
						blend_mode = alphamultiply
					}
				}

				text_single = {
					name = "right_no_knights"
					text = "CW_NO_KNIGHTS"
					align = nobaseline
					default_format = "#low"
				}
			}

			divider = {
				layoutpolicy_horizontal = expanding
				visible = "[GreaterThan_int32( CombatWindow.GetRightKnightCount, '(int32)0' )]"
			}

			hbox_knights_combat_stats = {
				visible = "[GreaterThan_int32( CombatWindow.GetRightKnightCount, '(int32)0' )]"
				datacontext = "[CombatWindow.GetRightSideMainParticipant]"

				blockoverride "show_knights" {
					visible = "[GreaterThan_int32( CombatWindow.GetRightKnightCount, '(int32)0' )]"
				}

				blockoverride "progresstexture" {
					texture = "gfx/interface/progressbars/progress_grandeur_decrease.dds"
				}

				blockoverride "right" {
					righttoleft = yes
				}

				blockoverride "knight_count" {
					align = right|nobaseline
					min_width = 112
					max_width = 112
					raw_text = "[CombatWindow.GetRightSideMainParticipant.Custom('KnightCulturePluralNoTooltip')]  #v [CombatWindow.GetRightKnightCount]#!"
					tooltip = "COW_TT_KNIGHT_COUNT_RIGHT"
				}
				blockoverride "attacker" {
					visible = "[CombatWindow.GetRightCombatSide.IsAttacker]"
				}
				blockoverride "defender" {
					visible = "[Not(CombatWindow.GetRightCombatSide.IsAttacker)]"
				}
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				expand = {}

				dynamicgridbox = {
					flipdirection = yes
					block "knight_wrap" {
						datamodel_wrap = 8
					}
					datamodel = "[CombatWindow.GetCombat.MakeScope.GetList('defender_knights')]"

					visible = "[And(CombatWindow.GetLeftCombatSide.IsAttacker, DataModelHasItems(CombatWindow.GetCombat.MakeScope.GetList('defender_knights')))]"
					item = {
						portrait_knight_bbv = {
							datacontext = "[Scope.GetCharacter]"
						}
					}
				}

				dynamicgridbox = {
					flipdirection = yes
					block "knight_wrap" {
						datamodel_wrap = 8
					}
					datamodel = "[CombatWindow.GetCombat.MakeScope.GetList('attacker_knights')]"

					visible = "[And(Not(CombatWindow.GetLeftCombatSide.IsAttacker), DataModelHasItems(CombatWindow.GetCombat.MakeScope.GetList('attacker_knights')))]"

					item = {
						portrait_knight_bbv = {
							datacontext = "[Scope.GetCharacter]"
						}
					}
				}
			}
		}

		expand = {}
	}

	type margin_battle_background = margin_widget {
		size = { 100% 100% }

		icon = {
			texture = "gfx/interface/component_tiles/tile_window_background_no_edge.dds"
			spriteType = Corneredtiled
			size = { 100% 40% }
			alwaystransparent = no
		}

		icon = {
			texture = "gfx/interface/component_tiles/tile_window_background_no_edge.dds"
			spriteType = Corneredtiled
			size = { 100% 60% }
			position = { 0 40% }

			modify_texture = {
				visible = "[GetVariableSystem.Exists('army_hole')]"
				texture = "gfx/interface/window_combat/combat_bg_darken.dds"
				blend_mode = alphamultiply
				mirror = vertical
				alpha = 1
			}
		}

		icon = {
			datacontext = "[CombatWindow.GetCombat.GetProvince.GetTerrain]"
			size = { 100% 100% }
			alpha = 1
			texture = "[Terrain.GetIllustration]"

			modify_texture = {
				texture = "gfx/interface/component_masks/mask_fade_horizontal_middle.dds"
				blend_mode = alphamultiply
				alpha = 0.4
			}

			modify_texture = {
				texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
				blend_mode = alphamultiply
				alpha = 0.4
				rotate_uv = -4.75
				translate_uv = { 0 -0.3 }
			}

			modify_texture = {
				texture = "gfx/interface/window_combat/combat_bg_darken.dds"
				blend_mode = alphamultiply
				alpha = 0.3
			}

			modify_texture = {
				visible = "[GetVariableSystem.Exists('army_hole')]"
				texture = "gfx/interface/window_combat/combat_bg_darken.dds"
				blend_mode = alphamultiply
				mirror = vertical
				alpha = 1
			}
		}

		widget = {
			size = { 100% 100% }
			alpha = 0.6

			icon = {
				visible = "[CombatWindow.IsCombatInPursuitPhase]"
				size = { 100% 90 }
				parentanchor = top|hcenter
				using = Background_Area_Dark
				color = { 0.1 0.1 0.1 1 }

				modify_texture = {
					texture = "gfx/interface/window_combat/combat_bg_mask.dds"
					blend_mode = alphamultiply
					spriteType = corneredStretched
					spriteborder_top = 200
					spriteborder_right = 200
					spriteborder_left = 200
				}

				using = Animation_ShowHide_Standard
			}
		}
	}

	type big_battle_date = icon {
		name = "timeline_widget"
		visible = "[And( Not(IsGameViewOpen('barbershop')), And( And( Not( IsPauseMenuShown ), TimelineWidget.ShouldBeVisible ), Not(GetVariableSystem.Exists('royal_court_screenshot_window'))))]"
		size = { 649 65 }
		parentanchor = bottom|right
		filter_mouse = all
		alwaystransparent = yes
		layer = top
		allow_outside = yes
		texture = "gfx/interface/skinned/hud_bg_gamespeed.dds"

		using = Animation_ShowHide_Quick

		widget = {
			parentanchor = bottom|right
			size = { 629 45 }
			allow_outside = yes

			icon = {
				parentanchor = top|right
				position = { 7 -15}
				texture = "gfx/interface/skinned/component_decoration/decoration_arch.dds"
				size = { 30 30 }
			}

			icon = {
				visible = "[IsManuallyPaused]"
				size = { 100% 100% }
				texture = "gfx/interface/skinned/hud_pause_indicator.dds"
				color = { 0.4 0.25 0.25 0.7 }

				state = {
					name = _show
					using = Animation_FadeIn_Quick
				}

				state = {
					name = _hide
					using = Animation_FadeOut_Standard
				}
			}

			icon = {
				visible = "[IsPausedByEvent]"
				size = { 100% 100% }
				texture = "gfx/interface/skinned/hud_pause_indicator.dds"
				color = { 0.3 0.3 0.3 0.7 }

				state = {
					name = _show
					using = Animation_FadeIn_Quick
				}

				state = {
					name = _hide
					using = Animation_FadeOut_Standard
				}
			}

			# hotkeys_HUD = {}

			### Extra Buttons
			flowcontainer = {
				name = "extra_buttons_menu"
				visible = "[And( Not( IsPauseMenuShown ), GetVariableSystem.Exists( 'extra_buttons_expand' ))]"
				visible_at_creation = no
				parentanchor = bottom|right
				widgetanchor = bottom|hcenter
				position = { -570 -20 }
				alwaystransparent = no
				margin = { 40 40 }
				direction = vertical
				spacing = 3
				ignoreinvisible = yes
				allow_outside = yes

				background = {
					using = Background_Area_Dark
					margin = { -25 -25 }
				}

				state = {
					name = _show
					using = Animation_FadeIn_Quick

					position_y = -20
				}

				state = {
					name = _hide

					using = Animation_FadeOut_Quick
					position_y = 60
				}

				state = {
					name = _mouse_hierarchy_leave
					on_finish = "[GetVariableSystem.Clear( 'extra_buttons_expand' )]"
				}

				button_standard = {
					name = "find_character_button"
					text = "FIND_CHARACTER"
					onclick = "[ToggleGameView( 'character_finder' )]"
					onclick = "[GetVariableSystem.Toggle( 'extra_buttons_expand' )]"
					tooltip = "IM_TT_FIND_CHARACTER"
					shortcut = "character_finder"
				}

				button_standard = {
					name = "find_title_button"

					onclick = "[ToggleGameView( 'find_title' )]"
					onclick = "[GetVariableSystem.Toggle( 'extra_buttons_expand' )]"

					down = "[IsGameViewOpen('find_title')]"
					shortcut = "find_title_shortcut"

					text = "FIND_TITLE"
					tooltip = "IM_TT_FIND_TITLE"
				}

				button_standard = {
					name = "legacy_button"
					text = "SHOW_LEGACY"
					onclick = "[ToggleGameViewData( 'lineage_view', GetPlayer.GetID )]"
					down = "[IsGameViewOpen('succession_event')]"
					onclick = "[GetVariableSystem.Toggle( 'extra_buttons_expand' )]"
					tooltip = "IM_TT_SHOW_LEGACY"
				}

				button_standard = {
					name = "go_to_capital_button"
					text = "GO_TO_CAPITAL"
					onclick = "[OnGoToPlayerCapital]"
					onclick = "[GetVariableSystem.Toggle( 'extra_buttons_expand' )]"
					shortcut = "go_to_capital"
					tooltip = "IM_TT_GO_TO_CAPITAL"
					visible = "[GetPlayer.IsValid]"
				}
			}

			hbox = {
				margin_left = 35
				allow_outside = yes

				hbox = {
					margin_top = 12
					spacing = 3

					button_dots = {
						name = "button_hud_extra_buttons"
						onclick = "[GetVariableSystem.Toggle( 'extra_buttons_expand' )]"
						tooltip = MORE_POPOUT_TT
						using = tooltip_ne
					}

					button_menu = {
						name = "pause_menu_button"
						onclick = "[OnPauseMenu]"
						tooltip = INGAME_MENU_TT
						using = tooltip_ne

						tooltipwidget = {
							using = TooltipWithFakeShortcut
							blockoverride "shortcut_text"
							{
								text = FAKE_ESCAPE
							}
						}
					}

					button_encyclopedia_small = {
						name = "encyclopedia_button_extended_menu"
						tooltip = "OPEN_ENCYCLOPEDIA"
						onclick = "[ToggleEncyclopedia]"
						shortcut = "encyclopedia"
						using = tooltip_ne
					}
				}

				hbox = {
					name = "tutorial_highlight_bottom_right_bar"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					margin_right = 5
					margin_left = 15
					margin_top = 12
					allow_outside = yes

					## Date
					button_standard_hover = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						onclick = "[OnPause]"

						tooltip = "CURRENT_DATE_TOOLTIP"
						using = tooltip_nw
						tooltip_offset = { 0 10 }

						margin_widget = {
							visible = "[Not(Or(IsPausedByEvent, IsManuallyPaused))]"
							size = { 100% 100% }

							state = {
								name = _show
								using = Animation_FadeIn_Quick
							}

							state = {
								name = _hide
								using = Animation_FadeOut_Standard
							}

							Animation_HUD_daily_tick = {
								visible = "[EqualTo_int32(GetCurrentGameSpeed, '(int32)1')]"
								size = { 100% 100% }

								blockoverride "duration"
								{
									duration = 30
								}

								blockoverride "alpha"
								{
									alpha = 0.3
								}
							}

							Animation_HUD_daily_tick = {
								visible = "[EqualTo_int32(GetCurrentGameSpeed, '(int32)2')]"
								size = { 100% 100% }

								blockoverride "duration"
								{
									duration = 15
								}

								blockoverride "alpha"
								{
									alpha = 0.25
								}
							}

							Animation_HUD_daily_tick = {
								visible = "[EqualTo_int32(GetCurrentGameSpeed, '(int32)3')]"
								size = { 100% 100% }

								blockoverride "duration"
								{
									duration = 7.5
								}

								blockoverride "alpha"
								{
									alpha = 0.2
								}
							}

							Animation_HUD_daily_tick = {
								visible = "[EqualTo_int32(GetCurrentGameSpeed, '(int32)4')]"
								size = { 100% 100% }

								blockoverride "duration"
								{
									duration = 3.75
								}

								blockoverride "alpha"
								{
									alpha = 0.15
								}
							}

							Animation_HUD_daily_tick = {
								visible = "[EqualTo_int32(GetCurrentGameSpeed, '(int32)5')]"
								size = { 100% 100% }

								blockoverride "duration"
								{
									duration = 1.9
								}

								blockoverride "alpha"
								{
									alpha = 0.15
								}
							}
						}

						hbox = {
							margin = { 5 0 }
							margin_bottom = 2

							hbox = {
								layoutpolicy_horizontal = expanding
								margin_top = 2
								margin_right = 2

								expand = {}

								text_single = {
									name = "date_text_sp"
									visible = "[Not(GameHasMultiplePlayers)]"
									layoutpolicy_horizontal = expanding

									text = "CURRENT_DATE"
									default_format = "#date"
									autoresize = no
									align = right|nobaseline
									using = Font_Size_Medium
								}

								text_single = {
									name = "date_text_mp"
									visible = "[GameHasMultiplePlayers]"
									layoutpolicy_horizontal = expanding

									text = "CURRENT_DATE"
									default_format = "#medium;glow_color:{0.1,0.1,0.1,1}"
									autoresize = no
									align = right|nobaseline
									using = Font_Size_Medium
								}
							}

							container = {
								name = "pause_play_icons"

								button_pause = {
									visible = "[Not(Or(IsPausedByEvent, IsManuallyPaused))]"
									alwaystransparent = yes
									parentanchor = center
								}

								button_play = {
									visible = "[Or(IsPausedByEvent, IsManuallyPaused)]"
									alwaystransparent = yes
									parentanchor = center
								}
							}
						}
					}

					button_normal = {
						shortcut = "decrease_speed"
						shortcut = "decrease_speed_2"
						shortcut = "decrease_speed_3"
						onclick = "[OnDecreaseGameSpeed]"
					}

					button_normal = {
						shortcut = "increase_speed"
						shortcut = "increase_speed_2"
						shortcut = "increase_speed_3"
						onclick = "[OnIncreaseGameSpeed]"
					}

					hbox = {
						layoutpolicy_vertical = expanding
						margin = { 0 -4 }
						allow_outside = yes

						icon = {
							name = "speed_indicator"
							layoutpolicy_vertical = expanding
							size = { 170 0 }
							framesize = { 200 28 }
							texture = "gfx/interface/hud/speed_indicator.dds"
							frame = "[GetCurrentGameSpeed]"
							tooltip = "CURRENT_SPEED_TOOLTIP"
							tooltip_offset = { 0 -170 }
							alpha = 0.8

							modify_texture = {
								visible = "[IsPausedByEvent]"
								texture = "gfx/interface/hud/speed_indicator_auto_pause.dds"
								spritetype = corneredtiled
								blend_mode = darken
								texture_density = 2
							}

							modify_texture = {
								visible = "[And(IsManuallyPaused, Not(IsPausedByEvent))]"
								texture = "gfx/interface/hud/speed_indicator_pause.dds"
								spritetype = corneredtiled
								blend_mode = darken
								texture_density = 2
							}

							modify_texture = {
								visible = "[Not(Or(IsPausedByEvent, IsManuallyPaused))]"
								texture = "gfx/interface/hud/speed_indicator_play.dds"
								spritetype = corneredtiled
								blend_mode = darken
								texture_density = 2
							}

							button = {
								visible = "[Not( GameHasMultiplePlayers )]"
								onclick = "[OnPause]"
								shortcut = "pause"
							}

							icon = {
								parentanchor = right|vcenter
								position = { 10 0 }
								size = { 15 90%}
								texture = "gfx/interface/skinned/overlay_stone.dds"
								color = { 0.32 0.32 0.32 1 }
							}

							icon = {
								size = { 100% 100% }
								texture = "gfx/interface/skinned/speed_indicator_frame.dds"
							}

							hbox = {
								margin_left = 6
								margin_right = 6

								button = {
									name = "speed_1"
									shortcut = "speed_1"
									layoutpolicy_horizontal = shrinking
									layoutpolicy_vertical = expanding
									size = { 34 18 }

									alwaystransparent = "[EqualTo_int32(GetCurrentGameSpeed, '(int32)1')]"
									onclick = "[SetGameSpeed('(int32)0')]"
									tooltip = "CHANGE_SPEED_TOOLTIP_1"
									using = tooltip_ne

									alpha = 0

									state = {
										name = _mouse_enter
										alpha = 1
										duration = 0.1
										using = Animation_Curve_Default
									}

									state = {
										name = _mouse_leave
										alpha = 0
										duration = 0.1
										using = Animation_Curve_Default
									}

									margin_widget = {
										size = { 100% 100% }
										margin = { 0 8 }

										icon = {
											size = { 100% 100% }
											texture = "gfx/interface/hud/speed_indicator_mouseover.dds"
										}
									}
								}

								button = {
									name = "speed_2"
									shortcut = "speed_2"
									layoutpolicy_horizontal = shrinking
									layoutpolicy_vertical = expanding
									size = { 34 18 }

									alwaystransparent = "[EqualTo_int32(GetCurrentGameSpeed, '(int32)2')]"
									onclick = "[SetGameSpeed('(int32)1')]"
									tooltip = "CHANGE_SPEED_TOOLTIP_2"
									using = tooltip_ne

									alpha = 0

									state = {
										name = _mouse_enter
										alpha = 1
										duration = 0.1
										using = Animation_Curve_Default
									}

									state = {
										name = _mouse_leave
										alpha = 0
										duration = 0.1
										using = Animation_Curve_Default
									}

									margin_widget = {
										size = { 100% 100% }
										margin = { 0 8 }

										icon = {
											size = { 100% 100% }
											texture = "gfx/interface/hud/speed_indicator_mouseover.dds"
										}
									}
								}

								button = {
									name = "speed_3"
									shortcut = "speed_3"
									layoutpolicy_horizontal = shrinking
									layoutpolicy_vertical = expanding
									size = { 34 18 }

									alwaystransparent = "[EqualTo_int32(GetCurrentGameSpeed, '(int32)3')]"
									onclick = "[SetGameSpeed('(int32)2')]"
									tooltip = "CHANGE_SPEED_TOOLTIP_3"
									using = tooltip_ne

									alpha = 0

									state = {
										name = _mouse_enter
										alpha = 1
										duration = 0.1
										using = Animation_Curve_Default
									}

									state = {
										name = _mouse_leave
										alpha = 0
										duration = 0.1
										using = Animation_Curve_Default
									}

									margin_widget = {
										size = { 100% 100% }
										margin = { 0 8 }

										icon = {
											size = { 100% 100% }
											texture = "gfx/interface/hud/speed_indicator_mouseover.dds"
										}
									}
								}

								button = {
									name = "speed_4"
									shortcut = "speed_4"
									layoutpolicy_horizontal = shrinking
									layoutpolicy_vertical = expanding
									size = { 34 18 }

									alwaystransparent = "[EqualTo_int32(GetCurrentGameSpeed, '(int32)4')]"
									onclick = "[SetGameSpeed('(int32)3')]"
									tooltip = "CHANGE_SPEED_TOOLTIP_4"
									using = tooltip_ne

									alpha = 0

									state = {
										name = _mouse_enter
										alpha = 1
										duration = 0.1
										using = Animation_Curve_Default
									}

									state = {
										name = _mouse_leave
										alpha = 0
										duration = 0.1
										using = Animation_Curve_Default
									}

									margin_widget = {
										size = { 100% 100% }
										margin = { 0 8 }

										icon = {
											size = { 100% 100% }
											texture = "gfx/interface/hud/speed_indicator_mouseover.dds"
										}
									}
								}

								button = {
									name = "speed_5"
									shortcut = "speed_5"
									layoutpolicy_horizontal = shrinking
									layoutpolicy_vertical = expanding
									size = { 34 18 }

									alwaystransparent = "[EqualTo_int32(GetCurrentGameSpeed, '(int32)5')]"
									onclick = "[SetGameSpeed('(int32)4')]"
									tooltip = "CHANGE_SPEED_TOOLTIP_5"
									using = tooltip_ne

									alpha = 0

									state = {
										name = _mouse_enter
										alpha = 1
										duration = 0.1
										using = Animation_Curve_Default
									}

									state = {
										name = _mouse_leave
										alpha = 0
										duration = 0.1
										using = Animation_Curve_Default
									}

									margin_widget = {
										size = { 100% 100% }
										margin = { 0 8 }

										icon = {
											size = { 100% 100% }
											texture = "gfx/interface/hud/speed_indicator_mouseover.dds"
										}
									}
								}
							}
						}
					}
				}

				# widget_gamespeed_sounds = {}
			}
		}
	}

	type battle_edge_bg = widget {
		size = { 450 100% }
		# using = background_battle_short
		alpha = 0.65

		background = {
			using = Background_Area_Border_Solid
			# alpha = 0.7
			modify_texture = {
				name = "mask"
				texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
				spriteType = Corneredstretched
				spriteborder = { 0 0 }
				blend_mode = alphamultiply
				alpha = 1
				block "mirror" {
					mirror = horizontal
				}
			}
		}
	}

	type flow_combat_side_stats = flowcontainer {
		ignoreinvisible = yes
		visible = "[Not(GetVariableSystem.Exists('total_maa_stats'))]"
		spacing = 5

		block "right" {}

		flowcontainer = {
			ignoreinvisible = yes
			spacing = 5

			icon = {
				size = { 32 32 }
				texture = "gfx/interface/icons/regimenttypes/unit_stat_toughness.dds"
				enabled = no
			}

			text_single = {
				raw_text = "#v [GuiScope.SetRoot(CombatWindow.GetLeftSideMainParticipant.MakeScope).AddScope( 'location', CombatWindow.GetCombat.GetProvince.MakeScope).ScriptValue('bbv_total_combat_side_toughness')|0*]"


				min_width = 50
			}
		}

		spacer = { size = { 10 0 } }

		flowcontainer = {
			ignoreinvisible = yes

			spacing = 5

			icon = {
				size = { 32 32 }
				texture = "gfx/interface/icons/regimenttypes/unit_stat_damage.dds"
			}

			text_single = {
				raw_text = "#v [GuiScope.SetRoot(CombatWindow.GetLeftSideMainParticipant.MakeScope).AddScope( 'location', CombatWindow.GetCombat.GetProvince.MakeScope).ScriptValue('bbv_total_combat_side_damage')|0*]"

				min_width = 50
			}
		}
	}

	type portrait_knight_bbv = widget {
		size = { 65 90 }

		# that's compatibility with another mod
		blockoverride "soldiers" {
			visible = no
		}

		widget = {
			size = { 100% 100% }
			using = Portrait_Background_Glows

			block "empty_character" {}
		}

		portrait_button = {
			parentanchor = bottom|hcenter
			size = { 80 100 }
			using = portrait_base

			block "portrait_texture"
			{
				portrait_texture = "[Character.GetPortrait('environment_head', 'camera_head', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
			}

			mask = "gfx/portraits/portrait_mask_head_small.dds"
			effectname = "NoHighlight"

			highlight_icon = {
				name = "prison_bars"
				visible = "[Character.IsImprisoned]"
				visible_at_creation = no
				size = { 80 88 }
				parentanchor = center
				effectname = "NoHighlight"
				texture = "gfx/portraits/portrait_prison_head.dds"

				modify_texture = {
					name = "mask"
					texture = "gfx/portraits/portrait_mask_head_small.dds"
					spriteType = Corneredstretched
					blend_mode = alphamultiply
				}
			}

			block "portrait_button" {}
		}

		block "coa" {
			coa_realm_tiny = {
				visible = "[Character.HasLandedTitles]"
				parentanchor = bottom|left
				position = { -2 7 }
				scale = 0.85
			}
		}

		widget = {
			size = { 100% 100% }
			visible = "[Not( Character.HasLandedTitles )]"
			block "empty_character" {}

			background = {
				texture = "gfx/portraits/portrait_frame.dds"
				using = Color_Grey
				margin = { -4 -4 }
				alpha = 0.4

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
					blend_mode = alphamultiply
					mirror = vertical
				}
			}

			background = {
				visible = "[Character.IsHovered]"
				texture = "gfx/portraits/portrait_frame.dds"
				using = Color_Grey
				alpha = 0.7
				margin = { -4 -4 }
			}
		}


		portrait_status_icons_small = {
			parentanchor = right|bottom
			position = { -5 -3 }
		}

		text_single = {
			parentanchor = hcenter|bottom
			margin = { 5 0 }
			position = { 0 -3 }
			background = { using = Background_Area_Solid alpha = 0.7 }
			raw_text = "[Character.GetProwess]"
			default_format = "#high"
			tooltip = "[Character.GetProwessBreakdown]"
		}

		# Portrait unknown glow
		highlight_icon = {
			name = "portrait_unknown_head_small_glow"
			parentanchor = center
			position = { 3 -9 }
			gfxtype = framedbuttongfx
			effectname = "NoHighlight"
			texture = "gfx/portraits/unknown_portraits/button_unknown_head.dds"
			size = { 80 100 }
			framesize = { 384 480 }
			upframe = 1
			overframe = 2
			block "glow_visible" {

				visible = "[Not(Character.IsValid)]"
			}

			block "glow_flip" {}

			block "onclick" {}
		}
	}

	type hbox_knights_combat_stats = margin_widget {
		layoutpolicy_horizontal = expanding
		size = { 0 45 }

		block "left_edge" {
			margin_left = 5
		}

		hbox = {
			layoutpolicy_horizontal = expanding
			block "left_edge" {
				margin_right = 5
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				background = { using = Background_Area_Border_Solid alpha = 0.5 }

				margin = { 3 1 }
				icon = {
					scissor = yes
					layoutpolicy_horizontal = expanding

					# icon = {
					# 	size = { 115% 100% }
					# 	parentanchor = center
					# 	# block "progresstexture" {
					# 	# }
					# 	texture = "gfx/interface/progressbars/progress_grey.dds"
					# 	tintcolor = { 0.75 0.75 0.75 1 }
					# }
				}
			}
		}

		hbox = {
			layoutpolicy_horizontal = expanding

			widget_bbv_maa_progressbars = {
				block "attacker" {
					visible = "[CombatWindow.GetLeftCombatSide.IsAttacker]"
				}
				blockoverride "progress_toughness" {
					value = "[Multiply_CFixedPoint(CombatWindow.GetCombat.MakeScope.ScriptValue('bbv_attacker_knights_toughness'), Character.GetKnightEffectiveness)]"
				}
				blockoverride "progress_damage" {
					value = "[Multiply_CFixedPoint(CombatWindow.GetCombat.MakeScope.ScriptValue('bbv_attacker_knights_damage'), Character.GetKnightEffectiveness)]"
				}
			}
			widget_bbv_maa_progressbars = {
				block "defender" {
					visible = "[Not(CombatWindow.GetLeftCombatSide.IsAttacker)]"
				}
				blockoverride "progress_toughness" {
					value = "[Multiply_CFixedPoint(CombatWindow.GetCombat.MakeScope.ScriptValue('bbv_defender_knights_toughness'), Character.GetKnightEffectiveness)]"
				}
				blockoverride "progress_damage" {
					value = "[Multiply_CFixedPoint(CombatWindow.GetCombat.MakeScope.ScriptValue('bbv_defender_knights_damage'), Character.GetKnightEffectiveness)]"
				}
			}

			widget = {
				size = { 162 0 }
			}
		}

		hbox = {
			spacing = 5
			margin = { 5 0 }
			margin_right = 10
			block "right" {}

			# background = { using = Background_Area_Dark alpha = 0.75 }

			icon = {
				size = { 40 40 }
				texture = "gfx/interface/icons/icon_knight.dds"
			}

			text_single = {
				block "show_knights" {
					visible = "[GreaterThan_int32( CombatWindow.GetLeftKnightCount, '(int32)0' )]"
				}
				using = Font_Size_Medium
				align = nobaseline
				min_width = 128
				max_width = 128
				block "knight_count" {
					tooltip = "COW_TT_KNIGHT_COUNT_LEFT"
					raw_text = "#v [CombatWindow.GetLeftKnightCount] #! [CombatWindow.GetLeftSideMainParticipant.Custom('KnightCulturePluralNoTooltip')]"
				}
			}

			hbox_knights_combat_stats_side = {
				block "attacker" {
					visible = "[CombatWindow.GetLeftCombatSide.IsAttacker]"
				}
			}

			hbox_knights_combat_stats_side = {
				block "defender" {
					visible = "[Not(CombatWindow.GetLeftCombatSide.IsAttacker)]"
				}
				blockoverride "toughness" {
					raw_text = "[Multiply_CFixedPoint(CombatWindow.GetCombat.MakeScope.ScriptValue('bbv_defender_knights_toughness'), Character.GetKnightEffectiveness)|0*]"
				}
				blockoverride "damage" {
					raw_text = "[Multiply_CFixedPoint(CombatWindow.GetCombat.MakeScope.ScriptValue('bbv_defender_knights_damage'), Character.GetKnightEffectiveness)|0*]"
				}
			}

			expand = {}

			text_single = {
				block "show_knights" {
					visible = "[GreaterThan_int32( CombatWindow.GetLeftKnightCount, '(int32)0' )]"
				}
				raw_text = "@knight_icon! [Character.GetKnightEffectiveness|%0]"
				default_format = "#high"
				align = nobaseline
				raw_tooltip = "#T [knight_effectiveness|e]#! [AddLine(CombatWindow.GetLeftSideMainParticipant.GetKnightEffectivenessBreakdown)]"
				# min_width = 100
			}

			spacer = { size = { 10 0 } }

			# expand = {}
		}

		icon = {
			name = "overlay"
			texture = "gfx/interface/progressbars/progress_overlay.dds"
			spriteType = Corneredstretched
			spriteborder = { 2 2 }
			size = { 100% 100% }
		}
	}

	type hbox_knights_combat_stats_side = hbox {
		spacing = 5
		block "right" {}

		hbox = {
			spacing = 5
			icon = {
				size = { 32 32 }
				texture = "gfx/interface/icons/regimenttypes/unit_stat_toughness.dds"
				enabled = no
			}

			text_single = {
				align = nobaseline
				block "toughness" {
					raw_text = "[Multiply_CFixedPoint(CombatWindow.GetCombat.MakeScope.ScriptValue('bbv_attacker_knights_toughness'), Character.GetKnightEffectiveness)|0*]"
				}
				min_width = 65
				default_format = "#v"
			}
		}

		hbox = {
			spacing = 5
			icon = {
				size = { 32 32 }
				texture = "gfx/interface/icons/regimenttypes/unit_stat_damage.dds"
			}

			text_single = {
				align = nobaseline
				block "damage" {
					raw_text = "[Multiply_CFixedPoint(CombatWindow.GetCombat.MakeScope.ScriptValue('bbv_attacker_knights_damage'), Character.GetKnightEffectiveness)|0*]"
				}
				min_width = 65
				default_format = "#v"
			}
		}
	}
}


template background_battle_tall {
	background = {
		texture = "[Terrain.GetIllustration]"
		fittype = centercrop
		alpha = 0.9
		block "bg_mirror" {}
		block "battle_bg_margins" {
			margin = { 20 20 }
			margin_top = 60
			margin_right = 0
		}

		modify_texture = {
			texture = "gfx/interface/component_masks/mask_rough_edges.dds"
			spriteType = Corneredtiled
			spriteborder = { 20 20 }
			blend_mode = alphamultiply
			texture_density = 1
		}
		modify_texture = {
			texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick_vertical.dds"
			blend_mode = alphamultiply
			alpha = 1
		}
		# modify_texture = {
		# 	texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
		# 	blend_mode = alphamultiply
		# 	alpha = 0.3
		# }
	}
}


template battle_trans_window {
	margin = { 15 0 }
	margin_top = 50
	alpha = 1
	modify_texture = {
		texture = "gfx/interface/component_masks/mask_fade_vertical middle_thick_inverse.dds"
		blend_mode = alphamultiply
		alpha = 0.8
	}
}

template background_battle_short {
	background = {
		texture = "[Terrain.GetIllustration]"
		fittype = centercrop
		alpha = 0.8
		# block "bg_mirror" {}
		# block "battle_bg_margins" {
		# }
		margin = { 40 120 }
		margin_top = 60
		block "battle_bg_margins" {
		}


		modify_texture = {
			texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick_vertical.dds"
			blend_mode = alphamultiply
			alpha = 1
		}
		modify_texture = {
			texture = "gfx/interface/component_masks/mask_rough_edges.dds"
			spriteType = Corneredtiled
			spriteborder = { 20 20 }
			blend_mode = alphamultiply
			texture_density = 1
		}
		block "bg_alpha" {}
		# modify_texture = {
		# 	texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
		# 	blend_mode = alphamultiply
		# 	alpha = 0.3
		# }
	}

	background = {
		using = Background_Area_Border_Solid
		alpha = 0.3
		margin = { 40 100 }
		block "battle_bg_margins" {
		}
		block "bg_alpha" {}
		modify_texture = {
			texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick_vertical.dds"
			blend_mode = alphamultiply
			alpha = 1
		}
		modify_texture = {
			texture = "gfx/interface/component_masks/mask_rough_edges.dds"
			spriteType = Corneredtiled
			spriteborder = { 20 20 }
			blend_mode = alphamultiply
			texture_density = 1
		}
	}
}
